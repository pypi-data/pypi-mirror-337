# coding: utf-8

"""
Slurm REST API

API to access and control Slurm

The version of the OpenAPI document: Slurm-24.11.1&openapi/slurmdbd&openapi/slurmctld
Contact: sales@schedmd.com
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from slurmrestpy.models.v0040_openapi_slurmdbd_config_resp import (
    V0040OpenapiSlurmdbdConfigResp,
)


class TestV0040OpenapiSlurmdbdConfigResp(unittest.TestCase):
    """V0040OpenapiSlurmdbdConfigResp unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V0040OpenapiSlurmdbdConfigResp:
        """Test V0040OpenapiSlurmdbdConfigResp
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `V0040OpenapiSlurmdbdConfigResp`
        """
        model = V0040OpenapiSlurmdbdConfigResp()
        if include_optional:
            return V0040OpenapiSlurmdbdConfigResp(
                clusters = [
                    slurmrestpy.models.v0/0/40_cluster_rec.v0.0.40_cluster_rec(
                        controller = slurmrestpy.models.v0_0_42_cluster_rec_controller.v0_0_42_cluster_rec_controller(
                            host = '',
                            port = 56, ),
                        flags = [
                            'REGISTERING'
                            ],
                        name = '',
                        nodes = '',
                        select_plugin = '',
                        associations = slurmrestpy.models.v0_0_40_cluster_rec_associations.v0_0_40_cluster_rec_associations(
                            root = slurmrestpy.models.v0/0/40_assoc_short.v0.0.40_assoc_short(
                                account = '',
                                cluster = '',
                                partition = '',
                                user = '',
                                id = 56, ), ),
                        rpc_version = 56,
                        tres = [
                            slurmrestpy.models.v0/0/40_tres.v0.0.40_tres(
                                type = '',
                                name = '',
                                id = 56,
                                count = 56, )
                            ], )
                    ],
                tres = [
                    slurmrestpy.models.v0/0/40_tres.v0.0.40_tres(
                        type = '',
                        name = '',
                        id = 56,
                        count = 56, )
                    ],
                accounts = [
                    slurmrestpy.models.v0/0/40_account.v0.0.40_account(
                        associations = [
                            slurmrestpy.models.v0/0/40_assoc_short.v0.0.40_assoc_short(
                                account = '',
                                cluster = '',
                                partition = '',
                                user = '',
                                id = 56, )
                            ],
                        coordinators = [
                            slurmrestpy.models.v0/0/40_coord.v0.0.40_coord(
                                name = '',
                                direct = True, )
                            ],
                        description = '',
                        name = '',
                        organization = '',
                        flags = [
                            'DELETED'
                            ], )
                    ],
                users = [
                    slurmrestpy.models.v0/0/40_user.v0.0.40_user(
                        administrator_level = [
                            'Not Set'
                            ],
                        associations = [
                            slurmrestpy.models.v0/0/40_assoc_short.v0.0.40_assoc_short(
                                account = '',
                                cluster = '',
                                partition = '',
                                user = '',
                                id = 56, )
                            ],
                        coordinators = [
                            slurmrestpy.models.v0/0/40_coord.v0.0.40_coord(
                                name = '',
                                direct = True, )
                            ],
                        default = slurmrestpy.models.v0_0_40_user_default.v0_0_40_user_default(
                            account = '',
                            wckey = '', ),
                        flags = [
                            'NONE'
                            ],
                        name = '',
                        old_name = '',
                        wckeys = [
                            slurmrestpy.models.v0/0/40_wckey.v0.0.40_wckey(
                                accounting = [
                                    slurmrestpy.models.v0/0/40_accounting.v0.0.40_accounting(
                                        allocated = slurmrestpy.models.v0_0_40_accounting_allocated.v0_0_40_accounting_allocated(
                                            seconds = 56, ),
                                        id = 56,
                                        start = 56,
                                        tres = slurmrestpy.models.v0/0/40_tres.v0.0.40_tres(
                                            type = '',
                                            name = '',
                                            id = 56,
                                            count = 56, ), )
                                    ],
                                cluster = '',
                                id = 56,
                                name = '',
                                user = '', )
                            ], )
                    ],
                qos = [
                    slurmrestpy.models.v0/0/40_qos.v0.0.40_qos(
                        description = '',
                        flags = [
                            'NOT_SET'
                            ],
                        id = 56,
                        limits = slurmrestpy.models.v0_0_40_qos_limits.v0_0_40_qos_limits(
                            grace_time = 56,
                            max = slurmrestpy.models.v0_0_40_qos_limits_max.v0_0_40_qos_limits_max(
                                active_jobs = slurmrestpy.models.v0_0_40_qos_limits_max_active_jobs.v0_0_40_qos_limits_max_active_jobs(
                                    accruing = slurmrestpy.models.v0/0/40_uint32_no_val.v0.0.40_uint32_no_val(
                                        set = True,
                                        infinite = True,
                                        number = 56, ),
                                    count = slurmrestpy.models.v0/0/40_uint32_no_val.v0.0.40_uint32_no_val(
                                        set = True,
                                        infinite = True,
                                        number = 56, ), ),
                                tres = slurmrestpy.models.v0_0_40_qos_limits_max_tres.v0_0_40_qos_limits_max_tres(
                                    total = [
                                        slurmrestpy.models.v0/0/40_tres.v0.0.40_tres(
                                            type = '',
                                            name = '',
                                            id = 56, )
                                        ],
                                    minutes = slurmrestpy.models.v0_0_40_qos_limits_max_tres_minutes.v0_0_40_qos_limits_max_tres_minutes(
                                        per = slurmrestpy.models.v0_0_40_qos_limits_max_tres_minutes_per.v0_0_40_qos_limits_max_tres_minutes_per(
                                            qos = [
                                                slurmrestpy.models.v0/0/40_tres.v0.0.40_tres(
                                                    type = '',
                                                    name = '',
                                                    id = 56, )
                                                ],
                                            job = ,
                                            account = ,
                                            user = , ), ),
                                    per = slurmrestpy.models.v0_0_40_qos_limits_max_tres_per.v0_0_40_qos_limits_max_tres_per(
                                        node = , ), ),
                                wall_clock = slurmrestpy.models.v0_0_40_qos_limits_max_wall_clock.v0_0_40_qos_limits_max_wall_clock(),
                                jobs = slurmrestpy.models.v0_0_40_qos_limits_max_jobs.v0_0_40_qos_limits_max_jobs(),
                                accruing = slurmrestpy.models.v0_0_40_qos_limits_max_jobs_active_jobs.v0_0_40_qos_limits_max_jobs_active_jobs(), ),
                            factor = slurmrestpy.models.v0/0/40_float64_no_val.v0.0.40_float64_no_val(
                                set = True,
                                infinite = True,
                                number = 1.337, ),
                            min = slurmrestpy.models.v0_0_40_qos_limits_min.v0_0_40_qos_limits_min(
                                priority_threshold = , ), ),
                        name = '',
                        preempt = slurmrestpy.models.v0_0_40_qos_preempt.v0_0_40_qos_preempt(
                            list = [
                                ''
                                ],
                            mode = [
                                'DISABLED'
                                ],
                            exempt_time = , ),
                        priority = ,
                        usage_factor = slurmrestpy.models.v0/0/40_float64_no_val.v0.0.40_float64_no_val(
                            set = True,
                            infinite = True,
                            number = 1.337, ),
                        usage_threshold = , )
                    ],
                wckeys = [
                    slurmrestpy.models.v0/0/40_wckey.v0.0.40_wckey(
                        accounting = [
                            slurmrestpy.models.v0/0/40_accounting.v0.0.40_accounting(
                                allocated = slurmrestpy.models.v0_0_40_accounting_allocated.v0_0_40_accounting_allocated(
                                    seconds = 56, ),
                                id = 56,
                                start = 56,
                                tres = slurmrestpy.models.v0/0/40_tres.v0.0.40_tres(
                                    type = '',
                                    name = '',
                                    id = 56,
                                    count = 56, ), )
                            ],
                        cluster = '',
                        id = 56,
                        name = '',
                        user = '',
                        flags = [
                            'DELETED'
                            ], )
                    ],
                associations = [
                    slurmrestpy.models.v0/0/40_assoc.v0.0.40_assoc(
                        accounting = [
                            slurmrestpy.models.v0/0/40_accounting.v0.0.40_accounting(
                                allocated = slurmrestpy.models.v0_0_40_accounting_allocated.v0_0_40_accounting_allocated(
                                    seconds = 56, ),
                                id = 56,
                                start = 56,
                                tres = slurmrestpy.models.v0/0/40_tres.v0.0.40_tres(
                                    type = '',
                                    name = '',
                                    id = 56,
                                    count = 56, ), )
                            ],
                        account = '',
                        cluster = '',
                        comment = '',
                        default = slurmrestpy.models.v0_0_42_assoc_default.v0_0_42_assoc_default(
                            qos = '', ),
                        flags = [
                            'DELETED'
                            ],
                        max = slurmrestpy.models.v0_0_40_assoc_max.v0_0_40_assoc_max(
                            jobs = slurmrestpy.models.v0_0_40_assoc_max_jobs.v0_0_40_assoc_max_jobs(
                                per = slurmrestpy.models.v0_0_40_assoc_max_jobs_per.v0_0_40_assoc_max_jobs_per(
                                    count = slurmrestpy.models.v0/0/40_uint32_no_val.v0.0.40_uint32_no_val(
                                        set = True,
                                        infinite = True,
                                        number = 56, ),
                                    accruing = slurmrestpy.models.v0/0/40_uint32_no_val.v0.0.40_uint32_no_val(
                                        set = True,
                                        infinite = True,
                                        number = 56, ),
                                    submitted = ,
                                    wall_clock = , ),
                                active = ,
                                accruing = ,
                                total = , ),
                            tres = slurmrestpy.models.v0_0_40_assoc_max_tres.v0_0_40_assoc_max_tres(
                                group = slurmrestpy.models.v0_0_40_assoc_max_tres_group.v0_0_40_assoc_max_tres_group(
                                    minutes = [
                                        slurmrestpy.models.v0/0/40_tres.v0.0.40_tres(
                                            type = '',
                                            name = '',
                                            id = 56, )
                                        ], ),
                                minutes = slurmrestpy.models.v0_0_40_assoc_max_tres_minutes.v0_0_40_assoc_max_tres_minutes(), ),
                            per = slurmrestpy.models.v0_0_40_assoc_max_per.v0_0_40_assoc_max_per(
                                account = slurmrestpy.models.v0_0_40_assoc_max_per_account.v0_0_40_assoc_max_per_account(), ), ),
                        id = slurmrestpy.models.v0/0/40_assoc_short.v0.0.40_assoc_short(
                            cluster = '',
                            partition = '',
                            user = '', ),
                        is_default = True,
                        lineage = '',
                        min = slurmrestpy.models.v0_0_40_assoc_min.v0_0_40_assoc_min(
                            priority_threshold = , ),
                        parent_account = '',
                        partition = '',
                        priority = ,
                        qos = [
                            ''
                            ],
                        shares_raw = 56,
                        user = '', )
                    ],
                instances = [
                    slurmrestpy.models.v0/0/40_instance.v0.0.40_instance(
                        cluster = '',
                        extra = '',
                        instance_id = '',
                        instance_type = '',
                        node_name = '',
                        time = slurmrestpy.models.v0_0_42_instance_time.v0_0_42_instance_time(
                            time_end = 56,
                            time_start = 56, ), )
                    ],
                meta = slurmrestpy.models.v0/0/40_openapi_meta.v0.0.40_openapi_meta(
                    plugin = slurmrestpy.models.v0_0_42_openapi_meta_plugin.v0_0_42_openapi_meta_plugin(
                        type = '',
                        name = '',
                        data_parser = '',
                        accounting_storage = '', ),
                    client = slurmrestpy.models.v0_0_42_openapi_meta_client.v0_0_42_openapi_meta_client(
                        source = '',
                        user = '',
                        group = '', ),
                    command = [
                        ''
                        ],
                    slurm = slurmrestpy.models.v0_0_42_openapi_meta_slurm.v0_0_42_openapi_meta_slurm(
                        version = slurmrestpy.models.v0_0_42_openapi_meta_slurm_version.v0_0_42_openapi_meta_slurm_version(
                            major = '',
                            micro = '',
                            minor = '', ),
                        release = '',
                        cluster = '', ), ),
                errors = [
                    slurmrestpy.models.v0/0/40_openapi_error.v0.0.40_openapi_error(
                        description = '',
                        error_number = 56,
                        error = '',
                        source = '', )
                    ],
                warnings = [
                    slurmrestpy.models.v0/0/40_openapi_warning.v0.0.40_openapi_warning(
                        description = '',
                        source = '', )
                    ]
            )
        else:
            return V0040OpenapiSlurmdbdConfigResp(
        )
        """

    def testV0040OpenapiSlurmdbdConfigResp(self):
        """Test V0040OpenapiSlurmdbdConfigResp"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
