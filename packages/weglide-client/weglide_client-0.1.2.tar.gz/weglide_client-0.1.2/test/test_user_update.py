# coding: utf-8

"""
    WeGlide

    Quantifying airsports

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from weglide_client.models.user_update import UserUpdate

class TestUserUpdate(unittest.TestCase):
    """UserUpdate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UserUpdate:
        """Test UserUpdate
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UserUpdate`
        """
        model = UserUpdate()
        if include_optional:
            return UserUpdate(
                name = '012345',
                skysight_email = '',
                skysight_password = '',
                newsletter_language = '01',
                magazine_language = '01',
                bio = '',
                ssa_id = 56,
                password = '012345',
                old_password = '012345',
                date_of_birth = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                gender = 'M',
                club_id = 56,
                second_club_id = 56,
                unit = 'M',
                language = '01',
                open_in_seeyou = True,
                comments_allowed = True,
                filter = [
                    weglide_client.models.filter.Filter(
                        id = null, 
                        name = '', 
                        index = '', )
                    ],
                flight_notification = True,
                comment_notification = True,
                follower_notification = True,
                magazine_notification = True,
                message_enabled = True,
                copilot_password = '',
                copilot_email = '',
                badge = True
            )
        else:
            return UserUpdate(
        )
        """

    def testUserUpdate(self):
        """Test UserUpdate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
