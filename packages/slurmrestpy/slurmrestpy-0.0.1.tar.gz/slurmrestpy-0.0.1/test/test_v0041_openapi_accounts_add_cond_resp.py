# coding: utf-8

"""
Slurm REST API

API to access and control Slurm

The version of the OpenAPI document: Slurm-24.11.1&openapi/slurmdbd&openapi/slurmctld
Contact: sales@schedmd.com
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from slurmrestpy.models.v0041_openapi_accounts_add_cond_resp import (
    V0041OpenapiAccountsAddCondResp,
)


class TestV0041OpenapiAccountsAddCondResp(unittest.TestCase):
    """V0041OpenapiAccountsAddCondResp unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V0041OpenapiAccountsAddCondResp:
        """Test V0041OpenapiAccountsAddCondResp
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `V0041OpenapiAccountsAddCondResp`
        """
        model = V0041OpenapiAccountsAddCondResp()
        if include_optional:
            return V0041OpenapiAccountsAddCondResp(
                association_condition = slurmrestpy.models.v0_0_41_openapi_accounts_add_cond_resp_association_condition.v0_0_41_openapi_accounts_add_cond_resp_association_condition(
                    accounts = [
                        ''
                        ],
                    association = slurmrestpy.models.v0_0_41_openapi_users_add_cond_resp_association_condition_association.v0_0_41_openapi_users_add_cond_resp_association_condition_association(
                        comment = '',
                        defaultqos = '',
                        grpjobs = slurmrestpy.models.v0_0_41_openapi_users_add_cond_resp_association_condition_association_grpjobs.v0_0_41_openapi_users_add_cond_resp_association_condition_association_grpjobs(
                            set = True,
                            infinite = True,
                            number = 56, ),
                        grpjobsaccrue = slurmrestpy.models.v0_0_41_openapi_users_add_cond_resp_association_condition_association_grpjobsaccrue.v0_0_41_openapi_users_add_cond_resp_association_condition_association_grpjobsaccrue(
                            set = True,
                            infinite = True,
                            number = 56, ),
                        grpsubmitjobs = slurmrestpy.models.v0_0_41_openapi_users_add_cond_resp_association_condition_association_grpsubmitjobs.v0_0_41_openapi_users_add_cond_resp_association_condition_association_grpsubmitjobs(
                            set = True,
                            infinite = True,
                            number = 56, ),
                        grptres = [
                            slurmrestpy.models.v0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_tres_requested_max_inner.v0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_tres_requested_max_inner(
                                type = '',
                                name = '',
                                id = 56,
                                count = 56, )
                            ],
                        grptresmins = [
                            slurmrestpy.models.v0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_tres_requested_max_inner.v0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_tres_requested_max_inner(
                                type = '',
                                name = '',
                                id = 56,
                                count = 56, )
                            ],
                        grptresrunmins = [

                            ],
                        grpwall = slurmrestpy.models.v0_0_41_openapi_users_add_cond_resp_association_condition_association_grpwall.v0_0_41_openapi_users_add_cond_resp_association_condition_association_grpwall(
                            set = True,
                            infinite = True,
                            number = 56, ),
                        maxjobs = slurmrestpy.models.v0_0_41_openapi_users_add_cond_resp_association_condition_association_maxjobs.v0_0_41_openapi_users_add_cond_resp_association_condition_association_maxjobs(
                            set = True,
                            infinite = True,
                            number = 56, ),
                        maxjobsaccrue = slurmrestpy.models.v0_0_41_openapi_users_add_cond_resp_association_condition_association_maxjobsaccrue.v0_0_41_openapi_users_add_cond_resp_association_condition_association_maxjobsaccrue(
                            set = True,
                            infinite = True,
                            number = 56, ),
                        maxsubmitjobs = slurmrestpy.models.v0_0_41_openapi_users_add_cond_resp_association_condition_association_maxsubmitjobs.v0_0_41_openapi_users_add_cond_resp_association_condition_association_maxsubmitjobs(
                            set = True,
                            infinite = True,
                            number = 56, ),
                        maxtresminsperjob = [

                            ],
                        maxtresrunmins = [

                            ],
                        maxtresperjob = [

                            ],
                        maxtrespernode = [

                            ],
                        maxwalldurationperjob = slurmrestpy.models.v0_0_41_openapi_users_add_cond_resp_association_condition_association_maxwalldurationperjob.v0_0_41_openapi_users_add_cond_resp_association_condition_association_maxwalldurationperjob(
                            set = True,
                            infinite = True,
                            number = 56, ),
                        minpriothresh = slurmrestpy.models.v0_0_41_openapi_users_add_cond_resp_association_condition_association_minpriothresh.v0_0_41_openapi_users_add_cond_resp_association_condition_association_minpriothresh(
                            set = True,
                            infinite = True,
                            number = 56, ),
                        parent = '',
                        priority = slurmrestpy.models.v0_0_41_openapi_slurmdbd_config_resp_associations_inner_priority.v0_0_41_openapi_slurmdbd_config_resp_associations_inner_priority(
                            set = True,
                            infinite = True,
                            number = 56, ),
                        qoslevel = [
                            ''
                            ],
                        fairshare = 56, ),
                    clusters = [
                        ''
                        ], ),
                account = slurmrestpy.models.v0_0_41_openapi_accounts_add_cond_resp_account.v0_0_41_openapi_accounts_add_cond_resp_account(
                    description = '',
                    organization = '', ),
                meta = slurmrestpy.models.v0_0_41_openapi_slurmdbd_jobs_resp_meta.v0_0_41_openapi_slurmdbd_jobs_resp_meta(
                    plugin = slurmrestpy.models.v0_0_42_openapi_meta_plugin.v0_0_42_openapi_meta_plugin(
                        type = '',
                        name = '',
                        data_parser = '',
                        accounting_storage = '', ),
                    client = slurmrestpy.models.v0_0_42_openapi_meta_client.v0_0_42_openapi_meta_client(
                        source = '',
                        user = '',
                        group = '', ),
                    command = [
                        ''
                        ],
                    slurm = slurmrestpy.models.v0_0_42_openapi_meta_slurm.v0_0_42_openapi_meta_slurm(
                        version = slurmrestpy.models.v0_0_42_openapi_meta_slurm_version.v0_0_42_openapi_meta_slurm_version(
                            major = '',
                            micro = '',
                            minor = '', ),
                        release = '',
                        cluster = '', ), ),
                errors = [
                    slurmrestpy.models.v0_0_41_openapi_slurmdbd_jobs_resp_errors_inner.v0_0_41_openapi_slurmdbd_jobs_resp_errors_inner(
                        description = '',
                        error_number = 56,
                        error = '',
                        source = '', )
                    ],
                warnings = [
                    slurmrestpy.models.v0_0_41_openapi_slurmdbd_jobs_resp_warnings_inner.v0_0_41_openapi_slurmdbd_jobs_resp_warnings_inner(
                        description = '',
                        source = '', )
                    ]
            )
        else:
            return V0041OpenapiAccountsAddCondResp(
        )
        """

    def testV0041OpenapiAccountsAddCondResp(self):
        """Test V0041OpenapiAccountsAddCondResp"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
