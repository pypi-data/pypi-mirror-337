Metadata-Version: 2.4
Name: mcp-smarthub
Version: 0.2.9
Summary: SmartHub MCP extension for Goose
Author-email: Block <goose@squareup.com>
License-Expression: MIT
Project-URL: Homepage, https://github.com/squareup/smarthub-extension
Project-URL: Documentation, https://block.github.io/goose/docs/tutorials/custom-extensions
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: mcp>=1.4.1
Requires-Dist: snowflake-connector-python>=3.14.0
Requires-Dist: uvicorn>=0.34.0
Requires-Dist: fastapi>=0.109.0
Requires-Dist: typing-extensions>=4.9.0
Dynamic: license-file

# SmartHub MCP Extension

A Goose extension for natural language interaction with SmartHub data and portfolio management.

## Installation

Install the package using uvx:

```bash
uvx mcp_smarthub@latest
```

## Configuration

Add the extension to Goose using either the UI or configuration file.

### Using Goose Desktop UI

1. Open Goose Desktop
2. Click menu (top right) → Settings → Extensions
3. Click "Add Extension"
4. Use these settings:

```yaml
Type: Standard IO
ID: smarthubdata
Name: SmartHub Extension
Description: Natural language interface for SmartHub data and portfolio management
Command: uvx mcp_smarthub@latest
```

### Using Configuration File

Add to `~/.config/goose/config.yaml`:

```yaml
extensions:
  smarthubdata:
    type: standard_io
    command: uvx mcp_smarthub@latest
```

### Using Goose CLI

```bash
goose session --with-extension "uvx mcp_smarthub@latest"
```

## Authentication

The extension uses SSO for Snowflake authentication at Block. No additional credentials are required.

## Features

- Natural language queries for SmartHub data
- Portfolio management capabilities
- Custom pricing analysis
- Winter 2025 features (churn model, variable comp)

## Testing

After installation:
1. Restart Goose
2. Ask Goose: "Can you test the SmartHub extension connection to Snowflake?"

## Troubleshooting

1. Verify installation: `uvx mcp_smarthub@latest --version`
2. Verify SSO is working by testing Snowflake access in another tool
3. Check that you're on the Block network or VPN
4. If you have issues with uvx, ensure your ~/.config/uv/uv.toml is configured:
   ```toml
   index-url = "https://artifactory.global.square/artifactory/api/pypi/block-pypi/simple"
   native-tls = true
   ```

## Support

- GitHub Issues: https://github.com/squareup/smarthub-extension/issues
- Contact: goose@squareup.com

## Development

See [DEVELOPMENT.md](DEVELOPMENT.md) for instructions on local development and testing.

## License

MIT License - see LICENSE file for details
