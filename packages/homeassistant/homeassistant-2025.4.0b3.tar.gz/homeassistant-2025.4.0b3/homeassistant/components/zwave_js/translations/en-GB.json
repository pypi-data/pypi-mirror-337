{
    "device_automation": {
        "extra_fields": {
            "code_slot": "Code slot",
            "command_class": "Command class",
            "data_type": "Data type",
            "endpoint": "Endpoint",
            "event": "Event",
            "event_label": "Event label",
            "event_type": "Event type",
            "for": "Duration",
            "from": "From",
            "label": "Label",
            "property": "Property",
            "property_key": "Property key",
            "refresh_all_values": "Refresh all values",
            "status": "Status",
            "to": "To",
            "type.": "Type",
            "usercode": "Usercode",
            "value": "Value",
            "wait_for_result": "Wait for result"
        }
    },
    "entity": {
        "button": {
            "ping": {
                "name": "Ping"
            }
        },
        "sensor": {
            "average_background_rssi": {
                "name": "Average background RSSI (channel {channel})"
            },
            "can": {
                "name": "Collisions"
            },
            "commands_dropped": {
                "name": "Commands dropped ({direction})"
            },
            "controller_status": {
                "name": "Status",
                "state": {
                    "jammed": "Jammed",
                    "ready": "Ready",
                    "unresponsive": "Unresponsive"
                }
            },
            "current_background_rssi": {
                "name": "Current background RSSI (channel {channel})"
            },
            "last_seen": {
                "name": "Last seen"
            },
            "messages_dropped": {
                "name": "Messages dropped ({direction})"
            },
            "nak": {
                "name": "Messages not accepted"
            },
            "node_status": {
                "name": "Node status",
                "state": {
                    "alive": "Alive",
                    "asleep": "Asleep",
                    "awake": "Awake",
                    "dead": "Dead",
                    "unknown": "Unknown"
                }
            },
            "rssi": {
                "name": "RSSI"
            },
            "rtt": {
                "name": "Round trip time"
            },
            "successful_commands": {
                "name": "Successful commands ({direction})"
            },
            "successful_messages": {
                "name": "Successful messages ({direction})"
            },
            "timeout_ack": {
                "name": "Missing ACKs"
            },
            "timeout_callback": {
                "name": "Timed out callbacks"
            },
            "timeout_response": {
                "name": "Timed out responses"
            }
        }
    },
    "issues": {
        "device_config_file_changed": {
            "fix_flow": {
                "abort": {
                    "issue_ignored": "Device config file update for {device_name} ignored."
                },
                "step": {
                    "init": {
                        "description": "The device configuration file for {device_name} has changed.\n\nZ-Wave discovers a lot of devices metadata by interviewing the device. However, some information has to be loaded from a configuration file. Some of this information is only evaluated once, during the device interview.\n\nWhen a device config file is updated, this information may be stale and the device must be re-interviewed to pick up the changes.\n\n This is not a required operation and device functionality will be impacted during the re-interview process, but you may see improvements for your device once it is complete.\n\nIf you decide to proceed with the re-interview, it will take place in the background.",
                        "menu_options": {
                            "confirm": "Re-interview device",
                            "ignore": "Ignore device config update"
                        },
                        "title": "Device configuration file changed: {device_name}"
                    }
                }
            }
        }
    },
    "services": {
        "bulk_set_partial_config_parameters": {
            "description": "Allows for bulk setting partial parameters. Useful when multiple partial parameters have to be set at the same time.",
            "fields": {
                "area_id": {
                    "description": "The area(s) to target for this action. If an area is specified, all Z-Wave devices and entities in that area will be targeted for this action.",
                    "name": "Area ID(s)"
                },
                "device_id": {
                    "description": "The device(s) to target for this action.",
                    "name": "Device ID(s)"
                },
                "endpoint": {
                    "description": "The configuration parameter's endpoint.",
                    "name": "Endpoint"
                },
                "entity_id": {
                    "description": "The entity ID(s) to target for this action.",
                    "name": "Entity ID(s)"
                },
                "parameter": {
                    "description": "The name (or ID) of the configuration parameter you want to configure.",
                    "name": "Parameter"
                },
                "value": {
                    "description": "The new value(s) to set for this configuration parameter. Can either be a raw integer value to represent the bulk change or a mapping where the key is the bitmask (either in hex or integer form) and the value is the new value you want to set for that partial parameter.",
                    "name": "Value"
                }
            }
        },
        "clear_lock_usercode": {
            "description": "Clears a user code from a lock.",
            "fields": {
                "code_slot": {
                    "description": "Code slot to clear code from.",
                    "name": "Code slot"
                }
            },
            "name": "Clear lock user code"
        },
        "invoke_cc_api": {
            "fields": {
                "area_id": {
                    "description": "The area(s) to target for this action. If an area is specified, all Z-Wave devices and entities in that area will be targeted for this action.",
                    "name": "Area ID(s)"
                },
                "command_class": {
                    "description": "The ID of the command class that you want to issue a command to.",
                    "name": "Command class"
                },
                "device_id": {
                    "description": "The device(s) to target for this action.",
                    "name": "Device ID(s)"
                },
                "endpoint": {
                    "description": "The endpoint to call the API on. If an endpoint is specified, that endpoint will be targeted for all nodes associated with the target areas, devices, and/or entities. If an endpoint is not specified, the root endpoint (0) will be targeted for nodes associated with target areas and devices, and the endpoint for the primary value of each entity will be targeted.",
                    "name": "Endpoint"
                },
                "entity_id": {
                    "description": "The entity ID(s) to target for this action.",
                    "name": "Entity ID(s)"
                },
                "method_name": {
                    "name": "Method name"
                },
                "parameters": {
                    "name": "Parameters"
                }
            },
            "name": "Invoke a Command Class API on a node (advanced)"
        },
        "multicast_set_value": {
            "fields": {
                "area_id": {
                    "description": "The area(s) to target for this action. If an area is specified, all Z-Wave devices and entities in that area will be targeted for this action.",
                    "name": "Area ID(s)"
                },
                "command_class": {
                    "description": "The ID of the command class for the value.",
                    "name": "Command class"
                },
                "device_id": {
                    "description": "The device(s) to target for this action.",
                    "name": "Device ID(s)"
                },
                "endpoint": {
                    "description": "The endpoint for the value.",
                    "name": "Endpoint"
                },
                "entity_id": {
                    "description": "The entity ID(s) to target for this action.",
                    "name": "Entity ID(s)"
                },
                "options": {
                    "description": "Set value options map. Refer to the Z-Wave JS documentation for more information on what options can be set.",
                    "name": "Options"
                },
                "property": {
                    "description": "The ID of the property for the value.",
                    "name": "Property"
                },
                "property_key": {
                    "description": "The ID of the property key for the value.",
                    "name": "Property key"
                },
                "value": {
                    "description": "The new value to set.",
                    "name": "Value"
                }
            },
            "name": "Set a value on multiple devices via multicast (advanced)"
        },
        "ping": {
            "fields": {
                "area_id": {
                    "description": "The area(s) to target for this action. If an area is specified, all Z-Wave devices and entities in that area will be targeted for this action.",
                    "name": "Area ID(s)"
                },
                "device_id": {
                    "description": "The device(s) to target for this action.",
                    "name": "Device ID(s)"
                },
                "entity_id": {
                    "description": "The entity ID(s) to target for this action.",
                    "name": "Entity ID(s)"
                }
            },
            "name": "Ping a node"
        },
        "refresh_notifications": {
            "fields": {
                "area_id": {
                    "description": "The area(s) to target for this action. If an area is specified, all Z-Wave devices and entities in that area will be targeted for this action.",
                    "name": "Area ID(s)"
                },
                "device_id": {
                    "description": "The device(s) to target for this action.",
                    "name": "Device ID(s)"
                },
                "entity_id": {
                    "description": "The entity ID(s) to target for this action.",
                    "name": "Entity ID(s)"
                }
            }
        },
        "refresh_value": {
            "description": "Force updates the values of a Z-Wave entity.",
            "fields": {
                "entity_id": {
                    "description": "Entities to refresh.",
                    "name": "Entities"
                }
            },
            "name": "Refresh values"
        },
        "reset_meter": {
            "description": "Resets the meters on a node.",
            "fields": {
                "area_id": {
                    "description": "The area(s) to target for this action. If an area is specified, all Z-Wave devices and entities in that area will be targeted for this action.",
                    "name": "Area ID(s)"
                },
                "device_id": {
                    "description": "The device(s) to target for this action.",
                    "name": "Device ID(s)"
                },
                "entity_id": {
                    "description": "The entity ID(s) to target for this action.",
                    "name": "Entity ID(s)"
                },
                "meter_type": {
                    "description": "The type of meter to reset. Not all meters support the ability to pick a meter type to reset.",
                    "name": "Meter type"
                },
                "value": {
                    "description": "The value that meters should be reset to. Not all meters support the ability to be reset to a specific value.",
                    "name": "Target value"
                }
            },
            "name": "Reset meters on a node"
        },
        "set_config_parameter": {
            "description": "Changes the configuration parameters of your Z-Wave devices.",
            "fields": {
                "area_id": {
                    "description": "The area(s) to target for this action. If an area is specified, all Z-Wave devices and entities in that area will be targeted for this action.",
                    "name": "Area ID(s)"
                },
                "bitmask": {
                    "name": "Bitmask"
                },
                "device_id": {
                    "description": "The device(s) to target for this action.",
                    "name": "Device ID(s)"
                },
                "endpoint": {
                    "description": "The configuration parameter's endpoint.",
                    "name": "Endpoint"
                },
                "entity_id": {
                    "description": "The entity ID(s) to target for this action.",
                    "name": "Entity ID(s)"
                },
                "parameter": {
                    "description": "The name (or ID) of the configuration parameter you want to configure.",
                    "name": "Parameter"
                },
                "value": {
                    "description": "The new value to set for this configuration parameter.",
                    "name": "Value"
                }
            },
            "name": "Set device configuration parameter"
        },
        "set_lock_configuration": {
            "fields": {
                "lock_timeout": {
                    "name": "Lock timeout"
                },
                "operation_type": {
                    "description": "The operation type of the lock.",
                    "name": "Operation type"
                },
                "twist_assist": {
                    "description": "Whether the motor should help in locking and unlocking.",
                    "name": "Twist Assist"
                }
            },
            "name": "Set lock configuration"
        },
        "set_lock_usercode": {
            "description": "Sets a user code on a lock.",
            "fields": {
                "code_slot": {
                    "description": "Code slot to set the code.",
                    "name": "Code slot"
                },
                "usercode": {
                    "description": "Lock code to set.",
                    "name": "Code"
                }
            },
            "name": "Set lock user code"
        },
        "set_value": {
            "fields": {
                "area_id": {
                    "description": "The area(s) to target for this action. If an area is specified, all Z-Wave devices and entities in that area will be targeted for this action.",
                    "name": "Area ID(s)"
                },
                "command_class": {
                    "description": "The ID of the command class for the value.",
                    "name": "Command class"
                },
                "device_id": {
                    "description": "The device(s) to target for this action.",
                    "name": "Device ID(s)"
                },
                "endpoint": {
                    "description": "The endpoint for the value.",
                    "name": "Endpoint"
                },
                "entity_id": {
                    "description": "The entity ID(s) to target for this action.",
                    "name": "Entity ID(s)"
                },
                "options": {
                    "name": "Options"
                },
                "property": {
                    "description": "The ID of the property for the value.",
                    "name": "Property"
                },
                "property_key": {
                    "description": "The ID of the property key for the value.",
                    "name": "Property key"
                },
                "value": {
                    "description": "The new value to set.",
                    "name": "Value"
                }
            },
            "name": "Set a value (advanced)"
        }
    }
}