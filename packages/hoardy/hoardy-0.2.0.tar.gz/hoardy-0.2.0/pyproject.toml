[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"
[tool.setuptools]
packages = ["hoardy"]
[project]
name = "hoardy"
version = "0.2.0"
authors = [{ name = "Jan Malakhovski", email = "oxij@oxij.org" }]
description = "Find files matching given criteria quickly, find duplicated files and deduplicate them, record file hashes and verify them, etc."
readme = "README.md"
license = { text = "LGPL-3.0-or-later" }
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
    "Intended Audience :: End Users/Desktop",
    "Topic :: System :: Archiving",
    "Topic :: System :: Archiving :: Backup",
    "Topic :: System :: Archiving :: Compression",
    "Topic :: System :: Archiving :: Mirroring",
    "Topic :: System :: Recovery Tools",
    "Operating System :: POSIX",
    "Environment :: Console",
]
keywords = [
    "backup", "archive", "hoard",
    "search", "deduplicate",
]
requires-python = ">=3.11"
dependencies = [
    "kisstdlib==0.0.11",
]
[project.urls]
"Homepage" = "https://oxij.org/software/hoardy/"
"GitHub" = "https://github.com/Own-Data-Privateer/hoardy"
"Support Development" = "https://oxij.org/#support"
[project.scripts]
hoardy = "hoardy.__main__:main"
hy = "hoardy.__main__:main"

[tool.mypy]
python_version = "3.11"
strict = true
implicit_reexport = true
explicit_package_bases = true
files = [
    "*.py",
    "hoardy/**/*.py"
]
[[tool.mypy.overrides]]
module = [
    "setuptools",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-s -ra -v"
testpaths = [
    "hoardy/__main__.py"
]

[tool.black]
line-length = 100

[tool.pylint]
disable = [
    # `mypy` checks these more precisely
    "arguments-renamed",
    "inconsistent-return-statements",
    "no-member",
    "possibly-used-before-assignment",
    "cell-var-from-loop",

    # `kisstdlib` uses this
    "raising-format-tuple",

    # annoying
    "dangerous-default-value",
    "global-statement",
    "import-outside-toplevel",
    "invalid-name",
    "line-too-long",
    "too-few-public-methods",
    "too-many-arguments",
    "too-many-boolean-expressions",
    "too-many-branches",
    "too-many-instance-attributes",
    "too-many-lines",
    "too-many-locals",
    "too-many-nested-blocks",
    "too-many-positional-arguments",
    "too-many-public-methods",
    "too-many-return-statements",
    "too-many-statements",

    # enable eventually
    "broad-exception-caught",
    "fixme",
    "missing-class-docstring",
    "missing-function-docstring",
    "unused-wildcard-import",
    "wildcard-import",
]
[tool.pylint.format]
max-line-length = "100"
