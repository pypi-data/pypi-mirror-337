import{C as M}from"./ChoiceField-2xK3jpng.js";import{b as x,i as B,G as d,o as m,c as k,w as g,a as r,f as l,e as q,ac as K,d as S,t as C,R as F,J as U,V as T,U as N}from"./index-Bbkf9DIc.js";import{r as f,V as $}from"./VForm-BCtIZQOE.js";import{V as _}from"./VTextField-Djz_9Wz9.js";import{V as D}from"./VSwitch-MOiUeFZQ.js";import{V as j}from"./VAutocomplete-BqJxkVxD.js";import{V as A}from"./VCheckbox-C7p6F9aZ.js";const X={__name:"DomainGeneralForm",props:{modelValue:{type:Object,default:null}},setup(i,{expose:p}){const{$gettext:t}=x(),v=i,u=B(()=>v.modelValue),a=d();function b(e){e==="relaydomain"&&u.value.transport==null&&(u.value.transport={})}const o=[{label:"Domain",icon:"mdi-earth",value:t("domain")},{label:"Relay domain",icon:"mdi-earth",value:t("relaydomain")}];return p({vFormRef:a}),(e,n)=>(m(),k($,{ref_key:"vFormRef",ref:a},{default:g(()=>[r(_,{modelValue:u.value.name,"onUpdate:modelValue":n[0]||(n[0]=c=>u.value.name=c),label:l(t)("Domain name (ex: domain.tld)"),rules:[l(f).required],variant:"outlined",class:"mb-5"},null,8,["modelValue","label","rules"]),r(l(M),{modelValue:u.value.type,"onUpdate:modelValue":[n[1]||(n[1]=c=>u.value.type=c),b],label:l(t)("Type"),choices:o},null,8,["modelValue","label"]),r(D,{modelValue:u.value.enabled,"onUpdate:modelValue":n[2]||(n[2]=c=>u.value.enabled=c),label:l(t)("Enabled"),hint:l(t)("Control if this domain will be allowed to send and receive messages"),color:"primary","persistent-hint":""},null,8,["modelValue","label","hint"])]),_:1},512))}},Y={__name:"DomainDNSForm",props:{modelValue:{type:Object,default:()=>{}}},setup(i,{expose:p}){const{$gettext:t}=x(),v=i,u=d(),a=B(()=>v.modelValue),b=d([{label:"1024",value:1024},{label:"2048",value:2048},{label:"4096",value:4096}]);return p({vFormRef:u}),(o,e)=>(m(),k($,{ref_key:"vFormRef",ref:u},{default:g(()=>[q("div",null,[r(D,{modelValue:a.value.enable_dns_checks,"onUpdate:modelValue":e[0]||(e[0]=n=>a.value.enable_dns_checks=n),label:l(t)("Enable DNS checks"),color:"primary"},null,8,["modelValue","label"]),r(D,{modelValue:a.value.enable_dkim,"onUpdate:modelValue":e[1]||(e[1]=n=>a.value.enable_dkim=n),label:l(t)("Enable DKIM signing"),color:"primary"},null,8,["modelValue","label"]),r(_,{modelValue:a.value.dkim_key_selector,"onUpdate:modelValue":e[2]||(e[2]=n=>a.value.dkim_key_selector=n),label:l(t)("DKIM key selector"),disabled:!a.value.enable_dkim,variant:"outlined"},null,8,["modelValue","label","disabled"]),r(l(M),{modelValue:a.value.dkim_key_length,"onUpdate:modelValue":e[3]||(e[3]=n=>a.value.dkim_key_length=n),label:l(t)("DKIM key length"),choices:b.value,disabled:!a.value.enable_dkim},null,8,["modelValue","label","choices","disabled"])])]),_:1},512))}},Z={__name:"DomainLimitationsForm",props:{modelValue:{type:Object,default:null}},setup(i,{expose:p}){const{$gettext:t}=x(),v=i,u=d(),a=B(()=>v.modelValue);return p({vFormRef:u}),(b,o)=>(m(),k($,{ref_key:"vFormRef",ref:u},{default:g(()=>[r(_,{modelValue:a.value.quota,"onUpdate:modelValue":o[0]||(o[0]=e=>a.value.quota=e),label:l(t)("Quota"),hint:l(t)("Quota shared between mailboxes. Can be expressed in KB, MB (default) or GB. A value of 0 means no quota."),"persistent-hint":"",class:"mb-4",variant:"outlined",rules:[l(f).required]},null,8,["modelValue","label","hint","rules"]),r(_,{modelValue:a.value.default_mailbox_quota,"onUpdate:modelValue":o[1]||(o[1]=e=>a.value.default_mailbox_quota=e),label:l(t)("Default mailbox quota"),hint:l(t)("Default quota applied to mailboxes. Can be expressed in KB, MB (default) or GB. A value of 0 means no quota."),"persistent-hint":"",class:"mb-4",variant:"outlined",rules:[l(f).required]},null,8,["modelValue","label","hint","rules"]),r(_,{modelValue:a.value.message_limit,"onUpdate:modelValue":o[2]||(o[2]=e=>a.value.message_limit=e),label:l(t)("Message sending limit"),hint:l(t)("Number of messages this domain can send per day. Leave empty for no limit."),"persistent-hint":"",variant:"outlined",rules:[l(f).numericOrNull]},null,8,["modelValue","label","hint","rules"])]),_:1},512))}},G="transports",O={getAll(){return K.get(`/${G}/`)}},E={class:"m-label"},I={class:"m-label"},ee={__name:"DomainTransportForm",props:{modelValue:{type:Object,default:()=>{}}},emits:["update:modelValue"],setup(i,{expose:p,emit:t}){const{$gettext:v}=x(),u=i,a=t,b=d(),o=d({}),e=d(),n=d([]);function c(y){for(const V of e.value.settings)if(V.type==="int"){const s=`${e.value.name}_${V.name}`;y.transport.settings[s]=parseInt(y.transport.settings[s])}}function R(){o.value.service=e.value.name,a("update:modelValue",o.value)}return S(()=>{o.value={...u.modelValue},O.getAll().then(y=>{n.value=y.data,o.value.service&&(e.value=n.value.find(V=>V.name===o.value.service))})}),p({checkSettingTypes:c,service:e,vFormRef:b}),(y,V)=>(m(),k($,{ref_key:"vFormRef",ref:b},{default:g(()=>[q("label",E,C(l(v)("Service")),1),r(j,{modelValue:e.value,"onUpdate:modelValue":V[0]||(V[0]=s=>e.value=s),items:n.value,"item-title":"name","return-object":"",variant:"outlined",rules:[l(f).required]},null,8,["modelValue","items","rules"]),e.value?(m(!0),F(U,{key:0},T(e.value.settings,(s,w)=>(m(),F(U,{key:w},[s.type==="str"||s.type==="int"?(m(),F(U,{key:0},[q("label",I,C(s.label),1),r(_,{modelValue:o.value.settings[`${e.value.name}_${s.name}`],"onUpdate:modelValue":[h=>o.value.settings[`${e.value.name}_${s.name}`]=h,R],variant:"outlined",type:o.value.type==="int"?"number":"text",rules:[!!s.required||l(f).required]},null,8,["modelValue","onUpdate:modelValue","type","rules"])],64)):s.type==="boolean"?(m(),k(A,{key:1,modelValue:o.value.settings[`${e.value.name}_${s.name}`],"onUpdate:modelValue":[h=>o.value.settings[`${e.value.name}_${s.name}`]=h,R],label:s.label},null,8,["modelValue","onUpdate:modelValue","label"])):N("",!0)],64))),128)):N("",!0)]),_:1},512))}};export{X as _,Y as a,Z as b,ee as c};
