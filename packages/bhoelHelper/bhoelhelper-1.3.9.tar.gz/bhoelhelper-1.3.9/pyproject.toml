[project]

name = "bhoelHelper"

description = "Misc helper functionalities."

authors = [
    { name = "Berthold Höllmann", email = "berthold@xn--hllmanns-n4a.de" }
]
maintainers = [
    { name = "Berthold Höllmann", email = "berthold@xn--hllmanns-n4a.de" }
]
license = { text = "MIT"}

repository = "https://gitlab.com/berhoel/python/bhoelHelper.git"
homepage = "https://python.xn--hllmanns-n4a.de/bhoelHelper/"
documentation = "https://python.xn--hllmanns-n4a.de/bhoelHelper/"
readme = "README.rst"

requires-python = ">=3.11,<4.0"

dynamic = [
    "version",
    "classifiers",
    "dependencies"
]

[project.scripts]
set_lib_version = 'berhoel.helper.set_version:build'

[tool.poetry]
version = "1.3.9"

packages = [{ include = "berhoel" }]
exclude = ["**/.#*.py", "**/#*.py#"]

classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Topic :: Utilities",
]

[tool.poetry.dependencies]
tomli = "^2.0.1"

[tool.poetry.group.dev.dependencies]
black = "*"
ipython = "*"
isort = "*"
mypy = "*"
pdbp = "*"
ruff = "*"
scipy-stubs = "*"

[tool.poetry.group.test.dependencies]
pytest = "*"
pytest-benchmark = { extras = ["histogram"], version = "*" }
pytest-cache = "*"
pytest-cov = "*"
pytest-mock = "*"
pytest-ruff = "*"
pytest-runner = "*"
pytest-sugar = "*"
rope = "*"
tox = "*"

[tool.poetry.group.doc.dependencies]
berhoel-sphinx-settings = { git = "https://gitlab.com/berhoel/python/berhoel-sphinx-settings.git", rev = "main" }
doc8 = "*"
sphinx-argparse-cli = "*"
xdoctest = "*"

[tool.isort]
dedup_headings = true
include_trailing_comma = true
float_to_top = true
namespace_packages = ['berhoel']
force_grid_wrap = 0
balanced_wrapping = true
use_parentheses = true
length_sort = true
line_length = 88
combine_as_imports = true
known_first_party = ["berhoel"]
known_third_party = ["pytest"]

[tool.ruff]
namespace-packages = ['berhoel']
line-length = 88

[tool.ruff.lint]
select = ["ALL"]
ignore = ["D211", "D213", "RUF200", "ISC001", "COM812"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
"docs/**.py" = ["INP001"]
"berhoel/helper/_version.py" = ["I002"]

[tool.ruff.format]
# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.ruff.lint.isort]
force-sort-within-sections = true
force-wrap-aliases = true
combine-as-imports = true
required-imports = ["from __future__ import annotations"]
section-order = [
  "future",
  "standard-library",
  "third-party",
  "first-party",
  "local-folder",
]
default-section = "third-party"
known-first-party = ["berhoel"]
known-third-party = ["pytest"]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.lint.flake8-annotations]
mypy-init-return = true

[tool.mypy]
packages = ["berhoel"]
mypy_path = "$MYPY_CONFIG_FILE_DIR/.stubs/"

[tool.tox]
requires = ["tox>=4.19"]
env_list = ["3.11", "3.12", "3.13", "3.14"]

[tool.tox.env_run_base]
description = "Run test under {base_python}"
deps = [
  "pdbpp",
  "pytest",
  "pytest-benchmark[histogram]",
  "pytest-cov",
  "pytest-mock",
  "pytest-ruff",
  "pytest-runner",
  "pytest-sugar",
  "rope",
  "toml",
  "xdoctest",
]
allowlist_externals = ["poetry"]
commands = [["poetry", "run", "pytest"]]

[tool.pytest.ini_options]
junit_family = "xunit2"
doctest_encoding = "UTF-8"
minversion = "7.0"
addopts = [
  "--benchmark-histogram=plots/benchmark-histogram",
  "--benchmark-compare",
  "--doctest-modules",
  "--ff",
  "-s",
  "--cov=berhoel",
  "--cov-report=term",
  "--cov-report=html",
  "--cov-branch",
  "--ruff",
]
testpaths = ["berhoel"]

[tool.doc8]
ignore-path=["ctitools.egg-info", ".tox"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
