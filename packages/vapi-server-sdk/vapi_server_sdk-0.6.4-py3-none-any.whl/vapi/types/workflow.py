# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing
from .workflow_nodes_item import WorkflowNodesItem
import typing_extensions
from ..core.serialization import FieldMetadata
import datetime as dt
from .edge import Edge
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class Workflow(UncheckedBaseModel):
    nodes: typing.List[WorkflowNodesItem]
    id: str
    org_id: typing_extensions.Annotated[str, FieldMetadata(alias="orgId")]
    created_at: typing_extensions.Annotated[dt.datetime, FieldMetadata(alias="createdAt")]
    updated_at: typing_extensions.Annotated[dt.datetime, FieldMetadata(alias="updatedAt")]
    name: str
    edges: typing.List[Edge]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
