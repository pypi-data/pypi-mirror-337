# coding: utf-8

"""
Slurm REST API

API to access and control Slurm

The version of the OpenAPI document: Slurm-24.11.1&openapi/slurmdbd&openapi/slurmctld
Contact: sales@schedmd.com
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from slurmrestpy.models.v0042_job_res import V0042JobRes


class TestV0042JobRes(unittest.TestCase):
    """V0042JobRes unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V0042JobRes:
        """Test V0042JobRes
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `V0042JobRes`
        """
        model = V0042JobRes()
        if include_optional:
            return V0042JobRes(
                select_type = [
                    'CPU'
                    ],
                nodes = slurmrestpy.models.v0_0_42_job_res_nodes.v0_0_42_job_res_nodes(
                    count = 56,
                    select_type = [
                        'AVAILABLE'
                        ],
                    list = '',
                    whole = True,
                    allocation = [
                        slurmrestpy.models.v0/0/42_job_res_node.v0.0.42_job_res_node(
                            index = 56,
                            name = '',
                            cpus = slurmrestpy.models.v0_0_42_job_res_node_cpus.v0_0_42_job_res_node_cpus(
                                count = 56,
                                used = 56, ),
                            memory = slurmrestpy.models.v0_0_42_job_res_node_memory.v0_0_42_job_res_node_memory(
                                used = 56,
                                allocated = 56, ),
                            sockets = [
                                slurmrestpy.models.v0/0/42_job_res_socket.v0.0.42_job_res_socket(
                                    index = 56,
                                    cores = [
                                        slurmrestpy.models.v0/0/42_job_res_core.v0.0.42_job_res_core(
                                            index = 56,
                                            status = [
                                                'INVALID'
                                                ], )
                                        ], )
                                ], )
                        ], ),
                cpus = 56,
                threads_per_core = slurmrestpy.models.v0/0/42_uint16_no_val_struct.v0.0.42_uint16_no_val_struct(
                    set = True,
                    infinite = True,
                    number = 56, )
            )
        else:
            return V0042JobRes(
                select_type = [
                    'CPU'
                    ],
                cpus = 56,
                threads_per_core = slurmrestpy.models.v0/0/42_uint16_no_val_struct.v0.0.42_uint16_no_val_struct(
                    set = True,
                    infinite = True,
                    number = 56, ),
        )
        """

    def testV0042JobRes(self):
        """Test V0042JobRes"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
