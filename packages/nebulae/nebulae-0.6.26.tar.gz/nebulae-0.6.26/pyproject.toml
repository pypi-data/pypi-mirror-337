[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "nebulae"
version = "0.6.26"
description = "A deep learning framework based on PyTorch and prevalent image processing libraries. It aims to offer a set of useful tools and functions."
                # + " v0.6.26: remov __del__ function in GPUtil.",
                # + " v0.6.25: release the progress bar tool as a new lib named tcurve and remove it from nebulae.",
                # + " v0.6.24: add macro SG, DP, DT in power module standing for single-gpu training, data parallel and"
                # + " distributed training ; add viz_flow function in utility.",
                # + " v0.6.23: update Multiverse module for better compatability with PyTorch 1.9.0 and higher.",
                # + " v0.6.22: rewrite all single modules so that they can work individually.",
                # + " v0.6.21: fix a bug of version checkers; add a new argument for Timer to join threads.",
                # + " v0.6.20: users can instantiate a DashBoard as an iterator wrapper.",
                # + " v0.6.19: add logs.IMAGE mode for DashBoard.",
                # + " v0.6.18: logbook is renamed to logs and cockpit is renamed to power;"
                # + " add a missing type check in DashBoard.",
                # + " v0.6.17: some frequently used modules is directly imported from nebulae;"
                # + " DashBoard is working with pythonic iterators now;"
                # + " aerolog is renamed as logbook, law is renamed as rule.",
                # + " v0.6.16: add Craft.mixp() for mixed precision training and lowp() for converting to half precision;"
                # + " unify Multiverse under distributed and single-device training.",
                # + " v0.6.15: shorten mix_prec as mixp; add GridSample and Warp modules;"
                # + " change default config file from json to yaml for convenient commenting.",
                # + " v0.6.14: users can call Craft.lowp() to enable mix precision,"
                # + " and assign mix_prec as True for optimizers.",
                # + " v0.6.13: reimplement dock.SN and optimizer classes.",
                # + " v0.6.12: users can get current learning rate from optz.lr where optz is dock.Adam() for example.",
                # + " v0.6.11: change gearbox options from DYNAMIC, STATIC and FIXED to FREE, DYNAMIC and STATIC."
                # + " fix a bug of GPUtil leading to negative numbers on memory usage.",
                # + " v0.6.10: move Craft from astro to dock; add Whiten in comburants for normalization;"
                # + " add wipe argument in DashBoard.gauge() for better display in ipynb files.",
                # + " v0.6.9: replace 'RANK' with 'NEB_RANK' for distributed training in environ variables;"
                # + " add subdir argument in DashBoard.log(); add wipe argument in DashBoard.gauge()",
                # + " v0.6.8: TimeMachine supports optz input as a dictionary.",
                # + " v0.6.7: fix bugs of device allocation and attribute getter in EMA;"
                # + " add on_device argument in EMA for faster update with higher memory occupied;"
                # + " add gearbox argument in Engine to apply Module.compile() in PyTorch 2.",
                # + " v0.6.6: add in_loop and last_for args in DashBoard.gauge().",
                # + " v0.6.5: remove ControlPanel; add in_loop and last_for args in DashBoard.gauge;"
                # + " add Lamb optimizer; replace BluePrint module with Inspector.",
                # + " v0.6.4: DashBoard.log() now plots curves only by metrics;"
                # + " add Scatter, Gather, Tile, Argmax, Argmin in dock; add Lion and delete AdaBelief in optimizers.",
                # + " v0.6.3: OHEM loss supports an additional mask as input.",
                # + " v0.6.2: change plot tools from matplotlib to seaborn;"
                # + " make Pooling modules compatible with symmetric padding;"
                # + " add dock.Roll module.",
                # + " v0.6.1: fix a bug of specifying cpu_prefetch in Tank unexpectedly;"
                # + " add transmit argument in Depot.mount().",
                # + " v0.6.0: support PyTorch only from now on and remove many redundant arguments and methods"
                # + " designed for compatiblity of all other frameworks before;"
                # + " Comburant supports images as numpy arrays for more efficient implementation;"
                # + " set OPTIM as default flag for generating h5 data file;"
                # + " users can customized Tanks and mount onto Depot.",
                # + " v0.5.38: rename astrobase and toolkit to astro and kit respectively.",
                # + " v0.5.37: users can pass weight and bias tensors to Conv module.",
                # + " v0.5.36: fix a bug of DashBoard.log(); Add Gaussian and Poisson Noise for data augmentation.",
                # + " v0.5.35: use Smooth L1 to fit Huber for PyTorch in lower version; add Charbonnier loss.",
                # + " v0.5.34: fix a bug in MaxPool module; add onnx_version as a new argument in Craft.dissect().",
                # + " v0.5.33: replace on() and off() with swap() in EMA module; renew Conv module.",
                # + " v0.5.32: add dock.Stack() for stacking a list of tensors.",
                # + " v0.5.31: now either size or scale could be passed in dock.Zoom().",
                # + " v0.5.30: add toolkit.rgb2y() for extracting Y channel of an Pillow Image.",
                # + " v0.5.29: modify the abstract class of comburants to a more general form for sequence processing;"
                # + " fix a bug instead factor selection in Sharpen().",
                # + " v0.5.28: modify depot.Crop to a more general form for sequence processing.",
                # + " v0.5.27: delete H265 and keep AV1.",
                # + " v0.5.26: add some classical compression augmentation for images and sequences.",
                # + " v0.5.25: users can pass a file obj to toolkit.sprawl() to receive output contents.",
                # + " v0.5.24: now Multiverse will report warning instead of error for incompatible backend version;"
                # + " add sprawl function in toolkit.utility.",
                # + " v0.5.23: fix a bug that comburant might apply different augmentation on input sequence.",
                # + " v0.5.22: delete prep_fn in Tank's setting.",
                # + " v0.5.21: add PRelu; users can scale initial trainable params through an argument.",
                # + " v0.5.20: integrate Upscale and Downsample into Zoom.",
                # + " v0.5.19: multi_piston takes place before gearing devices.",
                # + " v0.5.18: replace encode argument in fuel.Generator.generate() with quality;"
                # + " now pass a csv to Tank to create dataloader for reading files in folders.",
                # + " v0.5.17: add plot argument in DashBoard.gauge().",
                # + " v0.5.16: fix a bug that causes less merged segments than it should be for elastic axis;"
                # + " add FLOPS counter in Craft.dissect() function.",
                # + " v0.5.15: now DashBoard is able to use elastic vertical axis for better plotting.",
                # + " v0.5.14: add multi_piston argument for Engine;"
                # + " now users need to receive returned object from gear().",
                # + " v0.5.13: add nworkers as an input argment for fuel tank;"
                # + " remove an unnecessary conversion in HWC2CHW.",
                # + " v0.5.12: add dissect() method in Craft for estimating model size and exporting architecture.",
                # + " v0.5.11: update SN implementation so that PyTorch Module works well to be wrapped;"
                # + " users can input 'optz' argument in TimeMachine to save optimizer states;"
                # + " tell DashBoard.log() where the history metric data are, it'll append to current datalog;"
                # + " in autoPad function, empty tuple and None are legal value for in_size if users make sure"
                # + " in_size can be divided by stride along all dimensions.",
                # + " v0.5.10: add keep_pos argument in OHEM.",
                # + " v0.5.9: add OHEM loss; users could turn up or down the flush argument in dashboard"
                # + " to control the refreshed lines on screen.",
                # + " v0.5.8: add SurPix module.",
                # + " v0.5.7: move multiverse from law to astrobase; add GPUtil for monitoring GPU status.",
                # + " v0.5.6: add back apex-based multi-gpu training for low version of PyTorch.",
                # + " v0.5.5: add SubPix module.",
                # + " v0.5.4: add PSNR and SSIM metrics; the default behavior of Upscale is corner aligned now.",
                # + " v0.5.3: add Recurrent networks module.",
                # + " v0.5.2: add 3 types of Graph Convolution block; add sparse-tensor-related methods.",
                # + " v0.5.1: correct implementation on applying weight decay and EMA module;"
                # + " add Retroact module for visualizing decisive map.",
                # + " v0.5.0: the latest version takes the Big Two mainstream frameworks as backends,"
                # + " and they share the same interfaces and arguments"
                # + " i.e. Pytorch and Tensorflow. It is convenient for everyone to create nerworks and train,"
                # + " no matter using single or multiple GPUs. Code blocks written in naive Pytorch or Tensorflow"
                # + " are allowed to mix with Nebulae to work together.",
                # + " v0.4.20: fix a crucial typo which results in installation failure.",
                # + " v0.4.19: mute redundant INFO in multi-process.",
                # + " v0.4.18: add prep_fn argument in Tank.",
                # + " v0.4.17: remove mxnet core; add tf2 core which is under test.",
                # + " v0.4.16: engine is now a required argument for initializing Craft, so does as_const for Engine.coat;"
                # + " add depot.Random to control if the comburant event is gonna happen.",
                # + " v0.4.15: set 'grad_accum' argument in optimizer to control gradient accumulations.",
                # + " v0.4.14: add BigGAN and EMA wrapper;"
                # + " reform weight initializers and lr decayors as Class instead of flags.",
                # + " v0.4.13: reimplement Multiverse using built-in pytorch function; add SoftPlus layer.",
                # + " v0.4.12: optimize the interface of Res-GAN.",
                # + " v0.4.11: add Identity, MatMul, Permute, Embed layers and supports SN-Embed;"
                # + " orthogonal initialization is added.",
                # + " v0.4.10: add epoch, mile and MPE as new input arguments of INVIZ item in dashboard.",
                # + " v0.4.9: fix an error if input of GAN is a gray image.",
                # + " v0.4.8: add SN (Spectral Norm) and SN-GAN.",
                # + " v0.4.7: fix a bug of getting available GPUs.",
                # + " v0.4.6: add Instance Norm layer; slight changes on resnetGAN.",
                # + " v0.4.5: reorganize hangar.",
                # + " v0.4.4: add ResnetV2 and varieties of GANs in hangar;"
                # + " change input arguments in pooling layers for better use of global pooling.",
                # + " v0.4.3: add VGG16 in hangar.",
                # + " v0.4.2: optimize distributed training using Multiverse.",
                # + " v0.4.1: mute in all subprocesses.",
                # + " v0.4.0: a brand new version is released. it is more compatible with the backend framework"
                # + " so as to ease pain for transplanting code.",
                # + " v0.3.2: update implementations of data augmentation;"
                # + " users can build spacecraft as many as need and manage them in a spacedock.",
                # + " v0.3.1: fix an unexpected error when miles in DashBoard starts from a number greater than 1;"
                # + " fix a bug that strings cannot be stored using fuel generator;"
                # + " users are able to wrap their model written in core framework as a component by inheriting from OffTheShelf;"
                # + " garage is replaced by hangar and GAN is added to it;"
                # + " update spatial data augmentation methods;",
                # + " v0.3.0: fix a catastrophic bug that brings wrong shaped components in network;"
                # + " add new attribute, info, in Pod to serve another new tool named Imperative Symbol;"
                # + " now users can indicate to Dense layer which axis is to be projected;"
                # + " core modules of PyTorch is integrated now.",
                # + "v0.2.6: fix a bug that returns available gpu ids more than need;"
                # + "move the weight decay term to correct device;",
                # + "v0.2.5: unify convolution functions in different dimensions.",
                # + "v0.2.4: add 'rescale' option in FuelDepot.loadFuel().",
                # + "v0.2.3: fix a bug would cause error when decode hdf5 file.",
                # + "v0.2.2: remove the functionality of param:ckpt_scope with mxnet core.",
                # + "v0.2.1: mute re-initialization warning with mxnet core; add new way to save&load models.",
                # + "v0.2.0: now tensorflow and mxnet cores are completely supported."
                # + "we patch so much of it, and it is easier to take almost every module as a stand-alone plug-in.",
                # + " v0.1.21: set complete_last_batch as True when loading fuel to keep the last batch in same size as others.",
                # + " v0.1.20: optimize the execution of shuffling data.",
                # + " v0.1.19: if users want to print their results in a flexible way, they can pass a tailor function to Dash Board.",
                # + " v0.1.18: if_shuffle is modifiable for fuel tank now.",
                # + " v0.1.17: set MPE, volume and epoch as properties in fuel depot;"
                # + " if nothing is assigned to name while calling unloadFuel and modify of fuel depot, every tank will be manipulated",
                # + " v0.1.16: shorten some function names e.g. 'milesPerEpoch' to 'getMPE', 'editProperty' to 'modify'.",
                # + " v0.1.15: move merge, fill and deduct functions from toolkit to fuel.",
                # + " v0.1.14: fix a bug in toolkit.toDenseLabel.",
                # + " v0.1.13: new argument num_gpus indicates how many gpus you need.",
                # + " v0.1.12: change the quoting character of label file to |;"
                # + " add fillFuel and deductFuel in toolkit;"
                # + " users can store data with variable length;"
                # + " reorganize the logic for assembling components.",
                # + " v0.1.11: rename LayoutSheet as BluePrint;"
                # + " change the initial parts of Space Craft and Navigator;"
                # + " merge log function in Aerolog as an interface exposed by Navigator.",
                # + " v0.1.10: make it simpler to use Dash Board module alone.",
                # + " v0.1.9: be able to remove EXIF without modifying raw images.",
                # + " v0.1.7: users can generate hdf5 as several files since generating large dataset at once is risky;"
                # + " In addition, mergeFuel function is provided for merging multiple hdf5 files;"
                # + " users can remove EXIF in images while generating data file by setting keep_exif as False.",
                # + " v0.1.6: add SE Resnets to Garage;"
                # + " read image in RGB mode of which number of channel is 3.",
                # + " v0.1.5: fix a bug would return wrong device id when looking for available gpu.",
                # + " v0.1.1: change the way to register stage;"
                # + " fix a bug in DashBoard may draw points in wrong places.",
                # + " v0.1.0: A roughly complete version. New parts, Engine, Time Machine, Dashboard and Navigator are added.",
                # + " v0.0.18: fix a bug would repeatedly append variable scope.",
                # + " v0.0.17: network layout will be saved as image instead of pdf;"
                # + " add components: RESHAPE, SLICE, CLIP;"
                # + " implement Time Machine.",
                # + " v0.0.15: fix a bug would lead to wrong implementation of ** symbol."
                # + " v0.0.14: unable to assemble DUPLICATE component without name but passing existent name is allowed."
                # + " v0.0.13: allow users to assemble DUPLICATE component without passing name;"
                # + " add RESIZE component;"
                # + " shorten automatically generated component names."
                # + " v0.0.12: fix wrong implementation on data augmentation;"
                # + " FuelGenerator will keep original image size if width or height is not given.",
                # sudo python _cleanup.py && python -m build && twine upload dist/*
authors = [{name = "Seria", email = "zzqsummerai@yeah.net"}]
readme = "README.md"
dependencies = ['tcurve',
                'h5py',
                'pyyaml',
                'pillow',
                'numpy',
                'piexif',
                'scipy',
                'onnx',
                'torch>=1.0',
                'torchvision',
                'ptflops>0.6.7']
