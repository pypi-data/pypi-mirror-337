main_service: node
services:
  node:
    image: node:22.13.1-slim
test_commands:
  - 'npx vitest run --coverage.include="**/*.{js,jsx}" --coverage.all=true --reporter=json --outputFile=vitest-results.json'
  - 'if [ -f "coverage/coverage-final.json" ]; then mv coverage/coverage-final.json coverage.json; else echo "Warn: coverage/coverage-final.json not found"; exit 1; fi'
single_file_test_commands:
  - "npx vitest run --coverage $TEST_FILE --reporter=json --outputFile=vitest-results.json"
  - 'if [ -f "coverage/coverage-final.json" ]; then mv coverage/coverage-final.json coverage.json; else echo "Warn: coverage/coverage-final.json not found"; exit 1; fi'
setup_commands:
  - apt-get update -qqy || true
  - apt-get install -qqy git || true
  - npm install -g pnpm
  - pnpm install --silent || true
  - pnpm add -D vitest@latest || true
  - pnpm add -D @vitest/coverage-v8@latest || true
  - pnpm add -D @vitest/coverage-istanbul || true
  - pnpm add -D @testing-library/react || true
  - pnpm add -D @testing-library/dom || true
  - pnpm add -D @testing-library/jest-dom || true
  - pnpm add -D @testing-library/user-event || true
  - pnpm add -D jsdom || true
  - '[ -f vitest.config.js ] || echo ''import { defineConfig } from "vitest/config"; export default defineConfig({test:{environment:"jsdom",coverage:{provider:"v8",reporter:["text","json","html"]}},});'' > vitest.config.js'
ignore:
  - "*prettierrc*"
  - "*eslintrc*"
  - "*stylelintrc*"
  - "*commitlintrc*"
  - "*lintstagedrc*"
  - "*huskyrc*"
  - "*config.test.*"
  - "*.config.js"
  - "*.config.jsx"
  - "*/config.*"
  - "config.*"
