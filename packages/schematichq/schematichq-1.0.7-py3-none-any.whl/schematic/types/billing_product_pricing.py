# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .billing_product_pricing_usage_type import BillingProductPricingUsageType
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class BillingProductPricing(UniversalBaseModel):
    currency: str
    interval: str
    meter_id: typing.Optional[str] = None
    price: int
    price_external_id: str
    product_external_id: str
    quantity: int
    usage_type: BillingProductPricingUsageType

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
