image: python:latest

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# https://pip.pypa.io/en/stable/topics/caching/
cache:
  paths:
    - .cache/pip

stages:
  - test
  - build
  - pypi
  - release

test:
  stage: test
  tags:
    - docker
  image: "python:$VERSION"
  script:
    - python --version ; pip --version  # For debugging
    - pip install pytest hatch
    - hatch test --cover
  parallel:
    matrix:
      - VERSION: ['3.9', '3.11', '3.12']
  artifacts:
    when: always
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  coverage: '/TOTAL.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'

build:
  stage: build
  tags:
    - docker
  image: "python:latest"
  script:
    - pip install hatch
    - hatch build
  artifacts:
    paths:
      - dist/

pypi_test:
  stage: pypi
  tags:
    - docker
  image: "python:latest"
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: on_success
  variables:
    HATCH_INDEX_USER: $PYPI_TEST_USERNAME
    HATCH_INDEX_AUTH: $PYPI_TEST_PASSWORD
  script:
    - pip install hatch
    - hatch publish -r test

pypi_prod:
  stage: pypi
  tags:
    - docker
  image: "python:latest"
  rules:
    - if: $CI_COMMIT_TAG
  variables:
    HATCH_INDEX_USER: $PYPI_PROD_USERNAME
    HATCH_INDEX_AUTH: $PYPI_PROD_PASSWORD
  script:
    - pip install hatch
    - hatch publish

release_job:
  stage: release
  tags:
    - docker
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG                 # Run this job when a tag is created
  script:
    - echo "running release_job"
  release:                               # See https://docs.gitlab.com/ee/ci/yaml/#release for available properties
    tag_name: '$CI_COMMIT_TAG'
    description: '$CI_COMMIT_TAG'
