# coding: utf-8

"""
Slurm REST API

API to access and control Slurm

The version of the OpenAPI document: Slurm-24.11.1&openapi/slurmdbd&openapi/slurmctld
Contact: sales@schedmd.com
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from slurmrestpy.models.v0040_openapi_slurmdbd_jobs_resp import (
    V0040OpenapiSlurmdbdJobsResp,
)


class TestV0040OpenapiSlurmdbdJobsResp(unittest.TestCase):
    """V0040OpenapiSlurmdbdJobsResp unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V0040OpenapiSlurmdbdJobsResp:
        """Test V0040OpenapiSlurmdbdJobsResp
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `V0040OpenapiSlurmdbdJobsResp`
        """
        model = V0040OpenapiSlurmdbdJobsResp()
        if include_optional:
            return V0040OpenapiSlurmdbdJobsResp(
                jobs = [
                    slurmrestpy.models.v0/0/40_job.v0.0.40_job(
                        account = '',
                        comment = slurmrestpy.models.v0_0_42_job_comment.v0_0_42_job_comment(
                            administrator = '',
                            job = '',
                            system = '', ),
                        allocation_nodes = 56,
                        array = slurmrestpy.models.v0_0_40_job_array.v0_0_40_job_array(
                            job_id = 56,
                            limits = slurmrestpy.models.v0_0_42_job_array_limits.v0_0_42_job_array_limits(
                                max = slurmrestpy.models.v0_0_42_job_array_limits_max.v0_0_42_job_array_limits_max(
                                    running = slurmrestpy.models.v0_0_42_job_array_limits_max_running.v0_0_42_job_array_limits_max_running(
                                        tasks = 56, ), ), ),
                            task_id = slurmrestpy.models.v0/0/40_uint32_no_val.v0.0.40_uint32_no_val(
                                set = True,
                                infinite = True,
                                number = 56, ),
                            task = '', ),
                        association = slurmrestpy.models.v0/0/40_assoc_short.v0.0.40_assoc_short(
                            account = '',
                            cluster = '',
                            partition = '',
                            user = '',
                            id = 56, ),
                        block = '',
                        cluster = '',
                        constraints = '',
                        container = '',
                        derived_exit_code = slurmrestpy.models.v0/0/40_process_exit_code_verbose.v0.0.40_process_exit_code_verbose(
                            status = [
                                'INVALID'
                                ],
                            return_code = slurmrestpy.models.v0/0/40_uint32_no_val.v0.0.40_uint32_no_val(
                                set = True,
                                infinite = True,
                                number = 56, ),
                            signal = slurmrestpy.models.v0_0_40_process_exit_code_verbose_signal.v0_0_40_process_exit_code_verbose_signal(
                                id = slurmrestpy.models.v0/0/40_uint16_no_val.v0.0.40_uint16_no_val(
                                    set = True,
                                    infinite = True,
                                    number = 56, ),
                                name = '', ), ),
                        time = slurmrestpy.models.v0_0_40_job_time.v0_0_40_job_time(
                            elapsed = 56,
                            eligible = 56,
                            end = 56,
                            start = 56,
                            submission = 56,
                            suspended = 56,
                            system = slurmrestpy.models.v0_0_42_job_time_system.v0_0_42_job_time_system(
                                seconds = 56,
                                microseconds = 56, ),
                            limit = ,
                            total = slurmrestpy.models.v0_0_42_job_time_total.v0_0_42_job_time_total(
                                seconds = 56,
                                microseconds = 56, ),
                            user = slurmrestpy.models.v0_0_42_job_time_user.v0_0_42_job_time_user(
                                seconds = 56,
                                microseconds = 56, ), ),
                        exit_code = slurmrestpy.models.v0/0/40_process_exit_code_verbose.v0.0.40_process_exit_code_verbose(),
                        extra = '',
                        failed_node = '',
                        flags = [
                            'NONE'
                            ],
                        group = '',
                        het = slurmrestpy.models.v0_0_40_job_het.v0_0_40_job_het(
                            job_id = 56,
                            job_offset = , ),
                        job_id = 56,
                        name = '',
                        licenses = '',
                        mcs = slurmrestpy.models.v0_0_42_job_mcs.v0_0_42_job_mcs(
                            label = '', ),
                        nodes = '',
                        partition = '',
                        hold = True,
                        priority = ,
                        qos = '',
                        required = slurmrestpy.models.v0_0_40_job_required.v0_0_40_job_required(
                            cpus = 56,
                            memory_per_cpu = slurmrestpy.models.v0/0/40_uint64_no_val.v0.0.40_uint64_no_val(
                                set = True,
                                infinite = True,
                                number = 56, ),
                            memory_per_node = slurmrestpy.models.v0/0/40_uint64_no_val.v0.0.40_uint64_no_val(
                                set = True,
                                infinite = True,
                                number = 56, ), ),
                        kill_request_user = '',
                        reservation = slurmrestpy.models.v0_0_42_job_reservation.v0_0_42_job_reservation(
                            name = '', ),
                        script = '',
                        state = slurmrestpy.models.v0_0_40_job_state.v0_0_40_job_state(
                            current = [
                                'PENDING'
                                ],
                            reason = '', ),
                        steps = [
                            slurmrestpy.models.v0/0/40_step.v0.0.40_step(
                                nodes = slurmrestpy.models.v0_0_40_step_nodes.v0_0_40_step_nodes(
                                    count = 56,
                                    range = '',
                                    list = [
                                        ''
                                        ], ),
                                tasks = slurmrestpy.models.v0_0_42_step_tasks.v0_0_42_step_tasks(
                                    count = 56, ),
                                pid = '',
                                cpu = slurmrestpy.models.v0_0_40_step_cpu.v0_0_40_step_CPU(
                                    requested_frequency = slurmrestpy.models.v0_0_40_step_cpu_requested_frequency.v0_0_40_step_CPU_requested_frequency(
                                        min = , ),
                                    governor = '', ),
                                kill_request_user = '',
                                statistics = slurmrestpy.models.v0_0_40_step_statistics.v0_0_40_step_statistics(
                                    energy = slurmrestpy.models.v0_0_40_step_statistics_energy.v0_0_40_step_statistics_energy(
                                        consumed = , ), ),
                                step = slurmrestpy.models.v0_0_40_step_step.v0_0_40_step_step(
                                    name = '', ),
                                task = slurmrestpy.models.v0_0_42_step_task.v0_0_42_step_task(
                                    distribution = '', ),
                                tres = slurmrestpy.models.v0_0_40_step_tres.v0_0_40_step_tres(
                                    requested = slurmrestpy.models.v0_0_40_step_tres_requested.v0_0_40_step_tres_requested(
                                        average = [
                                            slurmrestpy.models.v0/0/40_tres.v0.0.40_tres(
                                                type = '',
                                                name = '',
                                                count = 56, )
                                            ], ),
                                    allocated = [
                                        slurmrestpy.models.v0/0/40_tres.v0.0.40_tres(
                                            type = '',
                                            name = '',
                                            count = 56, )
                                        ], ), )
                            ],
                        submit_line = '',
                        tres = slurmrestpy.models.v0_0_40_job_tres.v0_0_40_job_tres(),
                        used_gres = '',
                        user = '',
                        wckey = slurmrestpy.models.v0/0/40_wckey_tag_struct.v0.0.40_wckey_tag_struct(
                            wckey = '',
                            flags = [
                                'ASSIGNED_DEFAULT'
                                ], ),
                        working_directory = '', )
                    ],
                meta = slurmrestpy.models.v0/0/40_openapi_meta.v0.0.40_openapi_meta(
                    plugin = slurmrestpy.models.v0_0_42_openapi_meta_plugin.v0_0_42_openapi_meta_plugin(
                        type = '',
                        name = '',
                        data_parser = '',
                        accounting_storage = '', ),
                    client = slurmrestpy.models.v0_0_42_openapi_meta_client.v0_0_42_openapi_meta_client(
                        source = '',
                        user = '',
                        group = '', ),
                    command = [
                        ''
                        ],
                    slurm = slurmrestpy.models.v0_0_42_openapi_meta_slurm.v0_0_42_openapi_meta_slurm(
                        version = slurmrestpy.models.v0_0_42_openapi_meta_slurm_version.v0_0_42_openapi_meta_slurm_version(
                            major = '',
                            micro = '',
                            minor = '', ),
                        release = '',
                        cluster = '', ), ),
                errors = [
                    slurmrestpy.models.v0/0/40_openapi_error.v0.0.40_openapi_error(
                        description = '',
                        error_number = 56,
                        error = '',
                        source = '', )
                    ],
                warnings = [
                    slurmrestpy.models.v0/0/40_openapi_warning.v0.0.40_openapi_warning(
                        description = '',
                        source = '', )
                    ]
            )
        else:
            return V0040OpenapiSlurmdbdJobsResp(
                jobs = [
                    slurmrestpy.models.v0/0/40_job.v0.0.40_job(
                        account = '',
                        comment = slurmrestpy.models.v0_0_42_job_comment.v0_0_42_job_comment(
                            administrator = '',
                            job = '',
                            system = '', ),
                        allocation_nodes = 56,
                        array = slurmrestpy.models.v0_0_40_job_array.v0_0_40_job_array(
                            job_id = 56,
                            limits = slurmrestpy.models.v0_0_42_job_array_limits.v0_0_42_job_array_limits(
                                max = slurmrestpy.models.v0_0_42_job_array_limits_max.v0_0_42_job_array_limits_max(
                                    running = slurmrestpy.models.v0_0_42_job_array_limits_max_running.v0_0_42_job_array_limits_max_running(
                                        tasks = 56, ), ), ),
                            task_id = slurmrestpy.models.v0/0/40_uint32_no_val.v0.0.40_uint32_no_val(
                                set = True,
                                infinite = True,
                                number = 56, ),
                            task = '', ),
                        association = slurmrestpy.models.v0/0/40_assoc_short.v0.0.40_assoc_short(
                            account = '',
                            cluster = '',
                            partition = '',
                            user = '',
                            id = 56, ),
                        block = '',
                        cluster = '',
                        constraints = '',
                        container = '',
                        derived_exit_code = slurmrestpy.models.v0/0/40_process_exit_code_verbose.v0.0.40_process_exit_code_verbose(
                            status = [
                                'INVALID'
                                ],
                            return_code = slurmrestpy.models.v0/0/40_uint32_no_val.v0.0.40_uint32_no_val(
                                set = True,
                                infinite = True,
                                number = 56, ),
                            signal = slurmrestpy.models.v0_0_40_process_exit_code_verbose_signal.v0_0_40_process_exit_code_verbose_signal(
                                id = slurmrestpy.models.v0/0/40_uint16_no_val.v0.0.40_uint16_no_val(
                                    set = True,
                                    infinite = True,
                                    number = 56, ),
                                name = '', ), ),
                        time = slurmrestpy.models.v0_0_40_job_time.v0_0_40_job_time(
                            elapsed = 56,
                            eligible = 56,
                            end = 56,
                            start = 56,
                            submission = 56,
                            suspended = 56,
                            system = slurmrestpy.models.v0_0_42_job_time_system.v0_0_42_job_time_system(
                                seconds = 56,
                                microseconds = 56, ),
                            limit = ,
                            total = slurmrestpy.models.v0_0_42_job_time_total.v0_0_42_job_time_total(
                                seconds = 56,
                                microseconds = 56, ),
                            user = slurmrestpy.models.v0_0_42_job_time_user.v0_0_42_job_time_user(
                                seconds = 56,
                                microseconds = 56, ), ),
                        exit_code = slurmrestpy.models.v0/0/40_process_exit_code_verbose.v0.0.40_process_exit_code_verbose(),
                        extra = '',
                        failed_node = '',
                        flags = [
                            'NONE'
                            ],
                        group = '',
                        het = slurmrestpy.models.v0_0_40_job_het.v0_0_40_job_het(
                            job_id = 56,
                            job_offset = , ),
                        job_id = 56,
                        name = '',
                        licenses = '',
                        mcs = slurmrestpy.models.v0_0_42_job_mcs.v0_0_42_job_mcs(
                            label = '', ),
                        nodes = '',
                        partition = '',
                        hold = True,
                        priority = ,
                        qos = '',
                        required = slurmrestpy.models.v0_0_40_job_required.v0_0_40_job_required(
                            cpus = 56,
                            memory_per_cpu = slurmrestpy.models.v0/0/40_uint64_no_val.v0.0.40_uint64_no_val(
                                set = True,
                                infinite = True,
                                number = 56, ),
                            memory_per_node = slurmrestpy.models.v0/0/40_uint64_no_val.v0.0.40_uint64_no_val(
                                set = True,
                                infinite = True,
                                number = 56, ), ),
                        kill_request_user = '',
                        reservation = slurmrestpy.models.v0_0_42_job_reservation.v0_0_42_job_reservation(
                            name = '', ),
                        script = '',
                        state = slurmrestpy.models.v0_0_40_job_state.v0_0_40_job_state(
                            current = [
                                'PENDING'
                                ],
                            reason = '', ),
                        steps = [
                            slurmrestpy.models.v0/0/40_step.v0.0.40_step(
                                nodes = slurmrestpy.models.v0_0_40_step_nodes.v0_0_40_step_nodes(
                                    count = 56,
                                    range = '',
                                    list = [
                                        ''
                                        ], ),
                                tasks = slurmrestpy.models.v0_0_42_step_tasks.v0_0_42_step_tasks(
                                    count = 56, ),
                                pid = '',
                                cpu = slurmrestpy.models.v0_0_40_step_cpu.v0_0_40_step_CPU(
                                    requested_frequency = slurmrestpy.models.v0_0_40_step_cpu_requested_frequency.v0_0_40_step_CPU_requested_frequency(
                                        min = , ),
                                    governor = '', ),
                                kill_request_user = '',
                                statistics = slurmrestpy.models.v0_0_40_step_statistics.v0_0_40_step_statistics(
                                    energy = slurmrestpy.models.v0_0_40_step_statistics_energy.v0_0_40_step_statistics_energy(
                                        consumed = , ), ),
                                step = slurmrestpy.models.v0_0_40_step_step.v0_0_40_step_step(
                                    name = '', ),
                                task = slurmrestpy.models.v0_0_42_step_task.v0_0_42_step_task(
                                    distribution = '', ),
                                tres = slurmrestpy.models.v0_0_40_step_tres.v0_0_40_step_tres(
                                    requested = slurmrestpy.models.v0_0_40_step_tres_requested.v0_0_40_step_tres_requested(
                                        average = [
                                            slurmrestpy.models.v0/0/40_tres.v0.0.40_tres(
                                                type = '',
                                                name = '',
                                                count = 56, )
                                            ], ),
                                    allocated = [
                                        slurmrestpy.models.v0/0/40_tres.v0.0.40_tres(
                                            type = '',
                                            name = '',
                                            count = 56, )
                                        ], ), )
                            ],
                        submit_line = '',
                        tres = slurmrestpy.models.v0_0_40_job_tres.v0_0_40_job_tres(),
                        used_gres = '',
                        user = '',
                        wckey = slurmrestpy.models.v0/0/40_wckey_tag_struct.v0.0.40_wckey_tag_struct(
                            wckey = '',
                            flags = [
                                'ASSIGNED_DEFAULT'
                                ], ),
                        working_directory = '', )
                    ],
        )
        """

    def testV0040OpenapiSlurmdbdJobsResp(self):
        """Test V0040OpenapiSlurmdbdJobsResp"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
