Metadata-Version: 2.4
Name: turbopelican
Version: 0.2.0
Summary: An uber-quick tool to create a Pelican static-site and deploy it to GitHub Pages.
Project-URL: Source, https://github.com/clockback/turbopelican
Project-URL: Issues, https://github.com/clockback/turbopelican/issues
Project-URL: Changelog, https://github.com/clockback/turbopelican/blob/main/CHANGELOG.md
Author-email: Elliot Simpson <elliot@p-s.co.nz>
License-Expression: AGPL-3.0-or-later
License-File: LICENSE.txt
Keywords: generate,pelican,static,website
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Environment :: Console
Classifier: Framework :: Pelican
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Topic :: Internet :: WWW/HTTP :: Site Management
Classifier: Topic :: Software Development :: Code Generators
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.11
Requires-Dist: langcodes>=3.5.0
Requires-Dist: pydantic>=2.10.6
Requires-Dist: tomlkit>=0.13.2
Requires-Dist: tzdata>=2025.1
Requires-Dist: tzlocal>=5.3.1
Description-Content-Type: text/markdown

<div align="center"><img width="400" alt="turbopelican logo" src="./assets/logo.svg"/></div>

# turbopelican

An uber-quick tool to create a Pelican static-site and deploy it to GitHub
Pages.

## Usage

Users are recommended to run turbopelican using `uvx`:

```sh
uvx turbopelican mypersonalsite
```

This will create a new repository `mypersonalsite`, with everything ready to
push to GitHub.

> ℹ️  **_NOTE:_**  Make sure that the site-url uses the GitHub repository's name.
For example, if you want the website to be `https://johndoe.github.io`, your
GitHub repository will need to be called `johndoe.github.io`.

You will then need to open your GitHub repository's settings, and under
"**Code and automation**" click "**Pages**". The section "**Build and
deployment**" allows you to choose a source. Choose GitHub actions, and your
site should be published.


You can learn more about Pelican [here](https://getpelican.com).

### Configuration

Pelican still targets Python 3.9, which does not bundle built-in support for
reading TOML configuration. Projects using `turbopelican` require Python 3.11
or higher, and therefore adopt the newer convention of placing configuration
in a TOML file rather than Python scripts. Generally, you should only need to
modify `turbopelican.toml`, rather than `pelicanconf.py` or `publishconf.py`.

