# coding: utf-8

"""
Slurm REST API

API to access and control Slurm

The version of the OpenAPI document: Slurm-24.11.1&openapi/slurmdbd&openapi/slurmctld
Contact: sales@schedmd.com
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from slurmrestpy.models.v0042_openapi_slurmdbd_stats_resp import (
    V0042OpenapiSlurmdbdStatsResp,
)


class TestV0042OpenapiSlurmdbdStatsResp(unittest.TestCase):
    """V0042OpenapiSlurmdbdStatsResp unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V0042OpenapiSlurmdbdStatsResp:
        """Test V0042OpenapiSlurmdbdStatsResp
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `V0042OpenapiSlurmdbdStatsResp`
        """
        model = V0042OpenapiSlurmdbdStatsResp()
        if include_optional:
            return V0042OpenapiSlurmdbdStatsResp(
                statistics = slurmrestpy.models.v0/0/42_stats_rec.v0.0.42_stats_rec(
                    time_start = 56,
                    rollups = slurmrestpy.models.v0/0/42_rollup_stats.v0.0.42_rollup_stats(
                        hourly = slurmrestpy.models.v0_0_42_rollup_stats_hourly.v0_0_42_rollup_stats_hourly(
                            count = 56,
                            last_run = 56,
                            duration = slurmrestpy.models.v0_0_42_rollup_stats_hourly_duration.v0_0_42_rollup_stats_hourly_duration(
                                last = 56,
                                max = 56,
                                time = 56, ), ),
                        daily = slurmrestpy.models.v0_0_42_rollup_stats_daily.v0_0_42_rollup_stats_daily(
                            count = 56,
                            last_run = 56, ),
                        monthly = slurmrestpy.models.v0_0_42_rollup_stats_monthly.v0_0_42_rollup_stats_monthly(
                            count = 56,
                            last_run = 56, ), ),
                    rpcs = [
                        slurmrestpy.models.v0/0/42_stats_rpc.v0.0.42_stats_rpc(
                            rpc = '',
                            count = 56,
                            time = slurmrestpy.models.v0_0_42_stats_rpc_time.v0_0_42_stats_rpc_time(
                                average = 56,
                                total = 56, ), )
                        ],
                    users = [
                        slurmrestpy.models.v0/0/42_stats_user.v0.0.42_stats_user(
                            user = '',
                            count = 56, )
                        ], ),
                meta = slurmrestpy.models.v0/0/42_openapi_meta.v0.0.42_openapi_meta(
                    plugin = slurmrestpy.models.v0_0_42_openapi_meta_plugin.v0_0_42_openapi_meta_plugin(
                        type = '',
                        name = '',
                        data_parser = '',
                        accounting_storage = '', ),
                    client = slurmrestpy.models.v0_0_42_openapi_meta_client.v0_0_42_openapi_meta_client(
                        source = '',
                        user = '',
                        group = '', ),
                    command = [
                        ''
                        ],
                    slurm = slurmrestpy.models.v0_0_42_openapi_meta_slurm.v0_0_42_openapi_meta_slurm(
                        version = slurmrestpy.models.v0_0_42_openapi_meta_slurm_version.v0_0_42_openapi_meta_slurm_version(
                            major = '',
                            micro = '',
                            minor = '', ),
                        release = '',
                        cluster = '', ), ),
                errors = [
                    slurmrestpy.models.v0/0/42_openapi_error.v0.0.42_openapi_error(
                        description = '',
                        error_number = 56,
                        error = '',
                        source = '', )
                    ],
                warnings = [
                    slurmrestpy.models.v0/0/42_openapi_warning.v0.0.42_openapi_warning(
                        description = '',
                        source = '', )
                    ]
            )
        else:
            return V0042OpenapiSlurmdbdStatsResp(
                statistics = slurmrestpy.models.v0/0/42_stats_rec.v0.0.42_stats_rec(
                    time_start = 56,
                    rollups = slurmrestpy.models.v0/0/42_rollup_stats.v0.0.42_rollup_stats(
                        hourly = slurmrestpy.models.v0_0_42_rollup_stats_hourly.v0_0_42_rollup_stats_hourly(
                            count = 56,
                            last_run = 56,
                            duration = slurmrestpy.models.v0_0_42_rollup_stats_hourly_duration.v0_0_42_rollup_stats_hourly_duration(
                                last = 56,
                                max = 56,
                                time = 56, ), ),
                        daily = slurmrestpy.models.v0_0_42_rollup_stats_daily.v0_0_42_rollup_stats_daily(
                            count = 56,
                            last_run = 56, ),
                        monthly = slurmrestpy.models.v0_0_42_rollup_stats_monthly.v0_0_42_rollup_stats_monthly(
                            count = 56,
                            last_run = 56, ), ),
                    rpcs = [
                        slurmrestpy.models.v0/0/42_stats_rpc.v0.0.42_stats_rpc(
                            rpc = '',
                            count = 56,
                            time = slurmrestpy.models.v0_0_42_stats_rpc_time.v0_0_42_stats_rpc_time(
                                average = 56,
                                total = 56, ), )
                        ],
                    users = [
                        slurmrestpy.models.v0/0/42_stats_user.v0.0.42_stats_user(
                            user = '',
                            count = 56, )
                        ], ),
        )
        """

    def testV0042OpenapiSlurmdbdStatsResp(self):
        """Test V0042OpenapiSlurmdbdStatsResp"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
