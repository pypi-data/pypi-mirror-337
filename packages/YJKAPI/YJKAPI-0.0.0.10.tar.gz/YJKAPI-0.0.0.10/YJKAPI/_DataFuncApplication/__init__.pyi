from YJKPYI.APIData import *
from typing import Any
class JcDataFunc:
    def GetJcModelDBdata(self) -> Mdl_JcModelDBData: ...
    def GetJcVerList(self) -> list[Mdl_jc_ver]: ...
    def GetJcNodeList(self) -> list[Mdl_jc_node]: ...
    def GetJcAppDJList(self) -> list[Mdl_jc_app_DJ]: ...
    def GetJcIwagList(self) -> list[Mdl_jc_iwag]: ...
    def GetJcAppBraceList(self) -> list[Mdl_jc_app_brace]: ...
    def GetJcAppColumnList(self) -> list[Mdl_jc_app_column]: ...
    def GetJcAppDaisList(self) -> list[Mdl_jc_app_dais]: ...
    def GetJcAppElevatorList(self) -> list[Mdl_jc_app_Elevator]: ...
    def GetJcAppFbeamList(self) -> list[Mdl_jc_app_fbeam]: ...
    def GetJcAppFwallList(self) -> list[Mdl_jc_app_fwall]: ...
    def GetJcAppLLList(self) -> list[Mdl_jc_app_LL]: ...
    def GetJcAppPileList(self) -> list[Mdl_jc_app_Pile]: ...
    def GetJcAppTJList(self) -> list[Mdl_jc_app_TJ]: ...
    def GetJcAppWallList(self) -> list[Mdl_jc_app_wall]: ...
    def GetJcAppWaterPipeList(self) -> list[Mdl_jc_app_WaterPipe]: ...
    def GetJcAppWaterPitList(self) -> list[Mdl_jc_app_WaterPit]: ...
    def GetJcAxisList(self) -> list[Mdl_jc_axis]: ...
    def GetJcCalParaList(self) -> list[Mdl_jc_CalPara]: ...
    def GetJcDaisCirList(self) -> list[Mdl_jc_dais_Cir]: ...
    def GetJcDaisPtList(self) -> list[Mdl_jc_dais_pt]: ...
    def GetJcDaisStepHList(self) -> list[Mdl_jc_dais_stepH]: ...
    def GetJcDEFBraceList(self) -> list[Mdl_jc_DEF_brace]: ...
    def GetJcDEFColumnList(self) -> list[Mdl_jc_DEF_column]: ...
    def GetJcDEFDaisList(self) -> list[Mdl_jc_DEF_dais]: ...
    def GetJcDEFDJList(self) -> list[Mdl_jc_DEF_DJ]: ...
    def GetJcDEFElevatorList(self) -> list[Mdl_jc_DEF_Elevator]: ...
    def GetJcDEFFbeamList(self) -> list[Mdl_jc_DEF_fbeam]: ...
    def GetJcDEFFwallList(self) -> list[Mdl_jc_DEF_fwall]: ...
    def GetJcDEFLLList(self) -> list[Mdl_jc_DEF_LL]: ...
    def GetJcDEFPileList(self) -> list[Mdl_jc_DEF_Pile]: ...
    def GetJcDEFRaftYList(self) -> list[Mdl_jc_DEF_RaftY]: ...
    def GetJcDEFTJList(self) -> list[Mdl_jc_DEF_TJ]: ...
    def GetJcDEFWallList(self) -> list[Mdl_jc_DEF_wall]: ...
    def GetJcDEFWaterPipeList(self) -> list[Mdl_jc_DEF_WaterPipe]: ...
    def GetJcDEFWaterPitList(self) -> list[Mdl_jc_DEF_WaterPit]: ...
    def GetJcDEFZDList(self) -> list[Mdl_jc_DEF_ZD]: ...
    def GetJcHouJiaoDaiList(self) -> list[Mdl_jc_HouJiaoDai]: ...
    def GetJcLoadsList(self) -> list[Mdl_jc_Loads]: ...
    def GetJcLoadsFuJiaLineList(self) -> list[Mdl_jc_LoadsFuJia_Line]: ...
    def GetJcLoadsFuJiaPointList(self) -> list[Mdl_jc_LoadsFuJia_Point]: ...
    def GetJcLoadsLineList(self) -> list[Mdl_jc_LoadsLine]: ...
    def GetJcLoadsDiaocheList(self) -> list[Mdl_jc_Loads_diaoche]: ...
    def GetJcLoadsLineDiaocheList(self) -> list[Mdl_jc_Loads_line_diaoche]: ...
    def GetJcLoadsZiDingYiLineList(self) -> list[Mdl_jc_Loads_ZiDingYi_Line]: ...
    def GetJcLoadsZiDingYiPointList(self) -> list[Mdl_jc_Loads_ZiDingYi_Point]: ...
    def GetJcLoadV2ArcShowList(self) -> list[Mdl_jc_LoadV2_Arc_Show]: ...
    def GetJcLoadV2LineCalList(self) -> list[Mdl_jc_LoadV2_Line_Cal]: ...
    def GetJcLoadV2LineShowList(self) -> list[Mdl_jc_LoadV2_Line_Show]: ...
    def GetJcLoadV2LoadCaseList(self) -> list[Mdl_jc_LoadV2_LoadCase]: ...
    def GetJcLoadV2PointList(self) -> list[Mdl_jc_LoadV2_Point]: ...
    def GetJcLoadZhuHeList(self) -> list[Mdl_jc_LoadZhuHe]: ...
    def GetJcLoadZHRealList(self) -> list[Mdl_jc_LoadZH_real]: ...
    def GetJcLoadZHFloatList(self) -> list[Mdl_jc_LoadZH_Float]: ...
    def GetJcLoadArcList(self) -> list[Mdl_jc_Load_Arc]: ...
    def GetJcLoadChoseList(self) -> list[Mdl_jc_load_Chose]: ...
    def GetJcLoadLineList(self) -> list[Mdl_jc_Load_Line]: ...
    def GetJcLoadZiDingYiArcList(self) -> list[Mdl_jc_Load_ZiDingYi_Arc]: ...
    def GetJcLoadZiDingYiLineList(self) -> list[Mdl_jc_load_ZiDingYi_Line]: ...
    def GetJcParaNumsList(self) -> list[Mdl_jc_ParaNums]: ...
    def GetJcPointsLoadList(self) -> list[Mdl_jc_Points_Load]: ...
    def GetJcRaftCornerPointList(self) -> list[Mdl_jc_RaftCornerPoint]: ...
    def GetJcRaftSlabList(self) -> list[Mdl_jc_RaftSlab]: ...
    def GetJcRaftYInfoList(self) -> list[Mdl_jc_RaftYInfo]: ...
    def GetJcZiDingYiNameList(self) -> list[Mdl_jc_ZiDingYi_Name]: ...
    def GetJcChildRaftList(self) -> list[Mdl_jc_ChildRaft]: ...
    def JcVer_Generate(self, version: str, CreateVer: str, strPath: str, projflag: int, LoadFlag: int) -> Mdl_jc_ver: ...
    def JcNode_Generate(self, joint: Mdl_Joint) -> Mdl_jc_node: ...
    def JcNode_Generate(self, x: float, y: float, z: float = 0.0) -> Mdl_jc_node: ...
    def JcAxis_Generate(self, axis: Mdl_Axis) -> Mdl_jc_axis: ...
    def JcGrid_Generate(self, grid: Mdl_Grid) -> Mdl_jc_iwag: ...
    def JcGrid_Generate(self, jt1: Mdl_jc_node, jt2: Mdl_jc_node) -> Mdl_jc_iwag: ...
    def JcCol_Def(self, colsect: Mdl_ColSect) -> Mdl_jc_DEF_column: ...
    def JcWall_Def(self, wallsect: Mdl_WallSect) -> Mdl_jc_DEF_wall: ...
    def JcDj_Def(self, kind: int, para: str) -> Mdl_jc_DEF_DJ: ...
    def JcFbeam_Def(self, b: int, h: int, bb: int, h1: int, h2: int, ec: int) -> Mdl_jc_DEF_fbeam: ...
    def JcRaftSlab_Def(self, nMainRaftId: int, para: str) -> Mdl_jc_RaftSlab: ...
    def JcDais_Def(self, means: int, ns: int, nstep: int, npile: int, ecx: int, ecy: int) -> Mdl_jc_DEF_dais: ...
    def JcDais_Cir(self, DaisFlag: int, D: float) -> Mdl_jc_dais_Cir: ...
    def JcDais_Cir(self, DaisFlag: int, nstep: int, x: float, y: float) -> Mdl_jc_dais_pt: ...
    def JcDais_StepH(self, DaisFlag: int, nstep: int, H: int) -> Mdl_jc_dais_stepH: ...
    def JcPile_Def(self, means: int, para: str) -> Mdl_jc_DEF_Pile: ...
    def JcTJ_Def(self, kind: int, para: str) -> Mdl_jc_DEF_TJ: ...
    def JcZD_Def(self, kind: int, x: int, y: int, h: int, h1: int) -> Mdl_jc_DEF_ZD: ...
    def JcLL_Def(self, B: int, H: int) -> Mdl_jc_DEF_LL: ...
    def JcDJ_App(self, nj: int, kind: int, ex: float, ey: float, ang: float, dBotElevat: float, isBGAbs: int) -> Mdl_jc_app_DJ: ...
    def JcDais_App(self, nj: int, kind: int, ex: float, ey: float, ang: float, idaispilelen: float, dBotElevat: float, isBGAbs: int) -> Mdl_jc_app_dais: ...
    def JcPile_App(self, kind: int, node: Mdl_jc_node, DaisFlag: int, ang: float, idaispilelen: float) -> Mdl_jc_app_Pile: ...
    def JcPile_App(self, kind: int, x: float, y: float, z: float, DaisFlag: int, ang: float, idaispilelen: float, dBotElevat: float, isBGAbs: int) -> Mdl_jc_app_Pile: ...
    def JcFbeam_App(self, kind: int, iwag: Mdl_jc_iwag, ec: int, dBotElevat: float, isBGAbs: int) -> Mdl_jc_app_fbeam: ...
    def JcRaftSlab_App(self, RaftID: int, ptx: float, pty: float) -> Mdl_jc_RaftCornerPoint: ...
    def JcTJ_App(self, kind: int, iwag: Mdl_jc_iwag, ec: int, dBotElevat: float, isBGAbs: int) -> Mdl_jc_app_TJ: ...
    def JcLL_App(self, kind: int, iwag: Mdl_jc_iwag, ec: int, fMD: float, fML: float, dBotElevat: float, isBGAbs: int) -> Mdl_jc_app_LL: ...
    def JcLoadsFuJia_Point(self, lID: int, data0: float, data1: float, data2: float, data3: float, data4: float, data5: float, data6: float, data7: float, data8: float, data9: float) -> Mdl_jc_LoadsFuJia_Point: ...
    def JcLoadsFuJia_Line(self, lID: int, data0: float, data1: float, data2: float, data3: float, data4: float, data5: float) -> Mdl_jc_LoadsFuJia_Line: ...
    def ReadJcYdb(self, path: str, name: str) -> bool: ...
    def CreateYDB(self, path: str, name: str) -> bool: ...
class JcResultDataFunc:
    def GetJcResultModel(self) -> Mdl_JcResultData: ...
    def GetAntifloatRaftList(self) -> list[Mdl_jcResult_antifloat_Raft]: ...
    def GetGeoFeaElemList(self) -> list[Mdl_jcResult_geo_FeaElem]: ...
    def GetGeoFeaPointList(self) -> list[Mdl_jcResult_geo_FeaPoint]: ...
    def GetGeoGridList(self) -> list[Mdl_jcResult_geo_Grid]: ...
    def GetGeoNodeList(self) -> list[Mdl_jcResult_geo_Node]: ...
    def GetGeoRoomList(self) -> list[Mdl_jcResult_geo_Room]: ...
    def GetInforceCTList(self) -> list[Mdl_jcResult_inforce_CT]: ...
    def GetInforceCTBeamList(self) -> list[Mdl_jcResult_inforce_CTBeam]: ...
    def GetInforceDJList(self) -> list[Mdl_jcResult_inforce_DJ]: ...
    def GetInforceFBeamList(self) -> list[Mdl_jcResult_inforce_FBeam]: ...
    def GetInforceFeaElemList(self) -> list[Mdl_jcResult_inforce_FeaElem]: ...
    def GetInforceLLList(self) -> list[Mdl_jcResult_inforce_LL]: ...
    def GetLoadCaseList(self) -> list[Mdl_jcResult_load_Case]: ...
    def GetLoadCombList(self) -> list[Mdl_jcResult_load_Comb]: ...
    def GetLocalcompressCTList(self) -> list[Mdl_jcResult_localcompress_CT]: ...
    def GetLocalcompressDJList(self) -> list[Mdl_jcResult_localcompress_DJ]: ...
    def GetLocalcompressFBeamList(self) -> list[Mdl_jcResult_localcompress_FBeam]: ...
    def GetLocalcompressRaftList(self) -> list[Mdl_jcResult_localcompress_Raft]: ...
    def GetPunchCTList(self) -> list[Mdl_jcResult_punch_CT]: ...
    def GetPunchDJList(self) -> list[Mdl_jcResult_punch_DJ]: ...
    def GetPunchRaftList(self) -> list[Mdl_jcResult_punch_Raft]: ...
    def GetReactionDJList(self) -> list[Mdl_jcResult_reaction_DJ]: ...
    def GetReactionFBeamList(self) -> list[Mdl_jcResult_reaction_FBeam]: ...
    def GetReactionFeaElemList(self) -> list[Mdl_jcResult_reaction_FeaElem]: ...
    def GetReactionPileList(self) -> list[Mdl_jcResult_reaction_Pile]: ...
    def GetReactionRaftList(self) -> list[Mdl_jcResult_reaction_Raft]: ...
    def GetReinCTList(self) -> list[Mdl_jcResult_rein_CT]: ...
    def GetReinCTBeamList(self) -> list[Mdl_jcResult_rein_CTBeam]: ...
    def GetReinCTTriList(self) -> list[Mdl_jcResult_rein_CT_Tri]: ...
    def GetReinDJList(self) -> list[Mdl_jcResult_rein_DJ]: ...
    def GetReinFBeamList(self) -> list[Mdl_jcResult_rein_FBeam]: ...
    def GetReinLLList(self) -> list[Mdl_jcResult_rein_LL]: ...
    def GetSettleCTList(self) -> list[Mdl_jcResult_settle_CT]: ...
    def GetSettleDJList(self) -> list[Mdl_jcResult_settle_DJ]: ...
    def GetSettleFBeamList(self) -> list[Mdl_jcResult_settle_FBeam]: ...
    def GetSettleFeaElemList(self) -> list[Mdl_jcResult_settle_FeaElem]: ...
    def GetSettlePileList(self) -> list[Mdl_jcResult_settle_Pile]: ...
    def GetSettleRaftList(self) -> list[Mdl_jcResult_settle_Raft]: ...
    def GetSettleTotalCTList(self) -> list[Mdl_jcResult_settle_total_CT]: ...
    def GetSettleTotalDJList(self) -> list[Mdl_jcResult_settle_total_DJ]: ...
    def GetSettleTotalFBeamList(self) -> list[Mdl_jcResult_settle_total_FBeam]: ...
    def GetSettleTotalPileList(self) -> list[Mdl_jcResult_settle_total_Pile]: ...
    def GetSettleTotalRaftList(self) -> list[Mdl_jcResult_settle_total_Raft]: ...
    def GetShearCTList(self) -> list[Mdl_jcResult_shear_CT]: ...
    def GetShearCTBeamList(self) -> list[Mdl_jcResult_shear_CTBeam]: ...
    def GetShearDJList(self) -> list[Mdl_jcResult_shear_DJ]: ...
    def GetSoilcapDJList(self) -> list[Mdl_jcResult_soilcap_DJ]: ...
    def GetSoilcapFBeamList(self) -> list[Mdl_jcResult_soilcap_FBeam]: ...
    def GetSoilcapFeaElemList(self) -> list[Mdl_jcResult_soilcap_FeaElem]: ...
    def GetSoilcapPileList(self) -> list[Mdl_jcResult_soilcap_Pile]: ...
    def GetSoilcapRaftList(self) -> list[Mdl_jcResult_soilcap_Raft]: ...
    def GetTotalloadCTList(self) -> list[Mdl_jcResult_totalload_CT]: ...
    def GetTotalloadDJList(self) -> list[Mdl_jcResult_totalload_DJ]: ...
    def GetTotalloadRaftList(self) -> list[Mdl_jcResult_totalload_Raft]: ...
    def GetVerList(self) -> list[Mdl_jcResult_ver]: ...
    def ReadJcYdb(self, path: str, name: str) -> bool: ...
class Compare:
    @staticmethod
    def FindDifferences(obj1: Hi_DbModelData, obj2: Hi_DbModelData, updateInfo: Hi_UpdateInfo) -> Hi_UpdateInfo: ...
class SlabCreateInfo:
    def SetCentroid(self, Xc: int, Yc: int) -> SlabCreateInfo: ...
    def SetThick(self, thick: int) -> SlabCreateInfo: ...
    def SetStdFlr(self, bzc: Mdl_StdFlr) -> SlabCreateInfo: ...
    def SetCc(self, cc: int) -> SlabCreateInfo: ...
    def SetDeadLive(self, dead: float, live: float) -> SlabCreateInfo: ...
    def GetSlab(self) -> Mdl_Slab: ...
class MidSlabCreateInfo:
    def SetCentroid(self, Xc: int, Yc: int) -> MidSlabCreateInfo: ...
    def SetThick(self, thick: int) -> MidSlabCreateInfo: ...
    def SetStdFlr(self, bzc: Mdl_StdFlr) -> MidSlabCreateInfo: ...
    def SetCc(self, cc: int) -> MidSlabCreateInfo: ...
    def SetDeadLive(self, dead: float, live: float) -> MidSlabCreateInfo: ...
    def SetSurroundNodes(self, nodes: list[Mdl_Joint], relativeH: int) -> MidSlabCreateInfo: ...
    def SetSurroundGrids(self, grids: list[Mdl_Grid]) -> MidSlabCreateInfo: ...
    def SetSurroundNodes(self, _nodes: list, relativeH: int) -> MidSlabCreateInfo: ...
    def SetSurroundGrids(self, _grids: list) -> MidSlabCreateInfo: ...
    def GetSlab(self) -> Mdl_MidSlab: ...
class ColJGCreateInfo_MagnifySect:
    def SetPara(self, b_l: int, b_r: int, h_t: int, h_b: int, hnt: int) -> ColJGCreateInfo_MagnifySect: ...
    def SetName(self, name: str) -> ColJGCreateInfo_MagnifySect: ...
    def GetColJG(self) -> Mdl_ColJGSect: ...
class ColJGCreateInfo_Convert:
    def SetPara(self, b: int, h: int, hnt: int) -> ColJGCreateInfo_Convert: ...
    def SetName(self, name: str) -> ColJGCreateInfo_Convert: ...
    def GetColJG(self) -> Mdl_ColJGSect: ...
class ColJGCreateInfo_WrapSteel:
    def SetPara(self, gangh: int, b: int, h: float, s: int, pos: int, secSteelName: str) -> ColJGCreateInfo_WrapSteel: ...
    def SetName(self, name: str) -> ColJGCreateInfo_WrapSteel: ...
    def GetColJG(self) -> Mdl_ColJGSect: ...
class ColJGCreateInfo_StickPlate:
    def SetPara(self, gangh: int, b: int, h: int, t: float) -> ColJGCreateInfo_StickPlate: ...
    def SetName(self, name: str) -> ColJGCreateInfo_StickPlate: ...
    def GetColJG(self) -> Mdl_ColJGSect: ...
class ColJGCreateInfo_StickFibre:
    def SetPara(self, _k: int, kk: int, bw: int, hw: int, cw: int, cs: int, n: int, t: float) -> ColJGCreateInfo_StickFibre: ...
    def SetName(self, name: str) -> ColJGCreateInfo_StickFibre: ...
    def GetColJG(self) -> Mdl_ColJGSect: ...
class BeamJGCreateInfo_MagnifySect:
    def SetPara(self, b: int, hb: int, ht: int, hnt: int) -> BeamJGCreateInfo_MagnifySect: ...
    def SetName(self, name: str) -> BeamJGCreateInfo_MagnifySect: ...
    def GetBeamJG(self) -> Mdl_BeamJGSect: ...
class BeamJGCreateInfo_Convert:
    def SetPara(self, hb: int, ht: int, hnt: int) -> BeamJGCreateInfo_Convert: ...
    def SetName(self, name: str) -> BeamJGCreateInfo_Convert: ...
    def GetBeamJG(self) -> Mdl_BeamJGSect: ...
class BeamJGCreateInfo_WrapSteel:
    def SetPara(self, cw: int, ct: float, cs: int, gangh: int, SecSteelName_b: str, SecSteelName_t: str, bw: int, bt: int) -> BeamJGCreateInfo_WrapSteel: ...
    def SetName(self, name: str) -> BeamJGCreateInfo_WrapSteel: ...
    def GetBeamJG(self) -> Mdl_BeamJGSect: ...
class BeamJGCreateInfo_StickPlate:
    def SetPara(self, bw: int, bt: float, tw: int, tt: float, cw: int, ct: float, cs: int, gangh: int) -> BeamJGCreateInfo_StickPlate: ...
    def SetName(self, name: str) -> BeamJGCreateInfo_StickPlate: ...
    def GetBeamJG(self) -> Mdl_BeamJGSect: ...
class BeamJGCreateInfo_StickFibre:
    def SetPara(self, _k: int, kk: int, bn: int, bw: int, tn: int, tw: int, cn: int, cs: int, cw: int, t: float) -> BeamJGCreateInfo_StickFibre: ...
    def SetName(self, name: str) -> BeamJGCreateInfo_StickFibre: ...
    def GetBeamJG(self) -> Mdl_BeamJGSect: ...
class BeamJGCreateInfo_ReinForceSteelStrand:
    def SetPara(self, r: float, cs: int, Hrl: int, Srw: int, Szj: int) -> BeamJGCreateInfo_ReinForceSteelStrand: ...
    def SetName(self, name: str) -> BeamJGCreateInfo_ReinForceSteelStrand: ...
    def GetBeamJG(self) -> Mdl_BeamJGSect: ...
class BeamJGCreateInfo_StickPlateAndMagnifySect:
    def SetPara(self, tw: int, tt: float, gangh: int, b: int, hb: int, hnt: int) -> BeamJGCreateInfo_StickPlateAndMagnifySect: ...
    def SetName(self, name: str) -> BeamJGCreateInfo_StickPlateAndMagnifySect: ...
    def GetBeamJG(self) -> Mdl_BeamJGSect: ...
class SteelJGCreateInfo:
    ID: int
    No_: int
    idNew: int
    Name: str
    k: int
    SteelLevel: int
    SHFS: float
    HJCC: float
    HDCD: float
    HDJG: float
    B1: float
    B2: float
    T1: float
    T2: float
    SubK: int
    TSecK: int
    IsXY: int
    IsInter: int
    Dmid: int
    SectionSteelName: str
    def SetKind(self, k: int) -> SteelJGCreateInfo: ...
    def SetName(self, name: str) -> SteelJGCreateInfo: ...
    def SetWeldLen(self, HDCD: float) -> SteelJGCreateInfo: ...
    def SetFilletWeldSize(self, HJCC: float) -> SteelJGCreateInfo: ...
    def SetWeldInterVal(self, HDJG: float) -> SteelJGCreateInfo: ...
    def SetWeldMethod(self, SHFS: float) -> SteelJGCreateInfo: ...
    def SetSteelLevel(self, SteelLevel: int) -> SteelJGCreateInfo: ...
    def SetDim(self, Dmid: int) -> SteelJGCreateInfo: ...
    def isXY(self, IsXY: int) -> SteelJGCreateInfo: ...
    def SetSectionSteelName(self, SectionSteelName: str) -> SteelJGCreateInfo: ...
    def SetSteelJGSect(self, B1: float, B2: float, T1: float, T2: float) -> SteelJGCreateInfo: ...
    def SetTSecK(self, TSecK: int) -> SteelJGCreateInfo: ...
    def SetIsInter(self, IsInter: int) -> SteelJGCreateInfo: ...
    def GetSteelJG(self) -> Mdl_SteelJGSect: ...
class ColCapSectCreateInfo:
    def SetKind(self, kind: int) -> ColCapSectCreateInfo: ...
    def SetSectPara(self, w: int, l: int, h: int, sw: int, sl: int, sh: int) -> ColCapSectCreateInfo: ...
    def SetName(self, name: str) -> ColCapSectCreateInfo: ...
    def GetColCapSect(self) -> Mdl_ColCapSect: ...
class StairDefCreateInfo:
    def SetKind(self, kind: int) -> StairDefCreateInfo: ...
    def SetStartPos(self, dis: int) -> StairDefCreateInfo: ...
    def SetEndPos(self, dis: int) -> StairDefCreateInfo: ...
    def SetLevel(self, H: int) -> StairDefCreateInfo: ...
    def IsPrefabricated(self, flag: int) -> StairDefCreateInfo: ...
    def SetStepW(self, width: int) -> StairDefCreateInfo: ...
    def SetCrossStair(self, H1: int, W1: int, H2: int, W2: int) -> StairDefCreateInfo: ...
    def SetAllLevel(self, allLevel: int) -> StairDefCreateInfo: ...
    def IsGenPtFarBeam(self, flag: int) -> StairDefCreateInfo: ...
    def IsGenColumn(self, flag: int) -> StairDefCreateInfo: ...
    def SetTZSect(self, W: int, H: int) -> StairDefCreateInfo: ...
    def Set1stPlatForm(self, platFormH: int, platFormW: int, slabThick: int, TbeamPos: int, platBeamW: int, platBeamH: int) -> StairDefCreateInfo: ...
    def Set2ndPlatForm(self, platFormH: int, platFormW: int, slabThick: int, TbeamPos: int, platBeamW: int, platBeamH: int) -> StairDefCreateInfo: ...
    def Set3rdPlatForm(self, platFormH: int, platFormW: int, slabThick: int, TbeamPos: int, platBeamW: int, platBeamH: int) -> StairDefCreateInfo: ...
    def Set1stStair(self, kind: int, width: int, thickness: int, lowPlatLen: int, midPlatLen: int, highPlatLen: int, lowStepNum: int, highStepNum: int) -> StairDefCreateInfo: ...
    def Set2ndStair(self, kind: int, width: int, thickness: int, lowPlatLen: int, midPlatLen: int, highPlatLen: int, lowStepNum: int, highStepNum: int) -> StairDefCreateInfo: ...
    def Set3rdStair(self, kind: int, width: int, thickness: int, lowPlatLen: int, midPlatLen: int, highPlatLen: int, lowStepNum: int, highStepNum: int) -> StairDefCreateInfo: ...
    def Set4thStair(self, kind: int, width: int, thickness: int, lowPlatLen: int, midPlatLen: int, highPlatLen: int, lowStepNum: int, highStepNum: int) -> StairDefCreateInfo: ...
    def SetGangH(self, gangh: int) -> StairDefCreateInfo: ...
    def GetStairDef(self) -> Mdl_StairDef: ...
class SkinCreateInfo:
    def SetDeadLive(self, dead: float, live: float) -> SkinCreateInfo: ...
    def SetTotalStress(self, totalStress: float) -> SkinCreateInfo: ...
    def SetMaterialStyle(self, mat: int) -> SkinCreateInfo: ...
    def SetConcreteLevel(self, concreteLevel: int) -> SkinCreateInfo: ...
    def SetDirection(self, dir: Vector) -> SkinCreateInfo: ...
    def SetCustomMaterialID(self, cusMatId: int) -> SkinCreateInfo: ...
    def SetNDirection(self, nDirection: str) -> SkinCreateInfo: ...
    def SetSurroundPt(self, joints: list[Mdl_Joint]) -> SkinCreateInfo: ...
    def SetThick(self, thick: int) -> SkinCreateInfo: ...
    def SetDirection(self, _dir: list) -> SkinCreateInfo: ...
    def SetSurroundPt(self, _joints: list) -> SkinCreateInfo: ...
    def GetSkinSeg(self) -> Mdl_SkinSeg: ...
class GKLoadDefCreateInfo:
    def SetDeadFacotr(self, dDead: float) -> GKLoadDefCreateInfo: ...
    def SetLiveFacotr(self, nLive: int, dLive1: float, dLive2: float, dLive3: float) -> GKLoadDefCreateInfo: ...
    def SetName(self, strName: str) -> GKLoadDefCreateInfo: ...
    def SetData(self, Data: str) -> GKLoadDefCreateInfo: ...
    def GetGKLoad(self) -> Mdl_GKLoadDef: ...
class FillWallSectCreateInfo:
    def SetFireProtect(self, FireProtectClass: int) -> FillWallSectCreateInfo: ...
    def SetName(self, Name: str) -> FillWallSectCreateInfo: ...
    def SetRongZhong(self, RongZhong: int) -> FillWallSectCreateInfo: ...
    def SetM(self, FillMainMat: int) -> FillWallSectCreateInfo: ...
    def SetThick(self, Thick: int) -> FillWallSectCreateInfo: ...
    def SetHeight(self, Height: int) -> FillWallSectCreateInfo: ...
    def SetK(self, K: int) -> FillWallSectCreateInfo: ...
    def SetFuncType(self, FuncType: int) -> FillWallSectCreateInfo: ...
    def SetKZJ(self, KZJ: int) -> FillWallSectCreateInfo: ...
    def SetE(self, E: int) -> FillWallSectCreateInfo: ...
    def SetU(self, U: float) -> FillWallSectCreateInfo: ...
    def SetFillWallType(self, tFillWallType: int) -> FillWallSectCreateInfo: ...
    def GetFillWallDef(self) -> Mdl_FillWallDef: ...
class FillWallSegCreateInfo:
    def SetDefID(self, SectID: int) -> FillWallSegCreateInfo: ...
    def SetStdFlrID(self, StdFlrID: int) -> FillWallSegCreateInfo: ...
    def SetPtBeg(self, x1: float, y1: float) -> FillWallSegCreateInfo: ...
    def SetPtEnd(self, x2: float, y2: float) -> FillWallSegCreateInfo: ...
    def SetPtCen(self, x1: float, y1: float) -> FillWallSegCreateInfo: ...
    def SetR(self, dR: float) -> FillWallSegCreateInfo: ...
    def SetAgS(self, x2: float) -> FillWallSegCreateInfo: ...
    def SetAgE(self, y2: float) -> FillWallSegCreateInfo: ...
    def SetEA(self, Ea: int) -> FillWallSegCreateInfo: ...
    def SetEZ(self, Ez: int) -> FillWallSegCreateInfo: ...
    def SetEZ1(self, Ez1: int) -> FillWallSegCreateInfo: ...
    def SetEZ2(self, Ez2: int) -> FillWallSegCreateInfo: ...
    def SetGridID(self, GridId: int) -> FillWallSegCreateInfo: ...
    def SetEA1(self, nEA1: int) -> FillWallSegCreateInfo: ...
    def SetHeight(self, nH: int) -> FillWallSegCreateInfo: ...
    def SetEZ3(self, ez3: int) -> FillWallSegCreateInfo: ...
    def GetFillWall(self) -> Mdl_FillWall: ...
class XNQSectCreateInfo:
    def SetName(self, name: str) -> XNQSectCreateInfo: ...
    def SetMat(self, mat: int) -> XNQSectCreateInfo: ...
    def SetKind(self, kind: int) -> XNQSectCreateInfo: ...
    def SetL1(self, nL1: int) -> XNQSectCreateInfo: ...
    def SetH1(self, nH1: int) -> XNQSectCreateInfo: ...
    def SetH(self, nH: int) -> XNQSectCreateInfo: ...
    def SetT(self, nThick: int) -> XNQSectCreateInfo: ...
    def SetBrcLevel(self, nBrcLevel: int) -> XNQSectCreateInfo: ...
    def SetBrcMaterial(self, nBrcMaterial: int) -> XNQSectCreateInfo: ...
    def SetWallLevel(self, nWallLevel: int) -> XNQSectCreateInfo: ...
    def SetWallMaterial(self, nWallMaterial: int) -> XNQSectCreateInfo: ...
    def SetShuBrcIdDef(self, nShuBrcIdDef: int) -> XNQSectCreateInfo: ...
    def SetBraceidDef(self, braceid: int) -> XNQSectCreateInfo: ...
    def SetQuality(self, dQ: float) -> XNQSectCreateInfo: ...
    def SetXNQPara(self, CalPara: str) -> XNQSectCreateInfo: ...
    def GetXNQDef(self) -> Mdl_XNQSect: ...
class DataFuncState:
    _Default = 0
    _Link = 1

class DataFuncFSM:
    def setCurState(self, state: str) -> None: ...
    def GetCurState(self) -> str: ...
class DataFunc:
    def XNQ_arrange(self, StdFlrID: int, SectID: int, idNode1: int, idNode2: int, idGrid: int, nd1: int, nd2: int, nTop: int, nBottom: int) -> Mdl_XNQSeg: ...
    def FillWall_arrange(self, fillwall: FillWallSegCreateInfo) -> Mdl_FillWall: ...
    def colCap_arrange(self, col: Mdl_ColSeg, colCapSect: Mdl_ColCapSect) -> None: ...
    def column_arrange(self, nodelist: list[Mdl_Joint], ColSect: Mdl_ColSect, EccX: int = 0, EccY: int = 0, Rotation: float = 0.0, HDiffB: int = 0) -> list[Mdl_ColSeg]: ...
    def load_arrange(self, member_list: list[T], loadsect: Mdl_LoadSect, type: int = 1) -> None: ...
    def load_arrange(self, member: T, loadsect: Mdl_LoadSect, type: int = 1) -> None: ...
    def skinLoad_arrange(self, skinseg: Mdl_SkinSeg, loadsect: Mdl_SkinLoadSect) -> None: ...
    def load_arrange(self, slab: Mdl_Slab, joint: Mdl_Joint, loadsect: Mdl_LoadSect, x1: int, y1: int, x2: int, y2: int, type: int = 1) -> None: ...
    def load_arrange(self, slab: Mdl_Slab, gkLoadDefKind: int, value: str) -> None: ...
    def Floors_Assemb(self, H_start: int, bzc: Mdl_StdFlr, number: int, height: int) -> None: ...
    def Floor_Assemb(self, bzc: Mdl_StdFlr, levelB: int, height: int, Name: str = '') -> Mdl_Floor: ...
    def property_arrange(self, id: int, name: str, type: int, value: str) -> Mdl_Property: ...
    def add_group(self, Name: str, nID: list[int], idNewZRC: list[int]) -> None: ...
    def GetGroupObjList(self, group: Mdl_Group) -> GroupInfoList: ...
    def GetGjId(self, kind: int, flr: int, No: int) -> int: ...
    def DbModel_Assign(self) -> None: ...
    @staticmethod
    def DeepCopy(obj: T) -> T: ...
    def GetUpdateInfo(self) -> Hi_UpdateInfo: ...
    def InitForLink(self, unionID: int) -> None: ...
    def UpdateModel(self) -> None: ...
    def column_arrange(self, _nodelist: list, ColSect: Mdl_ColSect, EccX: int = 0, EccY: int = 0, Rotation: float = 0.0, HDiffB: int = 0) -> list: ...
    def wallhole_arrange(self, _gridlist: list, defwindow: Mdl_WallHoleDef, Ecc: float = 0.0, HDiff: float = 0.0) -> list: ...
    def wall_arrange(self, _gridlist: list, WallSect: Mdl_WallSect, Ecc: int = 0, HDiff1: int = 0, HDiff2: int = 0, HDiffB: int = 0, sloping: int = 0, EccDown: int = 0, offset1: int = 0, offset2: int = 0) -> list: ...
    def load_arrange(self, _member_list: list, loadsect: Mdl_LoadSect, type: int = 1) -> None: ...
    def add_group(self, Name: str, _nID: list, _idNewZRC: list) -> None: ...
    def beam_arrange(self, _gridlist: list, BeamSect: Mdl_BeamSect, Ecc: int = 0, HDiff1: int = 0, HDiff2: int = 0, Rotation: float = 0.0) -> list: ...
    def brace_arrange(self, _nodelist: list, BraceSect: Mdl_BraceSect, EccX1: int = 0, EccY1: int = 0, HDiff1: int = 1, EccX2: int = 0, EccY2: int = 0, HDiff2: int = 1, Rotation: float = 0.0) -> list: ...
    def grid_generate(self, _nodelist: list, direct_x: int, direct_y: int) -> list: ...
    def merge_nodelist(self, _nodelist1: list, _nodelist2: list) -> list: ...
    def node_generate(self, _xspans: list, _yspans: list, bzc: Mdl_StdFlr, Eon: int = 0) -> list: ...
    def Test_List(self, input: list) -> list[int]: ...
    def Test_List01(self) -> list: ...
    @staticmethod
    def PyListToCSharpList(pyList: list) -> list[T]: ...
    @staticmethod
    def PyListToCSharpList2nd(pyList: list) -> list[list[T]]: ...
    @staticmethod
    def ConvertCSharpListToPythonList(csharpList: Any) -> list: ...
    def GetPreModel(self) -> Hi_DbModelData: ...
    def GetDbModelData(self) -> Hi_DbModelData: ...
    def GetStdFlrList(self) -> list[Mdl_StdFlr]: ...
    def GetProjectParaList(self) -> list[Mdl_ProjectPara]: ...
    def GetLoadSegList(self) -> list[Mdl_LoadSeg]: ...
    def GetLoadSectList(self) -> list[Mdl_LoadSect]: ...
    def GetStairSegList(self) -> list[Mdl_StairSeg]: ...
    def GetStairDefList(self) -> list[Mdl_StairDef]: ...
    def GetBraceSegList(self) -> list[Mdl_BraceSeg]: ...
    def GetBraceSectList(self) -> list[Mdl_BraceSect]: ...
    def GetColCapSegList(self) -> list[Mdl_ColcapSeg]: ...
    def GetBeamJYSegList(self) -> list[Mdl_BeamYSeg]: ...
    def GetBeamJYSectList(self) -> list[Mdl_BeamJY]: ...
    def GetColCapSectList(self) -> list[Mdl_ColCapSect]: ...
    def GetColSegList(self) -> list[Mdl_ColSeg]: ...
    def GetColSectList(self) -> list[Mdl_ColSect]: ...
    def GetCantiSlabList(self) -> list[Mdl_CantiSlab]: ...
    def GetPropertyList(self) -> list[Mdl_Property]: ...
    def GetCantiSlabDefList(self) -> list[Mdl_CantiSlabDef]: ...
    def GetSlabHoleDefList(self) -> list[Mdl_SlabHoleDef]: ...
    def GetSlabList(self) -> list[Mdl_Slab]: ...
    def GetSubBeamList(self) -> list[Mdl_SubBeam]: ...
    def GetBeamSegList(self) -> list[Mdl_BeamSeg]: ...
    def GetBeamSectList(self) -> list[Mdl_BeamSect]: ...
    def GetWallHoleList(self) -> list[Mdl_WallHole]: ...
    def GetWallHoleDefList(self) -> list[Mdl_WallHoleDef]: ...
    def GetWallSegList(self) -> list[Mdl_WallSeg]: ...
    def GetWallSectList(self) -> list[Mdl_WallSect]: ...
    def GetJointList(self) -> list[Mdl_Joint]: ...
    def GetGridList(self) -> list[Mdl_Grid]: ...
    def GetAxisList(self) -> list[Mdl_Axis]: ...
    def GetFloorList(self) -> list[Mdl_Floor]: ...
    def GetStdFlrParaList(self) -> list[Mdl_StdFlrPara]: ...
    def GetSlabHoleList(self) -> list[Mdl_SlabHole]: ...
    def GetGKLoadDefList(self) -> list[Mdl_GKLoadDef]: ...
    def SetID(self, id: int) -> None: ...
    def SetCurState(self, state: DataFuncState) -> None: ...
    def GetID(self) -> int: ...
    def GetStdFlrNo(self) -> int: ...
    def GetProjectParaNo(self) -> int: ...
    def GetLoadSegNo(self) -> int: ...
    def GetLoadSectNo(self) -> int: ...
    def GetStairSegNo(self) -> int: ...
    def GetStairDefNo(self) -> int: ...
    def GetBraceSegNo(self) -> int: ...
    def GetBraceSectNo(self) -> int: ...
    def GetColCapSegNo(self) -> int: ...
    def GetBeamJYSegNo(self) -> int: ...
    def GetBeamJYSectNo(self) -> int: ...
    def GetColCapSectNo(self) -> int: ...
    def GetColSegNo(self) -> int: ...
    def GetColSectNo(self) -> int: ...
    def GetCantiSlabNo(self) -> int: ...
    def GetPropertyNo(self) -> int: ...
    def GetCantiSlabDefNo(self) -> int: ...
    def GetSlabHoleDefNo(self) -> int: ...
    def GetSlabNo(self) -> int: ...
    def GetSubBeamNo(self) -> int: ...
    def GetBeamSegNo(self) -> int: ...
    def GetBeamSectNo(self) -> int: ...
    def GetWallHoleNo(self) -> int: ...
    def GetWallHoleDefNo(self) -> int: ...
    def GetWallSegNo(self) -> int: ...
    def GetWallSectNo(self) -> int: ...
    def GetJointNo(self) -> int: ...
    def GetGridNo(self) -> int: ...
    def GetAxisNo(self) -> int: ...
    def GetFloorNo(self) -> int: ...
    def GetStdFlrParaNo(self) -> int: ...
    def GetSlabHoleNo(self) -> int: ...
    def SetModel(self, mdl: Hi_DbModelData) -> None: ...
    def StdFlr_Generate(self, height: int, deadload: float = 5.0, liveload: float = 2.0, para: str = '', Name: str = '') -> Mdl_StdFlr: ...
    def SpcFlr_Generate(self) -> Mdl_StdFlr: ...
    def ProjectPara_Set(self, id: int, ParaVal: str) -> Mdl_ProjectPara: ...
    def Joint_Generate(self, StdFlrID: int, X: float, Y: float, HDiff: float = 0.0) -> Mdl_Joint: ...
    def node_generate(self, xspans: list[int], yspans: list[int], bzc: Mdl_StdFlr, Eon: int = 0) -> list[list[Mdl_Joint]]: ...
    def merge_nodelist(self, nodelist1: list[list[Mdl_Joint]], nodelist2: list[list[Mdl_Joint]]) -> list[list[Mdl_Joint]]: ...
    def Axis_Generate(self, StdFlrID: int, Jt1ID: int, Jt2ID: int) -> Mdl_Axis: ...
    def Grid_Generate(self, StdFlrID: int, Jt1ID: int, Jt2ID: int, AxisID: int) -> Mdl_Grid: ...
    def grid_generate(self, nodelist: list[list[Mdl_Joint]], direct_x: int, direct_y: int) -> list[Mdl_Grid]: ...
    def Load_Def(self, elementkind: int, shapeval: str, name: str = '') -> Mdl_LoadSect: ...
    def SkinLoadSect_Def(self, kind: int, style: int, val: float, dir: int) -> Mdl_SkinLoadSect: ...
    def GKLoad_Def(self, mdl_GKLoad: GKLoadDefCreateInfo) -> Mdl_GKLoadDef: ...
    def ColSect_Def(self, mat: int, kind: int, ShapeVal: str, name: str = '') -> Mdl_ColSect: ...
    def ColCapSect_Def(self, createInfo: ColCapSectCreateInfo) -> Mdl_ColCapSect: ...
    def ColJGSect_Def(self, createInfo: ColJGCreateInfo) -> Mdl_ColJGSect: ...
    def BeamJGSect_Def(self, createInfo: BeamJGCreateInfo) -> Mdl_BeamJGSect: ...
    def SteelJGSect_Def(self, createInfo: SteelJGCreateInfo) -> Mdl_SteelJGSect: ...
    def BeamSect_Def(self, mat: int, kind: int, ShapeVal: str, name: str = '') -> Mdl_BeamSect: ...
    def BeamJYSect_Def(self, kind: int, ShapeVal: str, name: str = '') -> Mdl_BeamJY: ...
    def WallSect_Def(self, mat: int, kind: int, b: int, name: str = '') -> Mdl_WallSect: ...
    def Stair_Def(self, stairDefInfo: StairDefCreateInfo) -> Mdl_StairDef: ...
    def XNQ_Def(self, XNQDefInfo: XNQSectCreateInfo) -> Mdl_XNQSect: ...
    def FillWall_Def(self, FillWallDefInfo: FillWallSectCreateInfo) -> Mdl_FillWallDef: ...
    def WallHoleDef(self, b: int, h: int, name: str = '') -> Mdl_WallHoleDef: ...
    def BraceSect_Def(self, mat: int, kind: int, ShapeVal: str, name: str = '') -> Mdl_BraceSect: ...
    def SlabJYSect_Def(self, kind: int, para: str, name: str = '') -> Mdl_SlabJYDef: ...
    def beam_arrange(self, gridlist: list[Mdl_Grid], BeamSect: Mdl_BeamSect, Ecc: int = 0, HDiff1: int = 0, HDiff2: int = 0, Rotation: float = 0.0) -> list[Mdl_BeamSeg]: ...
    def beam_arrange(self, grid: Mdl_Grid, BeamSect: Mdl_BeamSect, Ecc: int = 0, HDiff1: int = 0, HDiff2: int = 0, Rotation: float = 0.0) -> Mdl_BeamSeg: ...
    def beamjg_arrange(self, beam: Mdl_BeamSeg, beamJGSect: Mdl_BeamJGSect) -> Mdl_JGSeg: ...
    def columnjg_arrange(self, col: Mdl_ColSeg, colJGSect: Mdl_ColJGSect) -> Mdl_JGSeg: ...
    def steeljg_arrange(self, beam: Mdl_BeamSeg, steelJGSect: Mdl_SteelJGSect) -> Mdl_JGSeg: ...
    def steeljg_arrange(self, col: Mdl_ColSeg, steelJGSect: Mdl_SteelJGSect) -> Mdl_JGSeg: ...
    def stair_arrange(self, slab: Mdl_Slab, stairdef: Mdl_StairDef, start_node: int = 1, antiClockwise: int = 1) -> Mdl_StairSeg: ...
    def beamjy_arrange(self, beamjydef: Mdl_BeamJY, beam: Mdl_BeamSeg, end1: bool = True, end2: bool = True) -> None: ...
    def wall_arrange(self, gridlist: list[Mdl_Grid], WallSect: Mdl_WallSect, Ecc: int = 0, HDiff1: int = 0, HDiff2: int = 0, HDiffB: int = 0, sloping: int = 0, EccDown: int = 0, offset1: int = 0, offset2: int = 0) -> list[Mdl_WallSeg]: ...
    def wall_arrange(self, grid: Mdl_Grid, WallSect: Mdl_WallSect, Ecc: int = 0, HDiff1: int = 0, HDiff2: int = 0, HDiffB: int = 0, sloping: int = 0, EccDown: int = 0, offset1: int = 0, offset2: int = 0) -> Mdl_WallSeg: ...
    def wallhole_arrange(self, gridlist: list[Mdl_Grid], defwindow: Mdl_WallHoleDef, Ecc: float = 0.0, HDiff: float = 0.0) -> list[Mdl_WallHole]: ...
    def wallhole_arrange(self, grid: Mdl_Grid, defwindow: Mdl_WallHoleDef, Ecc: float = 0.0, HDiff: float = 0.0) -> Mdl_WallHole: ...
    def brace_arrange(self, nodelist: list[list[Mdl_Joint]], BraceSect: Mdl_BraceSect, EccX1: int = 0, EccY1: int = 0, HDiff1: int = 1, EccX2: int = 0, EccY2: int = 0, HDiff2: int = 1, Rotation: float = 0.0) -> list[Mdl_BraceSeg]: ...
    def brace_arrange(self, node1: Mdl_Joint, node2: Mdl_Joint, BraceSect: Mdl_BraceSect, EccX1: int = 0, EccY1: int = 0, HDiff1: int = 1, EccX2: int = 0, EccY2: int = 0, HDiff2: int = 1, Rotation: float = 0.0) -> Mdl_BraceSeg: ...
    def simple_truss(self, xspans: list[int], yspans: list[int], Z: int, kjc: Mdl_StdFlr, defbrace: Mdl_BraceSect, direct_x: int, direct_y: int, value_z: int = 0) -> None: ...
    def slab_arrange(self, Xc: int, Yc: int, Thick: int, bzc: Mdl_StdFlr, ishole: bool, cc: int = 0) -> Mdl_Slab: ...
    def slab_arrange(self, slabInfo: SlabCreateInfo) -> Mdl_Slab: ...
    def midslab_arrange(self, midSlabInfo: MidSlabCreateInfo) -> Mdl_MidSlab: ...
    def skin_arrange(self, skinInfo: SkinCreateInfo) -> Mdl_SkinSeg: ...
    def slabjy_arrange(self, slabjydef: Mdl_SlabJYDef, grid: Mdl_Grid) -> None: ...
    def column_arrange(self, nodelist: list[list[Mdl_Joint]], ColSect: Mdl_ColSect, EccX: int = 0, EccY: int = 0, Rotation: float = 0.0, HDiffB: int = 0) -> list[Mdl_ColSeg]: ...
    def column_arrange(self, node: Mdl_Joint, ColSect: Mdl_ColSect, EccX: int = 0, EccY: int = 0, Rotation: float = 0.0, HDiffB: int = 0) -> Mdl_ColSeg: ...
class Link2YJK:
    Instance: Link2YJK
    def LinkPrepareWrapper(self, model: Any, type: type) -> None: ...
    def LinkPrepare(self, model: T) -> None: ...
    def GetIPCdataWrapper(self, type: type) -> Any: ...
    def GetIPCdata(self) -> T: ...
    def GetIPCUnionID(self) -> int: ...
class Property:
    def getVal(self, index: int) -> float: ...
    def setVal(self, index: int, val: float) -> None: ...
    def GetValString(self) -> str: ...
class BzcPara:
    def getVal(self, index: int) -> float: ...
    def setVal(self, index: int, val: int) -> None: ...
    def GetValString(self) -> str: ...
class XNQPara:
    def getVal(self, index: int) -> float: ...
    def setVal(self, index: int, val: float) -> None: ...
    def GetValString(self) -> str: ...
class JYDef:
    def getVal(self, index: int) -> float: ...
    def setVal(self, index: int, val: int) -> None: ...
    def GetValString(self) -> str: ...
class ProjectPara:
    def findParaById(self, id: int) -> Mdl_ProjectPara: ...
class GroupInfoList:
    name: str
    nodelist: list[Mdl_Joint]
    gridlist: list[Mdl_Grid]
    beamlist: list[Mdl_BeamSeg]
    collist: list[Mdl_ColSeg]
    bracelist: list[Mdl_BraceSeg]
    walllist: list[Mdl_WallSeg]
    slablist: list[Mdl_Slab]
    loadlist: list[Mdl_LoadSeg]
    windowlist: list[Mdl_WallHole]
class ModeleUsedId:
    StdFlrIDList: list[int]
    LoadSectIDList: list[int]
    StairSegIDList: list[int]
    StairDefIDList: list[int]
    BraceSegIDList: list[int]
    BraceSectIDList: list[int]
    ColCapSegIDList: list[int]
    BeamJYSegIDList: list[int]
    BeamJYSectIDList: list[int]
    ColCapSectIDList: list[int]
    ColSegIDList: list[int]
    ColSectIDList: list[int]
    CantiSlabIDList: list[int]
    PropertyIDList: list[int]
    CantiSlabDefIDList: list[int]
    SlabHoleDefIDList: list[int]
    SlabIDList: list[int]
    SlabJYDefIDList: list[int]
    SubBeamIDList: list[int]
    BeamSegIDList: list[int]
    BeamSectIDList: list[int]
    WallHoleIDList: list[int]
    WallHoleDefIDList: list[int]
    WallSegIDList: list[int]
    WallSectIDList: list[int]
    JointIDList: list[int]
    GridIDList: list[int]
    AxisIDList: list[int]
    FloorIDList: list[int]
    StdFlrParaIDList: list[int]
    SlabHoleIDList: list[int]
    GKLoadDefIDList: list[int]
    GroupIDList: list[int]
class State:
    _Default = 0
    _Link = 1

class <>c__DisplayClass252_0:
    StdFlrID: int