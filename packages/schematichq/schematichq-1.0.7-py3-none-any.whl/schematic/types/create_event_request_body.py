# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .event_body import EventBody
from .create_event_request_body_event_type import CreateEventRequestBodyEventType
import pydantic
import datetime as dt
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class CreateEventRequestBody(UniversalBaseModel):
    body: typing.Optional[EventBody] = None
    event_type: CreateEventRequestBodyEventType = pydantic.Field()
    """
    Either 'identify' or 'track'
    """

    sent_at: typing.Optional[dt.datetime] = pydantic.Field(default=None)
    """
    Optionally provide a timestamp at which the event was sent to Schematic
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
