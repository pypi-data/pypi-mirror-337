main_service: node
services:
  node:
    image: node:22.13.1-slim
test_commands:
  - 'npx vitest run --coverage.include="**/*.{js,jsx,ts,tsx}" --coverage.all=true --reporter=json --outputFile=vitest-results.json'
  - 'if [ -f "coverage/coverage-final.json" ]; then mv coverage/coverage-final.json coverage.json; else echo "Warn: coverage/coverage-final.json not found"; exit 1; fi'
single_file_test_commands:
  - "npx vitest run --coverage $TEST_FILE --reporter=json --outputFile=vitest-results.json"
  - 'if [ -f "coverage/coverage-final.json" ]; then mv coverage/coverage-final.json coverage.json; else echo "Warn: coverage/coverage-final.json not found"; exit 1; fi'
setup_commands:
  - apt-get update -qqy || true
  - apt-get install -qqy git || true
  - npm install --legacy-peer-deps
  - npm install --save-dev typescript || true
  - npm install --save-dev @types/node || true
  - npm install --save-dev vitest@latest || true
  - npm install --save-dev @vitest/coverage-v8@latest || true
  - npm install --save-dev @vitest/coverage-istanbul || true
  - npm install --save-dev @babel/core || true
  - npm install --save-dev @babel/preset-typescript || true
  - npm install --save-dev @babel/preset-react || true
  - npm install --save-dev @babel/preset-env || true
  - npm install --save-dev @testing-library/react || true
  - npm install --save-dev @testing-library/dom || true
  - npm install --save-dev @testing-library/jest-dom || true
  - npm install --save-dev @testing-library/user-event || true
  - npm install --save-dev jsdom || true
  - '[ -f tsconfig.json ] || echo ''{"compilerOptions":{"target":"es5","module":"commonjs","strict":true,"esModuleInterop":true,"skipLibCheck":true,"forceConsistentCasingInFileNames":true,"jsx":"react-jsx","types":["jest","node"]}}'' > tsconfig.json'
  - '[ -f babel.config.js ] || echo ''module.exports={presets:[["@babel/preset-env",{targets:{node:"current"}}],"@babel/preset-typescript",["@babel/preset-react",{runtime:"automatic"}]]}'' > babel.config.js'
ignore:
  - "*prettierrc*"
  - "*eslintrc*"
  - "*stylelintrc*"
  - "*commitlintrc*"
  - "*lintstagedrc*"
  - "*huskyrc*"
  - "*config.test.*"
  - "*.config.js"
  - "*.config.ts"
  - "*.config.jsx"
  - "*.d.ts"
  - "*/config.*"
  - "config.*"
