# coding: utf-8

"""
Slurm REST API

API to access and control Slurm

The version of the OpenAPI document: Slurm-24.11.1&openapi/slurmdbd&openapi/slurmctld
Contact: sales@schedmd.com
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from slurmrestpy.models.v0040_qos_limits_max_tres import V0040QosLimitsMaxTres


class TestV0040QosLimitsMaxTres(unittest.TestCase):
    """V0040QosLimitsMaxTres unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V0040QosLimitsMaxTres:
        """Test V0040QosLimitsMaxTres
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `V0040QosLimitsMaxTres`
        """
        model = V0040QosLimitsMaxTres()
        if include_optional:
            return V0040QosLimitsMaxTres(
                total = [
                    slurmrestpy.models.v0/0/40_tres.v0.0.40_tres(
                        type = '',
                        name = '',
                        id = 56,
                        count = 56, )
                    ],
                minutes = slurmrestpy.models.v0_0_40_qos_limits_max_tres_minutes.v0_0_40_qos_limits_max_tres_minutes(
                    per = slurmrestpy.models.v0_0_40_qos_limits_max_tres_minutes_per.v0_0_40_qos_limits_max_tres_minutes_per(
                        qos = [
                            slurmrestpy.models.v0/0/40_tres.v0.0.40_tres(
                                type = '',
                                name = '',
                                id = 56,
                                count = 56, )
                            ],
                        job = [
                            slurmrestpy.models.v0/0/40_tres.v0.0.40_tres(
                                type = '',
                                name = '',
                                id = 56,
                                count = 56, )
                            ],
                        account = ,
                        user = , ), ),
                per = slurmrestpy.models.v0_0_40_qos_limits_max_tres_per.v0_0_40_qos_limits_max_tres_per(
                    account = [
                        slurmrestpy.models.v0/0/40_tres.v0.0.40_tres(
                            type = '',
                            name = '',
                            id = 56,
                            count = 56, )
                        ],
                    job = [
                        slurmrestpy.models.v0/0/40_tres.v0.0.40_tres(
                            type = '',
                            name = '',
                            id = 56,
                            count = 56, )
                        ],
                    node = ,
                    user = , )
            )
        else:
            return V0040QosLimitsMaxTres(
        )
        """

    def testV0040QosLimitsMaxTres(self):
        """Test V0040QosLimitsMaxTres"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
