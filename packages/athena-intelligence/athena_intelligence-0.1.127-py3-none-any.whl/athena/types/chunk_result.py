# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
from .chunk_result_chunk_id import ChunkResultChunkId
import typing
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class ChunkResult(UniversalBaseModel):
    """
    The result of a chunk extraction.
    """

    chunk_id: ChunkResultChunkId
    chunk_result: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
