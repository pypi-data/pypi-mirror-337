[project]
name = "medvae"
version = "0.0.8"
requires-python = ">=3.9"
description = "MedVAE is a family of six medical image autoencoders that can encode high-dimensional medical images into latent representations."
readme = "README.md"
license = { file = "LICENSE" }
authors = [
    { name = "Maya Varma", email = "mayavarma@cs.stanford.edu"},
    { name = "Ashwin Kumar", email = "akkumar@stanford.edu"},
    { name = "Rogier van der Sluijs", email = "sluijs@stanford.edu"},
    { name = "Stanford Machine Intelligence for Medical Imaging (MIMI)" }
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Healthcare Industry",
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
]
keywords = [
    'deep learning',
    'image compression',
    'compression',
    'efficiency',
    'computer aided diagnosis',
    'medical image analysis',
    'autoencoders',
    'representation learning',
    'Med-VAE',
    'medvae'
]
dependencies = [
    "torch>=2.4.1",
    "accelerate>=0.34.2",
    "wandb==0.14.0",
    "tqdm",
    "dicom2nifti",
    "scipy",
    "batchgenerators>=0.25",
    "numpy>=1.24",
    "scikit-learn",
    "scikit-image>=0.19.3",
    "SimpleITK>=2.4.0",
    "omegaconf>=2.3.0",
    "pandas",
    'requests',
    "nibabel",
    "matplotlib",
    "seaborn",
    "imagecodecs",
    "yacs",
    "batchgeneratorsv2>=0.2",
    "einops>=0.8.0",
    "monai>=1.3.2",
    "torchvision>=0.19.1",
    "gdown",
    "nilearn",
    "pyrootutils",
    "hydra-core",
    "torchmetrics",
    "hydra-colorlog",
    "open_clip_torch==2.24.0",
    "polars==0.19.10",
    "rich",
#    "clip@git+https://github.com/openai/CLIP.git"
]

[project.urls]
homepage = "https://github.com/StanfordMIMI/MedVAE"
repository = "https://github.com/StanfordMIMI/MedVAE"

[project.scripts]
medvae_inference = "medvae.medvae_inference:main"
medvae_finetune = "medvae.medvae_finetune:main"
medvae_finetune_s2 = "medvae.medvae_finetune_s2:main"
medvae_classify = "medvae.medvae_cls:main"

[project.optional-dependencies]
dev = [
    "ruff",
    "pre-commit",
    "mdformat"
]

[build-system]
requires = ["setuptools>=67.8.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["medvae", "medvae.utils", "medvae.models", "medvae.utils.vae"]
exclude = ["documentation", "configs"]

[tool.codespell]
skip = '.git,*.pdf,*.svg, *.png'