{
    "config": {
        "error": {
            "already_configured": "PCHK connection using the same ip address/port is already configured.",
            "authentication_error": "Authentication failed. Wrong username or password.",
            "connection_refused": "Unable to connect to PCHK. Check IP and port.",
            "license_error": "Maximum number of connections was reached. An additional licence key is required."
        },
        "step": {
            "reconfigure": {
                "description": "Reconfigure connection to LCN host.",
                "title": "Reconfigure LCN host"
            },
            "user": {
                "data": {
                    "acknowledge": "Request acknowledgement from modules",
                    "dim_mode": "Dimming mode",
                    "sk_num_tries": "Segment coupler scan attempts"
                },
                "data_description": {
                    "acknowledge": "Retry sending commands if no expected response is received from modules (increases bus traffic).",
                    "dim_mode": "The number of steps used for dimming outputs of all LCN modules.",
                    "host": "Name of the LCN integration entry.",
                    "ip_address": "IP address or hostname of the PCHK server.",
                    "password": "Password for authorisation on the PCHK server.",
                    "port": "Port used by the PCHK server.",
                    "sk_num_tries": "If you have a segment coupler in your LCN installation, increase this number to at least 3, so all segment couplers are identified correctly.",
                    "username": "Username for authorisation on the PCHK server."
                },
                "description": "Set up new connection to LCN host.",
                "title": "Set up LCN host"
            }
        }
    },
    "device_automation": {
        "extra_fields": {
            "action": "Action",
            "code": "Code",
            "key": "Key",
            "level": "Level"
        }
    },
    "exceptions": {
        "invalid_address": {
            "message": "LCN device for given address has not been configured."
        },
        "invalid_device_id": {
            "message": "LCN device for given device ID has not been configured."
        },
        "no_device_identifier": {
            "message": "No device identifier provided. Please provide the device ID."
        }
    },
    "issues": {
        "deprecated_address_parameter": {
            "description": "The 'address' parameter in the LCN action calls is deprecated. The 'device ID' parameter should be used going forward.\n\nPlease adjust your automations or scripts to fix this issue.",
            "title": "Deprecated 'address' parameter"
        },
        "deprecated_keylock_sensor": {
            "description": "Your LCN key lock binary sensor entity `{entity}` is being used in automations or scripts. A key lock switch entity is available and should be used going forward.\n\nPlease adjust your automations or scripts to fix this issue.",
            "title": "Deprecated LCN key lock binary sensor"
        },
        "deprecated_regulatorlock_sensor": {
            "description": "Your LCN regulator lock binary sensor entity `{entity}` is being used in automations or scripts. A regulator lock switch entity is available and should be used going forward.\n\nPlease adjust your automations or scripts to fix this issue.",
            "title": "Deprecated LCN regulator lock binary sensor"
        }
    },
    "services": {
        "address_to_device_id": {
            "fields": {
                "host": {
                    "description": "Host name as given in the integration panel.",
                    "name": "Host name"
                },
                "id": {
                    "name": "Module or group ID"
                },
                "segment_id": {
                    "name": "Segment ID"
                },
                "type": {
                    "name": "Type"
                }
            },
            "name": "Address to device ID"
        },
        "dyn_text": {
            "description": "Sends dynamic text to LCN-GTxD displays.",
            "fields": {
                "address": {
                    "name": "Address"
                },
                "row": {
                    "description": "Text row.",
                    "name": "Row"
                },
                "text": {
                    "name": "Text"
                }
            },
            "name": "Dynamic text"
        },
        "led": {
            "description": "Sets the LED state.",
            "fields": {
                "address": {
                    "name": "Address"
                },
                "led": {
                    "description": "The LED port of the device.",
                    "name": "LED"
                },
                "state": {
                    "description": "The LED state to set.",
                    "name": "State"
                }
            },
            "name": "LED"
        },
        "lock_keys": {
            "description": "Locks keys.",
            "fields": {
                "address": {
                    "name": "Address"
                },
                "state": {
                    "description": "Key lock states as string (1=on, 2=off, T=toggle, -=nochange).",
                    "name": "State"
                },
                "table": {
                    "description": "Table with keys to lock (must be A for interval).",
                    "name": "Table"
                },
                "time": {
                    "description": "Lock interval."
                }
            }
        },
        "output_abs": {
            "fields": {
                "device_id": {
                    "description": "The device ID of the LCN module or group."
                }
            }
        },
        "output_rel": {
            "name": "Output relative brightness"
        },
        "output_toggle": {
            "description": "Toggles output port.",
            "fields": {
                "address": {
                    "name": "Address"
                },
                "transition": {
                    "name": "Transition"
                }
            },
            "name": "Toggle output"
        },
        "pck": {
            "description": "Sends arbitrary PCK command.",
            "fields": {
                "address": {
                    "name": "Address"
                },
                "pck": {
                    "description": "PCK command (without address header).",
                    "name": "PCK"
                }
            },
            "name": "PCK"
        },
        "relays": {
            "description": "Sets the relay's status.",
            "fields": {
                "address": {
                    "name": "Address"
                },
                "state": {
                    "description": "Relays states as string (1=on, 2=off, t=toggle, -=no change).",
                    "name": "State"
                }
            },
            "name": "Relays"
        },
        "send_keys": {
            "description": "Sends keys (which executes bound commands).",
            "fields": {
                "address": {
                    "name": "Address"
                },
                "keys": {
                    "description": "Keys to send.",
                    "name": "Keys"
                },
                "state": {
                    "description": "Key state upon sending (must be hit for deferred).",
                    "name": "State"
                },
                "time": {
                    "description": "Send delay."
                }
            }
        },
        "var_reset": {
            "name": "Reset variable"
        }
    }
}