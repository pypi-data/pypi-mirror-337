# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from . import _utilities
import typing
# Export this package's modules as members:
from .architecture import *
from .computeprofile import *
from .computeresource import *
from .defaulttemplate import *
from .domain import *
from .environment import *
from .get_architecture import *
from .get_computeprofile import *
from .get_computeresource import *
from .get_defaulttemplate import *
from .get_domain import *
from .get_environment import *
from .get_global_parameter import *
from .get_hostgroup import *
from .get_httpproxy import *
from .get_image import *
from .get_jobtemplate import *
from .get_katello_content_credential import *
from .get_katello_content_view import *
from .get_katello_lifecycle_environment import *
from .get_katello_product import *
from .get_katello_repository import *
from .get_katello_sync_plan import *
from .get_media import *
from .get_model import *
from .get_operatingsystem import *
from .get_parameter import *
from .get_partitiontable import *
from .get_policy import *
from .get_provisioningtemplate import *
from .get_puppetclass import *
from .get_setting import *
from .get_smartclassparameter import *
from .get_smartproxy import *
from .get_subnet import *
from .get_templateinput import *
from .get_templatekind import *
from .get_user import *
from .get_usergroup import *
from .global_parameter import *
from .host import *
from .hostgroup import *
from .httpproxy import *
from .image import *
from .jobtemplate import *
from .katello_content_credential import *
from .katello_content_view import *
from .katello_lifecycle_environment import *
from .katello_product import *
from .katello_repository import *
from .katello_sync_plan import *
from .media import *
from .model import *
from .operatingsystem import *
from .override_value import *
from .parameter import *
from .partitiontable import *
from .provider import *
from .provisioningtemplate import *
from .smartproxy import *
from .subnet import *
from .templateinput import *
from .user import *
from .usergroup import *
from ._inputs import *
from . import outputs

# Make subpackages available:
if typing.TYPE_CHECKING:
    import pulumi_foreman.config as __config
    config = __config
else:
    config = _utilities.lazy_import('pulumi_foreman.config')

_utilities.register(
    resource_modules="""
[
 {
  "pkg": "foreman",
  "mod": "index/architecture",
  "fqn": "pulumi_foreman",
  "classes": {
   "foreman:index/architecture:Architecture": "Architecture"
  }
 },
 {
  "pkg": "foreman",
  "mod": "index/computeprofile",
  "fqn": "pulumi_foreman",
  "classes": {
   "foreman:index/computeprofile:Computeprofile": "Computeprofile"
  }
 },
 {
  "pkg": "foreman",
  "mod": "index/computeresource",
  "fqn": "pulumi_foreman",
  "classes": {
   "foreman:index/computeresource:Computeresource": "Computeresource"
  }
 },
 {
  "pkg": "foreman",
  "mod": "index/defaulttemplate",
  "fqn": "pulumi_foreman",
  "classes": {
   "foreman:index/defaulttemplate:Defaulttemplate": "Defaulttemplate"
  }
 },
 {
  "pkg": "foreman",
  "mod": "index/domain",
  "fqn": "pulumi_foreman",
  "classes": {
   "foreman:index/domain:Domain": "Domain"
  }
 },
 {
  "pkg": "foreman",
  "mod": "index/environment",
  "fqn": "pulumi_foreman",
  "classes": {
   "foreman:index/environment:Environment": "Environment"
  }
 },
 {
  "pkg": "foreman",
  "mod": "index/globalParameter",
  "fqn": "pulumi_foreman",
  "classes": {
   "foreman:index/globalParameter:GlobalParameter": "GlobalParameter"
  }
 },
 {
  "pkg": "foreman",
  "mod": "index/host",
  "fqn": "pulumi_foreman",
  "classes": {
   "foreman:index/host:Host": "Host"
  }
 },
 {
  "pkg": "foreman",
  "mod": "index/hostgroup",
  "fqn": "pulumi_foreman",
  "classes": {
   "foreman:index/hostgroup:Hostgroup": "Hostgroup"
  }
 },
 {
  "pkg": "foreman",
  "mod": "index/httpproxy",
  "fqn": "pulumi_foreman",
  "classes": {
   "foreman:index/httpproxy:Httpproxy": "Httpproxy"
  }
 },
 {
  "pkg": "foreman",
  "mod": "index/image",
  "fqn": "pulumi_foreman",
  "classes": {
   "foreman:index/image:Image": "Image"
  }
 },
 {
  "pkg": "foreman",
  "mod": "index/jobtemplate",
  "fqn": "pulumi_foreman",
  "classes": {
   "foreman:index/jobtemplate:Jobtemplate": "Jobtemplate"
  }
 },
 {
  "pkg": "foreman",
  "mod": "index/katelloContentCredential",
  "fqn": "pulumi_foreman",
  "classes": {
   "foreman:index/katelloContentCredential:KatelloContentCredential": "KatelloContentCredential"
  }
 },
 {
  "pkg": "foreman",
  "mod": "index/katelloContentView",
  "fqn": "pulumi_foreman",
  "classes": {
   "foreman:index/katelloContentView:KatelloContentView": "KatelloContentView"
  }
 },
 {
  "pkg": "foreman",
  "mod": "index/katelloLifecycleEnvironment",
  "fqn": "pulumi_foreman",
  "classes": {
   "foreman:index/katelloLifecycleEnvironment:KatelloLifecycleEnvironment": "KatelloLifecycleEnvironment"
  }
 },
 {
  "pkg": "foreman",
  "mod": "index/katelloProduct",
  "fqn": "pulumi_foreman",
  "classes": {
   "foreman:index/katelloProduct:KatelloProduct": "KatelloProduct"
  }
 },
 {
  "pkg": "foreman",
  "mod": "index/katelloRepository",
  "fqn": "pulumi_foreman",
  "classes": {
   "foreman:index/katelloRepository:KatelloRepository": "KatelloRepository"
  }
 },
 {
  "pkg": "foreman",
  "mod": "index/katelloSyncPlan",
  "fqn": "pulumi_foreman",
  "classes": {
   "foreman:index/katelloSyncPlan:KatelloSyncPlan": "KatelloSyncPlan"
  }
 },
 {
  "pkg": "foreman",
  "mod": "index/media",
  "fqn": "pulumi_foreman",
  "classes": {
   "foreman:index/media:Media": "Media"
  }
 },
 {
  "pkg": "foreman",
  "mod": "index/model",
  "fqn": "pulumi_foreman",
  "classes": {
   "foreman:index/model:Model": "Model"
  }
 },
 {
  "pkg": "foreman",
  "mod": "index/operatingsystem",
  "fqn": "pulumi_foreman",
  "classes": {
   "foreman:index/operatingsystem:Operatingsystem": "Operatingsystem"
  }
 },
 {
  "pkg": "foreman",
  "mod": "index/overrideValue",
  "fqn": "pulumi_foreman",
  "classes": {
   "foreman:index/overrideValue:OverrideValue": "OverrideValue"
  }
 },
 {
  "pkg": "foreman",
  "mod": "index/parameter",
  "fqn": "pulumi_foreman",
  "classes": {
   "foreman:index/parameter:Parameter": "Parameter"
  }
 },
 {
  "pkg": "foreman",
  "mod": "index/partitiontable",
  "fqn": "pulumi_foreman",
  "classes": {
   "foreman:index/partitiontable:Partitiontable": "Partitiontable"
  }
 },
 {
  "pkg": "foreman",
  "mod": "index/provisioningtemplate",
  "fqn": "pulumi_foreman",
  "classes": {
   "foreman:index/provisioningtemplate:Provisioningtemplate": "Provisioningtemplate"
  }
 },
 {
  "pkg": "foreman",
  "mod": "index/smartproxy",
  "fqn": "pulumi_foreman",
  "classes": {
   "foreman:index/smartproxy:Smartproxy": "Smartproxy"
  }
 },
 {
  "pkg": "foreman",
  "mod": "index/subnet",
  "fqn": "pulumi_foreman",
  "classes": {
   "foreman:index/subnet:Subnet": "Subnet"
  }
 },
 {
  "pkg": "foreman",
  "mod": "index/templateinput",
  "fqn": "pulumi_foreman",
  "classes": {
   "foreman:index/templateinput:Templateinput": "Templateinput"
  }
 },
 {
  "pkg": "foreman",
  "mod": "index/user",
  "fqn": "pulumi_foreman",
  "classes": {
   "foreman:index/user:User": "User"
  }
 },
 {
  "pkg": "foreman",
  "mod": "index/usergroup",
  "fqn": "pulumi_foreman",
  "classes": {
   "foreman:index/usergroup:Usergroup": "Usergroup"
  }
 }
]
""",
    resource_packages="""
[
 {
  "pkg": "foreman",
  "token": "pulumi:providers:foreman",
  "fqn": "pulumi_foreman",
  "class": "Provider"
 }
]
"""
)
