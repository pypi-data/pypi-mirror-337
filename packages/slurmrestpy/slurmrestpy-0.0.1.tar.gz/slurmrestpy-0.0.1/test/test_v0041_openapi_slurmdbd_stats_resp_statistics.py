# coding: utf-8

"""
Slurm REST API

API to access and control Slurm

The version of the OpenAPI document: Slurm-24.11.1&openapi/slurmdbd&openapi/slurmctld
Contact: sales@schedmd.com
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from slurmrestpy.models.v0041_openapi_slurmdbd_stats_resp_statistics import (
    V0041OpenapiSlurmdbdStatsRespStatistics,
)


class TestV0041OpenapiSlurmdbdStatsRespStatistics(unittest.TestCase):
    """V0041OpenapiSlurmdbdStatsRespStatistics unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(
        self, include_optional
    ) -> V0041OpenapiSlurmdbdStatsRespStatistics:
        """Test V0041OpenapiSlurmdbdStatsRespStatistics
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `V0041OpenapiSlurmdbdStatsRespStatistics`
        """
        model = V0041OpenapiSlurmdbdStatsRespStatistics()
        if include_optional:
            return V0041OpenapiSlurmdbdStatsRespStatistics(
                time_start = 56,
                rollups = slurmrestpy.models.v0_0_41_openapi_slurmdbd_stats_resp_statistics_rollups.v0_0_41_openapi_slurmdbd_stats_resp_statistics_rollups(
                    hourly = slurmrestpy.models.v0_0_42_rollup_stats_hourly.v0_0_42_rollup_stats_hourly(
                        count = 56,
                        last_run = 56,
                        duration = slurmrestpy.models.v0_0_42_rollup_stats_hourly_duration.v0_0_42_rollup_stats_hourly_duration(
                            last = 56,
                            max = 56,
                            time = 56, ), ),
                    daily = slurmrestpy.models.v0_0_42_rollup_stats_daily.v0_0_42_rollup_stats_daily(
                        count = 56,
                        last_run = 56, ),
                    monthly = slurmrestpy.models.v0_0_42_rollup_stats_monthly.v0_0_42_rollup_stats_monthly(
                        count = 56,
                        last_run = 56, ), ),
                rpcs = [
                    slurmrestpy.models.v0_0_41_openapi_slurmdbd_stats_resp_statistics_rpcs_inner.v0_0_41_openapi_slurmdbd_stats_resp_statistics_RPCs_inner(
                        rpc = '',
                        count = 56,
                        time = slurmrestpy.models.v0_0_42_stats_rpc_time.v0_0_42_stats_rpc_time(
                            average = 56,
                            total = 56, ), )
                    ],
                users = [
                    slurmrestpy.models.v0_0_41_openapi_slurmdbd_stats_resp_statistics_users_inner.v0_0_41_openapi_slurmdbd_stats_resp_statistics_users_inner(
                        user = '',
                        count = 56,
                        time = slurmrestpy.models.v0_0_42_stats_rpc_time.v0_0_42_stats_rpc_time(
                            average = 56,
                            total = 56, ), )
                    ]
            )
        else:
            return V0041OpenapiSlurmdbdStatsRespStatistics(
        )
        """

    def testV0041OpenapiSlurmdbdStatsRespStatistics(self):
        """Test V0041OpenapiSlurmdbdStatsRespStatistics"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
