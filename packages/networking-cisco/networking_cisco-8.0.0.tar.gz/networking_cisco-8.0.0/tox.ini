[tox]
envlist = py3,pep8
minversion = 3.18.0
skipsdist = False

[testenv]
# Note the hash seed is set to 0 until neutron can be tested with a
# random hash seed successfully.
setenv = VIRTUAL_ENV={envdir}
         PYTHONHASHSEED=0
         PYTHONWARNINGS=default::DeprecationWarning
         OS_LOG_CAPTURE={env:OS_LOG_CAPTURE:true}
         OS_STDOUT_CAPTURE={env:OS_STDOUT_CAPTURE:true}
         OS_STDERR_CAPTURE={env:OS_STDERR_CAPTURE:true}

passenv =
   TRACE_FAILONLY
   GENERATE_HASHES
   http_proxy
   HTTP_PROXY
   https_proxy
   HTTPS_PROXY
   no_proxy
   NO_PROXY
usedevelop = True
install_command =
  pip install {opts} {packages}
deps =
    -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/2024.1}
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/test-requirements.txt
allowlist_externals =
  sh
  find
commands = stestr run {posargs}

[testenv:py3]
deps =
    -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/2024.1}
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/test-requirements.txt

[testenv:hashtest]
# This is the same as default environment, but with a random PYTHONHASHSEED.
# You can also specify a specific hashseed (for test repeatability) as follows:
#   tox --hashseed 1235130571 -e hashtest
setenv = VIRTUAL_ENV={envdir}

[testenv:pep8]
basepython = python3
commands =
  sh ./tools/misc-sanity-checks.sh
  flake8 {posargs}
  neutron-db-manage --subproject networking-cisco check_migration

[testenv:genconfig]
basepython = python3
deps = {[testenv:py3]deps}
commands = {toxinidir}/tools/generate_config_file_samples.sh

[testenv:releasenotes]
basepython = python3
deps = {[testenv:py3]deps}
commands = sphinx-build -a -W -E -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[testenv:bandit]
basepython = python3
deps = -r{toxinidir}/test-requirements.txt
# Currently only verifying ML2 drivers is successful
commands = bandit -r networking_cisco/ml2_drivers -n5 -f txt
# Use the following instead when ASR1K issues resolved
#commands = bandit -r networking_cisco -x apps/saf,tests,plugins/cisco/cpnr -n5 -f txt


[testenv:compare-cover]
# Compare coverage to a minimum coverage level percentage
basepython = python3
envdir = {toxworkdir}/cover
deps = {[testenv:py3]deps}
setenv = {[testenv:cover]setenv}
commands =
  {[testenv:cover]commands}
  coverage report --fail-under 62

[testenv:cover]
# For running coverage in local environment.
basepython = python3
setenv = {[testenv]setenv}
         PYTHON=coverage run --source networking_cisco --omit='*tests*' --parallel-mode
deps = {[testenv:py3]deps}
commands =
  stestr run {posargs}
  coverage combine
  coverage html -d cover
  coverage xml -o cover/coverage.xml

[testenv:venv]
basepython = python3
deps = {[testenv:py3]deps}
commands = {posargs}

[testenv:docs]
basepython = python3
# NOTE(sambetts) Pin this to the highest supported stable release
deps =
  -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/2024.1}
  -r{toxinidir}/doc/requirements.txt
  -r{toxinidir}/requirements.txt

commands = sphinx-build -W -b html doc/source doc/build/html

[flake8]
# E125 continuation line does not distinguish itself from next logical line
# E126 continuation line over-indented for hanging indent
# E128 continuation line under-indented for visual indent
# E129 visually indented line with same indent as next logical line
# E265 block comment should start with '# '
# E402 module level import not at top of file - REVISIT
# E741 ambiguous variable name - REVISIT
# H216 The unittest.mock module should be used rather than the third party mock package unless actually needed
# H305 imports not grouped correctly
# H404 multi line docstring should start with a summary
# H405 multi line docstring summary not separated with an empty line
# TODO(dougwig) -- uncomment this to test for remaining linkages
# N530 direct neutron imports not allowed
# W504 line break after binary operator - REVISIT
# W605 invalid escape sequence - REVISIT
ignore = E125,E126,E128,E129,E265,E402,E741,H216,H305,H404,H405,N530,W504,W605
# H106: Donâ€™t put vim configuration in source files
enable-extensions=H106
show-source = true
exclude=.venv,.git,.tox,dist,doc,*lib/python*,*egg,build,src,tools,.tmp

[testenv:pylint]
basepython = python3
deps =
  {[testenv:py3]deps}
  pylint
commands =
  pylint --rcfile=.pylintrc --output-format=colorized {posargs:neutron}

[hacking]
import_exceptions = networking_cisco._i18n
local-check-factory = neutron_lib.hacking.checks.factory
