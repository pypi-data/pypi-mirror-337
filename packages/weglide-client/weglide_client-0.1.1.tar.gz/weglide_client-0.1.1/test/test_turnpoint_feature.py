# coding: utf-8

"""
    WeGlide

    Quantifying airsports

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from weglide_client.models.turnpoint_feature import TurnpointFeature

class TestTurnpointFeature(unittest.TestCase):
    """TurnpointFeature unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TurnpointFeature:
        """Test TurnpointFeature
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TurnpointFeature`
        """
        model = TurnpointFeature()
        if include_optional:
            return TurnpointFeature(
                type = '',
                properties = weglide_client.models.properties.Properties(
                    name = '', 
                    radius = 1.337, 
                    kind = 'LINE', ),
                geometry = weglide_client.models.geo_json_point.GeoJSONPoint(
                    type = '', 
                    coordinates = [
                        null
                        ], )
            )
        else:
            return TurnpointFeature(
                type = '',
                geometry = weglide_client.models.geo_json_point.GeoJSONPoint(
                    type = '', 
                    coordinates = [
                        null
                        ], ),
        )
        """

    def testTurnpointFeature(self):
        """Test TurnpointFeature"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
