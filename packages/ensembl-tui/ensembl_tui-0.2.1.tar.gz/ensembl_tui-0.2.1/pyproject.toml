[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "ensembl_tui"
authors = [
    { name = "Gavin Huttley", email = "Gavin.Huttley@anu.edu.au"},
    { name = "Arne Becker", email = "arne@ebi.ac.uk"},
    { name = "Stefano Giorgetti", email = "sgiorgetti@ebi.ac.uk"},
]
maintainers = [
    { name = "Gavin Huttley", email = "Gavin.Huttley@anu.edu.au"},
    { name = "Arne Becker", email = "arne@ebi.ac.uk"},
    { name = "Stefano Giorgetti", email = "sgiorgetti@ebi.ac.uk"},
]
keywords = ["biology", "genomics", "evolution", "bioinformatics"]
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.10,<3.14"
dependencies = ["blosc2",
        "click",
        "cogent3>=2025.3.22a4",
        "duckdb",
        "h5py",
        "hdf5plugin",
        "numba",
        "numpy",
        "rich",
        "scitrack",
        "typing_extensions",
        "trogon",
        "unsync",
        # restricting wakepy to macOS for now
        "wakepy>0.7; os_name == 'darwin'",
        ]
classifiers = [
        "Development Status :: 2 - Pre-Alpha",
        "Intended Audience :: Science/Research",
        "License :: OSI Approved :: BSD License",
        "Topic :: Scientific/Engineering :: Bio-Informatics",
        "Topic :: Software Development :: Libraries :: Python Modules",
        "Operating System :: OS Independent",
        "Programming Language :: Python :: 3.10",
        "Programming Language :: Python :: 3.11",
        "Programming Language :: Python :: 3.12",
        "Programming Language :: Python :: 3.13",
    ]
dynamic = ["version", "description"]

[project.urls]
Documentation = "https://github.com/cogent3/ensembl_tui"
"Bug Tracker" = "https://github.com/cogent3/ensembl_tui/issues"
"Source Code" = "https://github.com/cogent3/ensembl_tui"

[project.scripts]
eti = "ensembl_tui.cli:main"

[project.optional-dependencies]
test = [
    "click",
    "pandas",
    "pytest",
    "pytest-cov",
    "pytest-timeout",
    "pytest-xdist",
    "ruff==0.10.0",
    "nox"]
doc  = ["click",
        "sphinx",
        "sphinx-autobuild",
        "sphinx_book_theme",
        "sphinx_design",
        "sphinxcontrib-bibtex",
        "ipykernel",
        "ipython",
        "ipywidgets",
        "jupyter-sphinx",
        "jupyter_client",
        "jupyterlab",
        "jupytext",
        "kaleido",
        "nbconvert>5.4",
        "nbformat",
        "nbsphinx",
        "pillow",
        "plotly",
        ]
dev = ["click",
       "cogapp",
       "flit",
       "nox",
       "numpydoc",
       "psutil",
       "scriv",
       "ensembl_tui[doc]",
       "ensembl_tui[test]",
       ]

[tool.flit.sdist]
include = ["src/*", "tests/*", "pyproject.toml"]

[tool.pytest.ini_options]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "internet: marks tests that require internet access  (deselect with '-m \"not internet\"')"
    ]
norecursedirs = ["doc", ".nox", "working"]
addopts = ["--strict-config"]
testpaths = "tests"

[tool.uv]
reinstall-package = ["cogent3"]

[tool.ruff]
exclude = [
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "build",
    "dist",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

target-version = "py310"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["ALL"]
# ignoring checks on having boolean flag as arguments to functions
# ignoring checks on the number of arguments to a functions
# numpy should NOT always be imported as np
# turning of SQL injectiuon risk warnings, we are querying public data only
# turning off checking using open instead of pathlib.Path.open
ignore = ["EXE002", "FA100", "E501", "D", "ICN001", "FBT001", "FBT002",
          "PLR0913", "S608", "PTH123"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
    "S101", # asserts allowed in tests...
    "INP001", # __init__.py files are not required...
    "ANN",
    "N802",
    "N803"
]
"noxfile.py" = [
    "S101", # asserts allowed in tests...
    "INP001", # __init__.py files are not required...
    "ANN",
    "N802",
    "N803"
]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "lf"
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.scriv]
format="md"
categories=["Contributors", "ENH", "BUG", "DOC", "Deprecations", "Discontinued"]
output_file="changelog.md"
version="literal: src/ensembl_tui/__init__.py:__version__"
skip_fragments="README.*"
new_fragment_template="file: changelog.d/templates/new.md.j2"
entry_title_template="file: changelog.d/templates/title.md.j2"
