# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'PoolPersistenceArgs',
]

@pulumi.input_type
class PoolPersistenceArgs:
    def __init__(__self__, *,
                 type: pulumi.Input[str],
                 cookie_name: Optional[pulumi.Input[str]] = None,
                 timeout: Optional[pulumi.Input[int]] = None):
        """
        :param pulumi.Input[str] type: The type of persistence mode. The current specification supports SOURCE_IP,
               HTTP_COOKIE, and APP_COOKIE.
        :param pulumi.Input[str] cookie_name: The name of the cookie if persistence mode is set appropriately. Required
               if `type = APP_COOKIE`.
        :param pulumi.Input[int] timeout: Specifies the sticky session timeout duration in minutes. This parameter is
               invalid when type is set to APP_COOKIE. The value range varies depending on the protocol of the backend server group:
               + When the protocol of the backend server group is TCP or UDP, the value ranges from 1 to 60.
               + When the protocol of the backend server group is HTTP or HTTPS, the value ranges from 1 to 1440.
        """
        pulumi.set(__self__, "type", type)
        if cookie_name is not None:
            pulumi.set(__self__, "cookie_name", cookie_name)
        if timeout is not None:
            pulumi.set(__self__, "timeout", timeout)

    @property
    @pulumi.getter
    def type(self) -> pulumi.Input[str]:
        """
        The type of persistence mode. The current specification supports SOURCE_IP,
        HTTP_COOKIE, and APP_COOKIE.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[str]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter(name="cookieName")
    def cookie_name(self) -> Optional[pulumi.Input[str]]:
        """
        The name of the cookie if persistence mode is set appropriately. Required
        if `type = APP_COOKIE`.
        """
        return pulumi.get(self, "cookie_name")

    @cookie_name.setter
    def cookie_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cookie_name", value)

    @property
    @pulumi.getter
    def timeout(self) -> Optional[pulumi.Input[int]]:
        """
        Specifies the sticky session timeout duration in minutes. This parameter is
        invalid when type is set to APP_COOKIE. The value range varies depending on the protocol of the backend server group:
        + When the protocol of the backend server group is TCP or UDP, the value ranges from 1 to 60.
        + When the protocol of the backend server group is HTTP or HTTPS, the value ranges from 1 to 1440.
        """
        return pulumi.get(self, "timeout")

    @timeout.setter
    def timeout(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "timeout", value)


