Metadata-Version: 2.3
Name: roxie-api
Version: 0.4.4
Summary: A Python API for ROXIE to build a model data input, modify cable database file, and control simulation with a tool adapter
License: MIT
Author: Matthias Bonora
Author-email: matthias.bonora@cern.ch
Maintainer: Matthias Bonora
Maintainer-email: matthias.bonora@cern.ch
Requires-Python: >=3.9,<4.0
Classifier: Intended Audience :: Education
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Requires-Dist: Jinja2 (>=3.1.2,<4.0.0)
Requires-Dist: async-timeout (>=4.0.3,<5.0.0)
Requires-Dist: fastnumbers (>=5.1.0,<6.0.0)
Requires-Dist: ipython (>=8.2.0,<9.0.0)
Requires-Dist: kaleido (==0.2.1)
Requires-Dist: matplotlib (>=3.6.0,<4.0.0)
Requires-Dist: mpld3 (>=0.5.9,<0.6.0)
Requires-Dist: pandas (>=2.0.3,<3.0.0)
Requires-Dist: papermill (>=2.5.0,<3.0.0)
Requires-Dist: plotly (>=5.9.0,<6.0.0)
Requires-Dist: pydantic (>=2,<3)
Requires-Dist: pyvista[all,trame] (>=0.44.2,<0.45.0)
Requires-Dist: requests (>=2.28.1,<3.0.0)
Requires-Dist: trame-matplotlib (>=2.0.2,<3.0.0)
Project-URL: Repository, https://gitlab.cern.ch/roxie/roxie-api
Description-Content-Type: text/markdown

# ROXIE API

This project provides a python interface to interact with Roxie, which is compatible with Roxie release >= 23.6.

See [The Roxie documentation](https://roxie.docs.cern.ch/) on how to install Roxie binaries.

## Features

### Input Parsing and generation

- Generate data files and access them in a structured way
- Parse existing data files (and modify them)
- Generate data files to execute with roxie

### Output parsing and plotting

- Parse roxie xml output
- Plot Graphs, 2D crosssections and 3D renders
- extract figures of merit and key information of a run (Design variables, objectives, harmonics)

### Execution

- Execute roxie on your local computer
- Execute roxie within a Docker container
- Execute roxie using the Rest API interface of a roxie-rest-api computing node

