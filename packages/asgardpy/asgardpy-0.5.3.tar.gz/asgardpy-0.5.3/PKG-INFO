Metadata-Version: 2.4
Name: asgardpy
Version: 0.5.3
Summary: Gammapy-based pipeline for easy joint analysis of different gamma-ray datasets
Author-email: Chaitanya Priyadarshi <chaitanya.p.astrphys@gmail.com>, Mireia Nievas Rosillo <mnievas.work@gmail.com>
Maintainer-email: Chaitanya Priyadarshi <chaitanya.p.astrphys@gmail.com>
License: Apache-2.0
Project-URL: Homepage, https://github.com/chaimain/asgardpy
Project-URL: Repository, https://github.com/chaimain/asgardpy
Project-URL: Documentation, https://asgardpy.readthedocs.io/en/latest/
Keywords: Astronomy,Gamma-rays,Data analysis
Classifier: Intended Audience :: Science/Research
Classifier: Development Status :: 3 - Alpha
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Topic :: Scientific/Engineering :: Astronomy
Requires-Python: >=3.11
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy>2.0
Requires-Dist: scipy>=1.12
Requires-Dist: astropy<8.0,>=7.0
Requires-Dist: jupyter
Requires-Dist: gammapy~=1.3
Requires-Dist: regions>0.5
Requires-Dist: matplotlib<3.10,>=3.4
Requires-Dist: seaborn
Requires-Dist: iminuit>=2.8.0
Requires-Dist: ruamel.yaml
Requires-Dist: pre-commit
Requires-Dist: xmltodict
Requires-Dist: tox
Requires-Dist: tqdm
Requires-Dist: pydantic>=2.5
Requires-Dist: towncrier>=24.7
Provides-Extra: dev
Requires-Dist: ruff>=0.9.3; extra == "dev"
Requires-Dist: codespell>=2.4.0; extra == "dev"
Requires-Dist: mypy>=1.14; extra == "dev"
Requires-Dist: isort>=5.13; extra == "dev"
Requires-Dist: types-PyYAML; extra == "dev"
Requires-Dist: pytest>8.0; extra == "dev"
Requires-Dist: pytest-sphinx; extra == "dev"
Requires-Dist: pytest-cov; extra == "dev"
Requires-Dist: build; extra == "dev"
Requires-Dist: setuptools_scm; extra == "dev"
Requires-Dist: Sphinx>=8.0; extra == "dev"
Requires-Dist: furo>=2022.12.7; extra == "dev"
Requires-Dist: myst-parser>=2.0; extra == "dev"
Requires-Dist: sphinx-copybutton>=0.5.0; extra == "dev"
Requires-Dist: sphinx-autobuild>=2021.3.14; extra == "dev"
Requires-Dist: sphinx-autodoc-typehints; extra == "dev"
Requires-Dist: sphinxcontrib-towncrier; extra == "dev"
Requires-Dist: sphinx_changelog; extra == "dev"
Requires-Dist: autodoc_pydantic>=2.1; extra == "dev"
Requires-Dist: packaging; extra == "dev"
Dynamic: license-file

Agardpy: Analysis Software for GAmma-Ray Data in Python
=======================================================

[![Build Status](https://github.com/chaimain/asgardpy/actions/workflows/main.yml/badge.svg?branch=main)](https://github.com/chaimain/asgardpy/actions?query=branch%3Amain) [![codecov](https://codecov.io/gh/chaimain/asgardpy/branch/main/graph/badge.svg?token=0XEI9W8AKJ)](https://codecov.io/gh/chaimain/asgardpy) [![Scrutinizer Code Quality](https://scrutinizer-ci.com/g/chaimain/asgardpy/badges/quality-score.png?b=main)](https://scrutinizer-ci.com/g/chaimain/asgardpy/?branch=main) [![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.8106369.svg)](https://doi.org/10.5281/zenodo.8106369) ![PyPI](https://img.shields.io/pypi/v/asgardpy?label=pypi%20asgardpy) [![OpenSSF Best Practices](https://bestpractices.coreinfrastructure.org/projects/7699/badge)](https://bestpractices.coreinfrastructure.org/projects/7699) [![gammapy](https://img.shields.io/badge/powered%20by-gammapy-orange.svg?style=flat)](https://www.gammapy.org/) [![astropy](http://img.shields.io/badge/powered%20by-AstroPy-orange.svg?style=flat)](https://www.astropy.org/)

'User-friendly' configuration-centred pipeline built over [Gammapy](https://github.com/gammapy/gammapy) to allow for easy simultaneous analysis of various datasets of different formats.
Example: 3D Fermi-LAT (with various source models in the Region of Interest stored in XML file) + 1D energy-dependent directional cuts MAGIC/LST [``PointSkyRegion`` geometry for ``ON`` region] + 1D global directional cut VERITAS [``CircleSkyRegion`` geometry for ``ON`` region].

Follow the documentation at https://asgardpy.readthedocs.io/en/latest/ for the main functionality of this pipeline.
Follow the [Gammapy v1.3](https://docs.gammapy.org/1.3/) documentation for understanding the core Gammapy objects.

Check this [documentation page](https://asgardpy.readthedocs.io/en/latest/need_for_asgardpy.html) for seeing the list of reasons to use Asgardpy over Gammapy v1.3 and this [documentation page](https://asgardpy.readthedocs.io/en/latest/crab_sed.html) for seeing an extended example of the usage of Asgardpy in analyzing multi-instrument data of Crab Nebula.

The various Data Levels	used here follow the descriptions suggested by [GADF v0.3](https://gamma-astro-data-formats.readthedocs.io/en/latest/) and [CTAO](https://www.ctao.org/) Data Model.

# NOTE

For requiring support only for [Gammapy v1.1](https://docs.gammapy.org/1.1/), one may follow the latest Hotfix release [v0.4.4](https://github.com/chaimain/asgardpy/tree/v0.4.4) which benefits from the correct usage of getting EBL-deabsorbed data products as included in [v0.5.0](https://github.com/chaimain/asgardpy/tree/v0.5.0). This can be done by using

```bash
git fetch --tags
git switch -c tags/v0.4.4
```

For creating a conda environment, for this Hotfix release, one can use

```bash
conda env create -f environment_0.4.4.yml
```

and in general, for the latest release,

```bash
conda env create -f environment.yml
```

This method was included after v0.5.0, and for earlier (<v0.4.4) releases, one can simply use the gammapy conda environment and install asgardpy on top of it.

# Pipeline development

The pipeline was developed with first testing with Fermi-LAT ([enrico](https://enrico.readthedocs.io/en/latest/) and [fermipy](https://fermipy.readthedocs.io/en/latest/)) files and LST-1 ([cta-lstchain](https://cta-observatory.github.io/cta-lstchain/)) DL3 files (with energy-dependent and global directional cuts) for point-like sources. It also allows for a preliminary analysis of HAWC datasets (stored in Gammapy-readable data).
The pipeline can be further expanded to support more types of DL3 files of gamma-ray instruments.

# Examples with Data
An example of configuration file that can be used with asgardpy can be found at ``asgardpy/config/template.yaml``

For working with some public data to check the pipeline functionality, one should first download the public dataset available with Gammapy as indicated in [Gammapy v1.3 Introduction](https://docs.gammapy.org/1.3/getting-started/index.html) and then run the ``scripts/download_asgardpy_data.sh`` script to add datasets for the full usage of the pipeline.

Examples of usage of Asgardpy is shown in jupyter [notebooks](https://github.com/chaimain/asgardpy/tree/main/notebooks).

# Cite
If you use Asgardpy in a publication, please cite the exact version you used from Zenodo _Cite_ as https://doi.org/10.5281/zenodo.8106369

# Pipeline Template

Pipeline generated based on the template by [python-package-template](https://github.com/allenai/python-package-template) with additional standards being followed -

- [PEP 517](https://peps.python.org/pep-0517)
- [PEP 518](https://peps.python.org/pep-0518/)
- [PyPA specs following PEP 621](https://packaging.python.org/en/latest/specifications/declaring-project-metadata/#declaring-project-metadata)
- [PEP 660](https://peps.python.org/pep-0660/)
