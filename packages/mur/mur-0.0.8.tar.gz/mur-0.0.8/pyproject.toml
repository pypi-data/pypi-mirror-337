[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mur"
version = "0.0.8"
description = "Mur CLI for packaging and publishing agents and tools."
requires-python = ">=3.9"
authors = [{ name = "E.W. de Graaff", email = "hi@murmur.nexus" }]
license = "MIT"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Environment :: MacOS X",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
readme = "README.md"
dependencies = [
    "click>=8.1.8",
    "ruamel.yaml>=0.18.6",
    "requests>=2.32.3",
    "keyring>=25.5.0",
    "twine>=6.0.1",
    "build>=1.2.2.post1",
    "tqdm>=4.67.1",
    "packaging>=24.2"
]

[project.urls]
Repository = "https://github.com/murmur-nexus/mur"

[project.scripts]
mur = "mur.cli:main"

[tool.hatch.envs.dev]
extra-dependencies = [
    "ruff>=0.8.4",
    "mypy>=1.14.0",
    "isort==5.13.2",
    "mccabe==0.7.0",
    "pydocstyle==6.3.0",
    "types-requests==2.32.0.20241016",
]

[tool.hatch.envs.dev.scripts]
lint = [
    "ruff check .",
    "ruff format --check .",
]
format = "ruff format ."
typecheck = "mypy ."

[tool.ruff]
line-length = 120
target-version = "py39"

[tool.hatch.build.targets.wheel]
packages = ["src/mur"]

[tool.ruff.lint]
extend-select = [
    "Q",     # flake8-quotes
    "RUF",   # Ruff-specific rules
    "C90",   # mccabe
    "UP",    # pyupgrade
    "I",     # isort
    "D",     # pydocstyle
    "B",     # flake8-bugbear
    "S",     # flake8-bandit
]
ignore = [
    "D100", # ignore missing docstring in module
    "D102", # ignore missing docstring in public method
    "D104", # ignore missing docstring in public package
    "D105", # ignore missing docstring in magic methods
    "D107", # ignore missing docstring in __init__ methods
    "B904", # ignore within except clause, raise with from
    "S603", # ignore subprocess call security warning
]

[tool.ruff.lint.isort]
combine-as-imports = true
known-first-party = ["murmur"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

[tool.mypy]
mypy_path = ["lib"]
namespace_packages = true

# TODO: Remove once solidifying file structure
ignore_missing_imports = true