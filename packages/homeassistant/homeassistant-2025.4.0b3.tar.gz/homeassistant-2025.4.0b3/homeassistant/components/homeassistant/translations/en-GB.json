{
    "exceptions": {
        "component_import_err": {
            "message": "Unable to import {domain}: {error}"
        },
        "config_platform_import_err": {
            "message": "Error importing config platform {domain}: {error}"
        },
        "config_schema_unknown_err": {
            "message": "Unknown error calling {domain} CONFIG_SCHEMA - {error}."
        },
        "config_validation_err": {
            "message": "Invalid config for integration {domain} at {config_file}, line {line}: {error}."
        },
        "config_validator_unknown_err": {
            "message": "Unknown error calling {domain} config validator - {error}."
        },
        "max_length_exceeded": {
            "message": "Value {value} for property {property_name} has a maximum length of {max_length} characters."
        },
        "multiple_integration_config_errors": {
            "message": "Failed to process config for integration {domain} due to multiple ({errors}) errors. Check the logs for more information."
        },
        "platform_component_load_err": {
            "message": "Platform error: {domain} - {error}."
        },
        "platform_component_load_exc": {
            "message": "Platform error: {domain} - {error}."
        },
        "platform_config_validation_err": {
            "message": "Invalid config for {domain} from integration {p_name} at file {config_file}, line {line}: {error}. Check the logs for more information."
        },
        "platform_schema_validator_err": {
            "message": "Unknown error when validating config for {domain} from integration {p_name} - {error}."
        },
        "service_does_not_support_response": {
            "message": "An action which does not return responses can't be called with {return_response}."
        },
        "service_lacks_response_request": {
            "message": "The action requires responses and must be called with {return_response}."
        },
        "service_not_found": {
            "message": "Action {domain}.{service} not found."
        },
        "service_not_supported": {
            "message": "Entity {entity_id} does not support action {domain}.{service}."
        },
        "service_reponse_invalid": {
            "message": "Failed to process the returned action response data, expected a dictionary, but got {response_data_type}."
        },
        "service_should_be_blocking": {
            "message": "A non-blocking action call with argument {non_blocking_argument} can't be used together with argument {return_response}."
        }
    },
    "issues": {
        "config_entry_reauth": {
            "description": "Reauthentication is needed"
        },
        "config_entry_unique_id_collision": {
            "description": "There are multiple {domain} config entries with the same unique ID.\nThe config entries are named {titles}.\n\nTo fix this error, [configure the integration]({configure_url}) and remove all except one of the duplicates.\n\nNote: Another group of duplicates may be revealed after removing these duplicates.",
            "title": "Multiple {domain} config entries with same unique ID"
        },
        "config_entry_unique_id_collision_many": {
            "description": "There are multiple ({number_of_entries}) {domain} config entries with the same unique ID.\nThe first {title_limit} config entries are named {titles}.\n\nTo fix this error, [configure the integration]({configure_url}) and remove all except one of the duplicates.\n\nNote: Another group of duplicates may be revealed after removing these duplicates.",
            "title": "Multiple {domain} config entries with same unique ID"
        },
        "imperial_unit_system": {
            "title": "The imperial unit system is deprecated"
        },
        "integration_not_found": {
            "fix_flow": {
                "abort": {
                    "issue_ignored": "Not existing integration {domain} ignored."
                },
                "step": {
                    "init": {
                        "description": "The integration `{domain}` could not be found. This happens when a (custom) integration was removed from Home Assistant, but there are still configurations for this `integration`. Please use the buttons below to either remove the previous configurations for `{domain}` or ignore this.",
                        "menu_options": {
                            "confirm": "Remove previous configurations",
                            "ignore": "Ignore"
                        },
                        "title": "Integration {domain} not found"
                    }
                }
            },
            "title": "Integration {domain} not found"
        },
        "legacy_templates_false": {
            "description": "Nothing will change with your templates.\n\nRemove the `legacy_templates` key from the `homeassistant` configuration in your configuration.yaml file and restart Home Assistant to fix this issue.",
            "title": "legacy_templates config key is being removed"
        },
        "legacy_templates_true": {
            "description": "Please do the following steps:\n- Adopt your configuration to support template rendering to native python types.\n- Remove the `legacy_templates` key from the `homeassistant` configuration in your configuration.yaml file.\n- Restart Home Assistant to fix this issue.",
            "title": "The support for legacy templates is being removed"
        },
        "storage_corruption": {
            "fix_flow": {
                "step": {
                    "confirm": {
                        "title": "Storage corruption detected for `{storage_key}`"
                    }
                }
            }
        }
    },
    "services": {
        "turn_on": {
            "name": "Generic turn on"
        },
        "update_entity": {
            "fields": {
                "entity_id": {
                    "description": "List of entities to force update.",
                    "name": "Entities to update"
                }
            },
            "name": "Update entity"
        }
    }
}