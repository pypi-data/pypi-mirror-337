Metadata-Version: 2.1
Name: chatGPT-automator
Version: 0.1.21
Summary: Regarding automating ChatGPT using Selenium in Python
Home-page: https://github.com/kevinljw/chatgpt_automator
Author: evinljw
Author-email: evin92@gmail.com
License: MIT
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE

# ChatGPT Automator
Regarding automating ChatGPT using Selenium in Python, it's an intriguing approach that combines the power of conversational AI with web automation tools. ChatGPT, as we know, is a state-of-the-art language model by OpenAI, capable of producing human-like text based on the input it receives. On the other hand, Selenium is a widely used tool for controlling web browsers through programs and performing browser automation. It's primarily used for automating web applications for testing purposes, but it's versatile enough for various other tasks as well.

By integrating ChatGPT with Selenium in a Python environment, one can potentially automate various web-based tasks. For instance, it might be possible to build a system where ChatGPT can interact with web platforms, fill forms, retrieve information, or even interact with users on web interfaces autonomously. This fusion can pave the way for more interactive and dynamic web applications, especially when they are AI-driven.

Such an integration would require a deep understanding of both ChatGPT's capabilities and Selenium's features. Given the potential applications and the synergy between conversational AI and web automation, this could be a promising area of exploration for developers and enthusiasts alike.

## Instructions

1. Install:
```
pip install chatGPT-automator
```
<br />

2. How to initialize:
```python
from chatGPT_automator import ChatGPTAutomator

chatgpt = ChatGPTAutomator()


```

login_check (bool):

Specifies whether to check for a successful login when initializing the ChatGPT session. If set to True, the automator will verify that the login was successful before proceeding with any further actions. The default value is True.

<br />

3. How to interact with ChatGPT:
```python

question = "How ChatGPT Ignited the A.I. Competition Wave"

chatgpt.send_prompt_to_chatgpt(question)

# wait a moment ...

answer = chatgpt.return_last_response()

print(answer)

```
