---
# GNU General Public License v3.0+ (see LICENSES/GPL-3.0-or-later.txt or
# https://www.gnu.org/licenses/gpl-3.0.txt)
# SPDX-License-Identifier: GPL-3.0-or-later
# SPDX-FileCopyrightText: 2023 Maxwell G <maxwell@gtmx.me

name: nox
'on':
  push:
    branches: [main]
  pull_request:
    branches: [main]
  # Run once per week (Monday at 03:30 UTC)
  schedule:
    - cron: '30 3 * * 1'
  workflow_dispatch:

env:
  FORCE_COLOR: "1"

jobs:
  nox:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: antsibull-nox
    strategy:
      fail-fast: false
      matrix:
        include:
          - session: test
            python-versions: "3.9, 3.10, 3.11, 3.12, 3.13"
            codecov: true
            packages: ""

          - session: integration
            python-versions: "3.13"
            codecov: true
            packages: ""

          - session: lint
            python-versions: "3.13"
            codecov: false
            packages: ""
    name: "Run nox ${{ matrix.session }} session"
    steps:
      - name: Check out antsibull-nox
        uses: actions/checkout@v4
        with:
          path: antsibull-nox
          persist-credentials: false
      - name: Check out dependent project antsibull-fileutils
        uses: actions/checkout@v4
        with:
          repository: ansible-community/antsibull-fileutils
          path: antsibull-fileutils
          persist-credentials: false
      - name: Install extra packages
        if: "matrix.packages != ''"
        run: |
          sudo apt-get install -y ${{ matrix.packages }}
      - name: Work around limitations of GH's toy language for expressions
        env:
          PYTHON_VERSIONS: "${{ matrix.python-versions }}"
        id: python-versions
        run: |
          echo "versions<<EOF" >> ${GITHUB_OUTPUT}
          echo "${PYTHON_VERSIONS}" | sed -e 's/, */\n/g' >> ${GITHUB_OUTPUT}
          echo "EOF" >> ${GITHUB_OUTPUT}
      - name: Setup Python
        uses: actions/setup-python@v5
        id: python
        with:
          python-version: "${{ steps.python-versions.outputs.versions }}"
      - name: "Install nox"
        run: |
          ${{ steps.python.outputs.python-path }} -m pip install nox
        shell: bash
      - name: Set up nox environments
        run: |
          nox -v -e "${{ matrix.session }}" ${{ matrix.codecov && 'coverage' || '' }} --install-only
      - name: "Run nox -e ${{ matrix.session }}"
        run: |
          nox -v -e "${{ matrix.session }}" --reuse-existing-virtualenvs --no-install
      - name: Report coverage
        if: ${{ matrix.codecov }}
        run: |
          nox -v -e coverage --reuse-existing-virtualenvs --no-install
      - name: Upload coverage for final step
        uses: actions/upload-artifact@v4
        if: ${{ matrix.codecov }}
        with:
          name: code-coverage-${{ matrix.session }}
          path: antsibull-nox/coverage.xml

  upload-coverage:
    runs-on: ubuntu-latest
    needs: nox
    steps:
      - name: Check out antsibull-nox
        uses: actions/checkout@v4
        with:
          path: antsibull-nox
          persist-credentials: false
      - name: Download coverage from previous step
        uses: actions/download-artifact@v4
        with:
          path: antsibull-nox
          pattern: code-coverage-*
      - name: List all files
        run: find .
        shell: bash
      - name: Upload coverage
        uses: codecov/codecov-action@v5
        with:
          working-directory: antsibull-nox
          name: "${{ matrix.session }}"
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
