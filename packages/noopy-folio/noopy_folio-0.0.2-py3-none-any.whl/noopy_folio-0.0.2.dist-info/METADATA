Metadata-Version: 2.4
Name: noopy-folio
Version: 0.0.2
Author-email: Zev Fu <zev.fu@noojing.com>
License: Copyright (c) 2018 The Python Packaging Authority
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
Keywords: portfolio,quant,finance
Classifier: Development Status :: 3 - Alpha
Classifier: Topic :: Software Development :: Libraries
Classifier: License :: OSI Approved :: CMU License (MIT-CMU)
Requires-Python: >=3.13
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: matplotlib
Requires-Dist: scikit-learn
Requires-Dist: scipy
Requires-Dist: seaborn
Requires-Dist: tabulate
Requires-Dist: yfinance
Dynamic: license-file

**The package is of alpha currently...**

noopy.folio is a library that works on financial portfolios including assessment, optimization and etc.

noopy.folio is a subpackage that can be installed alone under the root package name "noopy"


# Install

## As a user
install via pip:
```
pip install noopy-folio
```

## As a developer 
to set for coding the package
* git clone the repo to you local machine
* set variable: `PYTHONPATH=<repo-root-folder>/src/`

to run unit tests:
* `cd <repo-root-folder>`
* `python -m unittest discover -s src/noopy -v`

to build locally
* install the package `pip install build`, if it's not present yet
* `cd <repo-root-folder>`
* `python -m build`


# Usage

Start with ```from noopy.folio as noofolio```

Use High-level API in ```noofolio.analyse```, e.g.:
```
pc.analyse.asset_recommendations(...)
```

More flexible usage can be directed to sub-modules, e.g.:
```
pc.marketdata.get_md_observable(...)
```

# Design
Design principles:
- open minded
- model driven

## APIs
- noofolio.screen(data)
- noofolio.select(candidates)
- noofolio.optimise(portfolio)
- noofolio.monitor(portfolio)

## Flow

monitor (warning?)
  - yes: try in order
    - attempt re-optimise
    - attempt re-select
    - attempt re-screen

optimise (meet risk aversion?)
  - yes: try in order
    - attempt re-select
    - attempt re-screen

select (rating high enough?)
  - yes: try in order
    - attempt re-screen

