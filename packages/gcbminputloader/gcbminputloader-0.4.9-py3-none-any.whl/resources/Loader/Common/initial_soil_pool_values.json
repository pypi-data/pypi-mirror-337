{
    "SQLLoaderMapping": {
        "name": "Non-forest soil pool values",
        "fetch_sql": "
            SELECT
                a_tr.name AS Admin,
                e_tr.name AS Eco,
                st_tr.name AS SoilType,
                p_tr.gcbm_pool_name AS PoolName,
                s.value AS SoilC
            FROM afforestation_initial_pool s
            INNER JOIN afforestation_pre_type st
                ON s.afforestation_pre_type_id = st.id
            INNER JOIN afforestation_pre_type_tr st_tr
                ON st.id = st_tr.afforestation_pre_type_id
            INNER JOIN spatial_unit spu
                ON s.spatial_unit_id = spu.id
            INNER JOIN admin_boundary a
                ON spu.admin_boundary_id = a.id
            INNER JOIN admin_boundary_tr a_tr
                ON a.id = a_tr.admin_boundary_id
            INNER JOIN eco_boundary e
                ON spu.eco_boundary_id = e.id
            INNER JOIN eco_boundary_tr e_tr
                ON e.id = e_tr.eco_boundary_id
            INNER JOIN pool p
                ON s.pool_id = p.id
            INNER JOIN (
                SELECT
                    p.id AS pool_id,
                    p_tr.name AS cbm_defaults_pool_name,
                    CASE
                        WHEN p_tr.name = 'Softwood Merchantable' THEN 'SoftwoodMerch'
                        WHEN p_tr.name = 'Softwood Foliage' THEN 'SoftwoodFoliage'
                        WHEN p_tr.name = 'Softwood Other' THEN 'SoftwoodOther'
                        WHEN p_tr.name = 'Softwood Coarse Roots' THEN 'SoftwoodCoarseRoots'
                        WHEN p_tr.name = 'Softwood Fine Roots' THEN 'SoftwoodFineRoots'
                        WHEN p_tr.name = 'Hardwood Merchantable' THEN 'HardwoodMerch'
                        WHEN p_tr.name = 'Hardwood Foliage' THEN 'HardwoodFoliage'
                        WHEN p_tr.name = 'Hardwood Other' THEN 'HardwoodOther'
                        WHEN p_tr.name = 'Hardwood Coarse roots' THEN 'HardwoodCoarseRoots'
                        WHEN p_tr.name = 'Hardwood Fine Roots' THEN 'HardwoodFineRoots'
                        WHEN p_tr.name = 'Aboveground Very Fast DOM' THEN 'AboveGroundVeryFastSoil'
                        WHEN p_tr.name = 'Belowground Very Fast DOM' THEN 'BelowGroundVeryFastSoil'
                        WHEN p_tr.name = 'Aboveground Fast DOM' THEN 'AboveGroundFastSoil'
                        WHEN p_tr.name = 'Belowground Fast DOM' THEN 'BelowGroundFastSoil'
                        WHEN p_tr.name = 'Medium DOM' THEN 'MediumSoil'
                        WHEN p_tr.name = 'Aboveground Slow DOM' THEN 'AboveGroundSlowSoil'
                        WHEN p_tr.name = 'Belowground Slow DOM' THEN 'BelowGroundSlowSoil'
                        WHEN p_tr.name = 'Softwood Stem Snag' THEN 'SoftwoodStemSnag'
                        WHEN p_tr.name = 'Softwood Branch Snag' THEN 'SoftwoodBranchSnag'
                        WHEN p_tr.name = 'Hardwood Stem Snag' THEN 'HardwoodStemSnag'
                        WHEN p_tr.name = 'Hardwood Branch Snag' THEN 'HardwoodBranchSnag'
                        ELSE p_tr.name
                    END AS gcbm_pool_name
                FROM pool p
                INNER JOIN pool_tr p_tr
                    ON p.id = p_tr.pool_id
                WHERE p_tr.locale_id = 1
            ) AS p_tr
                ON p.id = p_tr.pool_id
            WHERE a_tr.locale_id = 1
                AND e_tr.locale_id = 1
                AND st_tr.locale_id = 1",
        "load_sql": "
            INSERT INTO soil (spatial_unit_id, soil_type_id, pool_id, value)
            SELECT
                spu.id,
                st.id,
                p.id,
                @SoilC AS value
            FROM soil_type st, pool p, spatial_unit spu
            INNER JOIN admin_boundary a
                ON a.name = @Admin
                AND spu.admin_boundary_id = a.id
            INNER JOIN eco_boundary e
                ON e.name = @Eco
                AND spu.eco_boundary_id = e.id
            WHERE st.name = @SoilType
                AND p.name = @PoolName"
    }
}
