"use strict";(self.webpackChunkmcp_client_jupyter_chat=self.webpackChunkmcp_client_jupyter_chat||[]).push([[414],{115:(e,n,t)=>{t.r(n),t.d(n,{default:()=>q});var o=t(72),r=t.n(o),a=t(825),s=t.n(a),i=t(659),c=t.n(i),l=t(56),p=t.n(l),d=t(540),u=t.n(d),m=t(113),h=t.n(m),g=t(646),f={};f.styleTagTransform=h(),f.setAttributes=p(),f.insert=c().bind(null,"head"),f.domAPI=s(),f.insertStyleElement=u(),r()(g.A,f),g.A&&g.A.locals&&g.A.locals;var y=t(120),k=t(256),v=t(178),b=t(693),x=t(158),_=t(796),w=t(752),E=t(345),C=t.n(E),j=t(338);const N=e=>{if(0===e.length)return"New Chat";const n=e[0];if("string"==typeof n.content){const e=n.content.slice(0,30);return e.length<n.content.length?`${e}...`:e}return"New Chat"},S=e=>`\n    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">\n      ${e}\n    </svg>\n  `;var M=t(912),I=t.n(M);class A{constructor(e,n,t,o){this.TOKEN_BUDGET=2e4,this.THINKING_TOKEN_BUDGET=16e3,this.chats=new Map,this.chatTokenUsage=new Map,this.currentChatId=null,this.stateKey="mcp-chat:conversation-history",this.mcpService=e,this.anthropic=new(I())({apiKey:t,dangerouslyAllowBrowser:!0}),this.modelName=n,this.stateDB=o,this.loadHistory()}getServerTools(e){return this.mcpService.getServerTools(e)}getChats(){return Array.from(this.chats.entries()).map((([e,n])=>({id:e,title:N(n),createdAt:e.split("-")[1]}))).sort(((e,n)=>parseInt(n.createdAt)-parseInt(e.createdAt)))}getCurrentChat(){return this.currentChatId&&this.chats.get(this.currentChatId)||[]}getCurrentChatTokenUsage(){return this.currentChatId&&this.chatTokenUsage.get(this.currentChatId)||{input_tokens:0,output_tokens:0,cache_creation_input_tokens:0,cache_read_input_tokens:0,thinking_tokens:0}}createNewChat(){const e=`chat-${Date.now()}-${Math.random().toString(36).substr(2,9)}`;return this.chats.set(e,[]),this.chatTokenUsage.set(e,{input_tokens:0,output_tokens:0,cache_creation_input_tokens:0,cache_read_input_tokens:0,thinking_tokens:0}),this.currentChatId=e,this.saveHistory(),e}loadChat(e){return!!this.chats.has(e)&&(this.currentChatId=e,this.saveHistory(),!0)}deleteCurrentChat(){if(this.currentChatId){this.chats.delete(this.currentChatId);const e=Array.from(this.chats.keys());e.length>0?this.currentChatId=e[e.length-1]:this.createNewChat(),this.saveHistory()}}async*sendMessage(e,n){var t,o,r,a;this.currentChatId||this.createNewChat();const s=this.getCurrentChat(),i=this.mcpService.getClients();if(e){let t=e;null!==n.notebookPath&&(t+=`\n Current Notebook Path: ${n.notebookPath}`),null!==n.activeCellID&&(t+=`\n Active selected cell ID: ${n.activeCellID}`),s.push({role:"user",content:t}),await this.saveHistory()}let c=!0;try{for(;c;){let e="",n="",l="",p="",d="",u="",m="";c=!1;const h=this.mcpService.getToolSeparator(),g=Array.from(this.mcpService.getAllTools().entries()).flatMap((([e,n])=>n.map((n=>({name:`${e}${h}${n.name}`,description:n.description,input_schema:n.inputSchema})))));g[g.length-1].cache_control={type:"ephemeral"};const f=[...s];if(f.length>0){const e=f.length-1,n=f[e];if("string"==typeof n.content){const t=n.content;f[e]={...n,content:[{type:"text",text:t,cache_control:{type:"ephemeral"}}]}}}const y=this.anthropic.beta.messages.stream({model:this.modelName,max_tokens:this.TOKEN_BUDGET,thinking:{type:"enabled",budget_tokens:this.THINKING_TOKEN_BUDGET},betas:["output-128k-2025-02-19"],messages:f,tools:g,system:"\nYou are an advanced AI assistant specializing in data science, machile learning, artificial intelligence, and software engineering. Your primary function is to assist users with creating and modifying Jupyter notebooks. Your expertise spans across various aspects of these fields, including but not limited to:\n\n- Data analysis and visualization\n- Machine learning algorithms and implementations\n- Deep learning frameworks\n- Statistical modeling\n- Python programming\n- Jupyter notebook best practices\n- Version control for data science projects\n- Big data processing\n- Natural language processing\n- Computer vision\n\nWhen responding to user queries, always maintain a professional and helpful demeanor. Your goal is to provide clear, concise, and accurate information that directly addresses the user's needs.\n\nBefore providing your final response, please analyze the task in detail. Conduct your task breakdown inside <task_breakdown> tags in your thinking block. Consider the following:\n\n1. What specific area(s) of expertise does this task require? List them out.\n2. Are there any potential challenges or complexities in the task that need to be addressed? Enumerate them.\n3. What additional information, if any, might be needed to fully assist the user? Be specific.\n4. What libraries or tools might be necessary for this task? List them.\n5. Based on the task description, what is the likely level of expertise of the user? Provide reasoning.\n6. Identify and list the key components of the task.\n\nAfter your analysis, provide your assistance in the following format:\n\n1. Task Summary: A very brief restatement of the user's task to ensure understanding.\n2. Approach: Outline the steps or methodology you recommend for tackling the task.\n3. Implementation: use tools to manipulate notebook and add/modify implementation.\n4. Use tools to verify the implementation by executing cells and fix any issues.\n5. Additional Considerations: Mention any best practices, potential pitfalls, or optimization tips relevant to the task.\n\nYour final output should consist only of the assistance in the format specified above and should not duplicate or rehash any of the work you did in the task breakdown section."});for await(const t of y)if("content_block_start"===t.type)"tool_use"===t.content_block.type?(d=t.content_block.name,m=t.content_block.id,yield{type:"tool_use",name:d,input:{}}):"redacted_thinking"===t.content_block.type&&(u=t.content_block.data);else if("content_block_delta"===t.type)"thinking_delta"===t.delta.type?(l+=t.delta.thinking,yield{type:"thinking_delta",thinking:t.delta.thinking,thinking_complete:!1}):"signature_delta"===t.delta.type?p+=t.delta.signature:"text_delta"===t.delta.type?(e+=t.delta.text,""!==l&&(yield{type:"thinking_delta",thinking:"",thinking_complete:!0}),yield{type:"text",text:t.delta.text}):"input_json_delta"===t.delta.type&&(n+=t.delta.partial_json,yield{type:"input_json_delta",name:d,partial_json:t.delta.partial_json});else if("message_delta"===t.type)if("tool_use"===t.delta.stop_reason){if(c=!0,""!==d){const t=[];""!==l&&t.push({type:"thinking",thinking:l,signature:p}),""!==u&&t.push({type:"redacted_thinking",data:u}),""!==e&&(t.push({type:"text",text:e}),e="");const o=JSON.parse(n),r={type:"tool_use",id:m,name:d,input:o};t.push(r),yield{type:"tool_use",name:d,input:o},s.push({role:"assistant",content:t}),await this.saveHistory();try{const[e,n]=d.split(h),t=i.get(e);if(!t)throw new Error(`MCP server ${e} not found`);const r=(await t.callTool({name:n,arguments:o,_meta:{}})).content.map((e=>"text"===e.type?{type:"text",text:e.text}:"image"===e.type?{type:"image",source:{type:"base64",media_type:e.mimeType,data:e.data}}:{type:"text",text:"Unsupported content type"})),a={type:"tool_result",tool_use_id:m,content:r};yield{type:"tool_result",name:d,content:JSON.stringify(r)},s.push({role:"user",content:[a]}),await this.saveHistory()}catch(e){console.error("Error executing tool:",e);const n={type:"text",text:`Error executing tool ${d}: ${e}`};yield n,c=!1}finally{d="",m="",n="",e="",l="",p="",u=""}}}else if(""!==e){const t={type:"text",text:e};s.push({role:"assistant",content:[t]}),await this.saveHistory(),e="",n=""}const k=await y.finalMessage();if(console.log("Final message:",null===(t=k.usage)||void 0===t?void 0:t.cache_creation_input_tokens,null===(o=k.usage)||void 0===o?void 0:o.cache_read_input_tokens,null===(r=k.usage)||void 0===r?void 0:r.input_tokens,null===(a=k.usage)||void 0===a?void 0:a.output_tokens),this.currentChatId&&k.usage){const e=this.chatTokenUsage.get(this.currentChatId)||{input_tokens:0,output_tokens:0,cache_creation_input_tokens:0,cache_read_input_tokens:0};this.chatTokenUsage.set(this.currentChatId,{input_tokens:e.input_tokens+(k.usage.input_tokens||0),output_tokens:e.output_tokens+(k.usage.output_tokens||0),cache_creation_input_tokens:e.cache_creation_input_tokens+(k.usage.cache_creation_input_tokens||0),cache_read_input_tokens:e.cache_read_input_tokens+(k.usage.cache_read_input_tokens||0)}),await this.saveHistory()}}}catch(e){console.error("Error processing message:",e),yield{type:"text",text:"An error occurred while processing your message."}}}async saveHistory(){const e=Array.from(this.chats.entries()).map((([e,n])=>({id:e,title:N(n),createdAt:e.split("-")[1],tokenUsage:this.chatTokenUsage.get(e)||{input_tokens:0,output_tokens:0,cache_creation_input_tokens:0,cache_read_input_tokens:0},messages:n.map((e=>{const n=Array.isArray(e.content)?e.content.map((e=>"text"in e?{type:"text",text:e.text}:"thinking"===e.type?{type:"thinking",thinking:e.thinking,signature:e.signature}:"tool_use"===e.type?{type:"tool_use",id:e.id,name:e.name,input:JSON.parse(JSON.stringify(e.input))}:"tool_result"===e.type?{type:"tool_result",tool_use_id:e.tool_use_id,content:JSON.parse(JSON.stringify(e.content))}:{type:e.type,...Object.entries(e).reduce(((e,[n,t])=>("string"==typeof t||"number"==typeof t||"boolean"==typeof t||null===t?e[n]=t:"object"==typeof t&&(e[n]=JSON.parse(JSON.stringify(t))),e)),{})})):e.content;return{role:e.role,content:n}}))}))),n={chats:JSON.parse(JSON.stringify(e)),currentChatId:this.currentChatId};await this.stateDB.save(this.stateKey,n)}async loadHistory(){const e=await this.stateDB.fetch(this.stateKey);if(e&&"object"==typeof e&&"chats"in e&&Array.isArray(e.chats)){const n={chats:e.chats,currentChatId:e.currentChatId};this.chats.clear(),n.chats.forEach((e=>{this.chats.set(e.id,e.messages.map((e=>{const n=Array.isArray(e.content)?e.content.map((e=>"text"===e.type?{type:"text",text:e.text}:"thinking"===e.type?{type:"thinking",thinking:e.thinking,signature:e.signature}:"tool_use"===e.type?{type:"tool_use",id:e.id,name:e.name,input:e.input}:"tool_result"===e.type?{type:"tool_result",tool_use_id:e.tool_use_id,content:e.content}:e)):e.content;return{role:e.role,content:n}}))),e.tokenUsage?this.chatTokenUsage.set(e.id,e.tokenUsage):this.chatTokenUsage.set(e.id,{input_tokens:0,output_tokens:0,cache_creation_input_tokens:0,cache_read_input_tokens:0})})),n.currentChatId&&this.chats.has(n.currentChatId)?this.currentChatId=n.currentChatId:this.chats.size>0?this.currentChatId=Array.from(this.chats.keys())[this.chats.size-1]:this.createNewChat()}else this.createNewChat()}}var T=t(88),z=t(910);class O{constructor(){this.mcpClients=new Map,this.tools=new Map,this.SERVER_TOOL_SEPARATOR="__"}getClients(){return this.mcpClients}getToolSeparator(){return this.SERVER_TOOL_SEPARATOR}getServerTools(e){return this.tools.get(e)||[]}getAllTools(){return this.tools}async initializeConnections(e){var n;try{for(const e of this.mcpClients.values())try{await(null===(n=e.transport)||void 0===n?void 0:n.close())}catch(e){console.error("Error closing client transport:",e)}this.mcpClients.clear();const t=new T.K({name:"jupyter-mcp-client-default",version:"0.1.0"},{capabilities:{tools:{},resources:{}}});try{const e=new URL("http://localhost:3002/sse"),n=new z.A(e);n.onerror=e=>{console.warn("MCP transport error:",e)},await t.connect(n)}catch(e){console.warn("Failed to connect to default MCP server:",e)}this.mcpClients.set("default",t),console.log("Successfully connected to default MCP server");const o=(null==e?void 0:e.mcpServers)||[];for(const e of o)await this.connectToServer(e);return void await this.initializeTools()}catch(e){throw(e instanceof Error?e.message:String(e)).includes("CORS")&&console.warn("CORS error detected. The MCP server must be configured with these headers:\n  Access-Control-Allow-Origin: http://localhost:8888\n  Access-Control-Allow-Methods: GET\n  Access-Control-Allow-Headers: Accept, Origin\n"),this.mcpClients.clear(),e}}async connectToServer(e){const n=new T.K({name:`jupyter-mcp-client-${e.name}`,version:"0.1.0"},{capabilities:{tools:{},resources:{}}});try{const t=new z.A(new URL(e.url));t.onerror=n=>{console.warn(`MCP transport error for ${e.name}:`,n)},await n.connect(t),this.mcpClients.set(e.name,n),console.log(`Successfully connected to MCP server: ${e.name}`)}catch(n){console.error(`Failed to connect to MCP server ${e.name}:`,n)}}async initializeTools(){try{this.tools.clear();for(const[e,n]of this.mcpClients)try{const t=await n.listTools();t&&Array.isArray(t.tools)&&this.tools.set(e,t.tools),console.log(`Initialized ${t.tools.length} tools from ${e}`)}catch(n){console.error(`Failed to initialize tools from ${e}:`,n)}0===this.tools.size&&console.warn("No tools available from any MCP server")}catch(e){throw console.error("Failed to initialize tools:",e),e}}}const P=({tokenUsage:e})=>{const[n,t]=(0,E.useState)(!1),o=(0,E.useRef)(null),r=(0,E.useRef)(null),a=e.input_tokens,s=e.output_tokens,i=e.cache_creation_input_tokens,c=e.cache_read_input_tokens,l=a>0?Math.round(c/a*100):0;return(0,E.useEffect)((()=>{const e=e=>{o.current&&r.current&&!o.current.contains(e.target)&&!r.current.contains(e.target)&&t(!1)};return document.addEventListener("mousedown",e),()=>{document.removeEventListener("mousedown",e)}}),[]),(0,E.useEffect)((()=>{let e;return n&&(e=setTimeout((()=>{t(!1)}),4e3)),()=>{e&&clearTimeout(e)}}),[n]),C().createElement(C().Fragment,null,C().createElement("div",{ref:r,className:"mcp-toolbar-button mcp-token-usage-button",onClick:()=>t(!n),dangerouslySetInnerHTML:{__html:S('<path d="M12 2v4m0 12v4M4.93 4.93l2.83 2.83m8.48 8.48l2.83 2.83M2 12h4m12 0h4M4.93 19.07l2.83-2.83m8.48-8.48l2.83-2.83"/>')+" Token Usage"}}),C().createElement("div",{ref:o,className:"mcp-token-usage-popup "+(n?"show":"")},C().createElement("div",{className:"mcp-token-usage-header"},"Token Usage"),C().createElement("div",{className:"mcp-token-usage-content"},C().createElement("div",{className:"mcp-token-usage-item"},"Input: ",a),C().createElement("div",{className:"mcp-token-usage-item"},"Output: ",s),C().createElement("div",{className:"mcp-token-usage-item"},"Cache Creation: ",i),C().createElement("div",{className:"mcp-token-usage-item"},"Cache Read: ",c),C().createElement("div",{className:"mcp-token-usage-item"},"Cache Usage: ",l,"%"))))},R=({assistant:e,mcpService:n,onNewChat:t,onShowHistory:o})=>{const[r,a]=C().useState(!1),[s,i]=C().useState(!1),c=C().useRef(null),l=C().useRef(null),p=C().useRef(null),d=C().useRef(null);C().useEffect((()=>{const e=e=>{l.current&&c.current&&!l.current.contains(e.target)&&!c.current.contains(e.target)&&a(!1),d.current&&p.current&&!d.current.contains(e.target)&&!p.current.contains(e.target)&&i(!1)};return document.addEventListener("mousedown",e),()=>{document.removeEventListener("mousedown",e)}}),[]);const u=e?e.getCurrentChatTokenUsage():{input_tokens:0,output_tokens:0,cache_creation_input_tokens:0,cache_read_input_tokens:0};return C().createElement("div",{className:"mcp-toolbar"},C().createElement("button",{className:"mcp-toolbar-button",onClick:t,dangerouslySetInnerHTML:{__html:S('<path d="M12 5v14M5 12h14"/>')+" New Chat"}}),C().createElement("button",{className:"mcp-toolbar-button",onClick:o,dangerouslySetInnerHTML:{__html:S('<path d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"/>')+" History"}}),C().createElement(P,{tokenUsage:u}),C().createElement("div",{ref:c,className:"mcp-tools-button",onClick:()=>a(!r),dangerouslySetInnerHTML:{__html:S('<path d="M14.7 6.3a1 1 0 0 0 0 1.4l1.6 1.6a1 1 0 0 0 1.4 0l3.77-3.77a6 6 0 0 1-7.94 7.94l-6.91 6.91a2.12 2.12 0 0 1-3-3l6.91-6.91a6 6 0 0 1 7.94-7.94l-3.76 3.76z"/>')}}),C().createElement("div",{ref:l,className:"mcp-tools-popup "+(r?"show":"")},C().createElement("div",{className:"mcp-servers-header"},"Available MCP Tools"),C().createElement(U,{mcpService:n,assistant:e})),C().createElement("div",{ref:p,className:"mcp-plug-icon",onClick:()=>i(!s),dangerouslySetInnerHTML:{__html:S('<path d="M18.36 5.64a9 9 0 11-12.73 0M12 2v10"/>')}}),C().createElement("div",{ref:d,className:"mcp-servers-popup "+(s?"show":"")},C().createElement("div",{className:"mcp-servers-header"},"All connected MCP servers (use settings to add/remove)"),C().createElement($,{mcpService:n})))},U=({mcpService:e,assistant:n})=>{if(!n)return C().createElement("ul",{className:"mcp-tools-list"},C().createElement("div",{className:"mcp-no-servers"},"No MCP tools available"));const t=e.getClients();let o=0;const r=[];for(const[e]of t.entries())try{const t=n.getServerTools(e);t.length>0&&t.forEach(((n,t)=>{o++,r.push(C().createElement("li",{key:`${e}-${t}`,className:"mcp-tools-item"},C().createElement("div",null,n.name,C().createElement("div",{className:"mcp-tools-server"},"Server: ",e))))}))}catch(n){console.error(`Failed to list tools for server ${e}:`,n)}return 0===o?C().createElement("ul",{className:"mcp-tools-list"},C().createElement("div",{className:"mcp-no-servers"},"No MCP tools available")):C().createElement("ul",{className:"mcp-tools-list"},r)},$=({mcpService:e})=>{const n=e.getClients();return 0===n.size?C().createElement("ul",{className:"mcp-servers-list"},C().createElement("div",{className:"mcp-no-servers"},"No MCP servers connected")):C().createElement("ul",{className:"mcp-servers-list"},Array.from(n.keys()).map((e=>C().createElement("li",{key:e,className:"mcp-server-item"},e))))},H=({content:e,complete:n=!0})=>{const[t,o]=(0,E.useState)(!1),r=()=>{o(!t)};return C().createElement("div",{className:"mcp-thinking-block "+(t?"expanded":"")},C().createElement("div",{className:"mcp-thinking-header"},C().createElement("span",{className:"mcp-thinking-title",style:{cursor:"pointer"},onClick:r},n?"Thoughts":"Thinking..."),C().createElement("button",{className:"mcp-thinking-toggle",onClick:r},t?"Collapse":"Expand")),C().createElement("pre",{className:"mcp-thinking-content"},e))},L=({name:e,input:n,streamingInput:t,isStreaming:o=!1})=>{const r=o||n&&Object.keys(n||{}).length>0,[a,s]=(0,E.useState)(!0);return C().createElement("div",{className:"tool-use"},C().createElement("div",{className:"tool-use-header"},C().createElement("span",null,"Using tool: ",e),r&&C().createElement("button",{className:"tool-use-toggle",onClick:()=>{s(!a)}},a?"Collapse":"Expand")),r&&a&&C().createElement("pre",{className:"tool-use-input "+(o?"streaming-input":"")},o&&t?t:JSON.stringify(n,null,2)))},D=({content:e,isError:n=!1})=>{const[t,o]=(0,E.useState)(!1);return C().createElement("div",{className:`tool-result ${t?"expanded":""} ${n?"error":""}`},C().createElement("div",{className:"tool-result-header"},"Tool Result",C().createElement("button",{className:"tool-result-toggle",onClick:()=>{o(!t)}},t?"Collapse":"Expand")),C().createElement("pre",{className:"tool-result-content"},"string"==typeof e?e:JSON.stringify(e,null,2)))},B=({content:e,rendermime:n})=>{const t=(0,E.useRef)(null);return(0,E.useEffect)((()=>{if(t.current){const o=n.createRenderer("text/markdown");o.renderModel({data:{"text/markdown":e},trusted:!0,metadata:{},setData:()=>{}}),t.current.innerHTML="",t.current.appendChild(o.node)}}),[e,n]),C().createElement("div",{className:"mcp-message-markdown",ref:t})},J=({blocks:e,rendermime:n})=>{const t=(0,E.useRef)(null);(0,E.useEffect)((()=>{if(t.current){const e=t.current.closest(".mcp-chat-area");e&&(e.scrollTop=e.scrollHeight)}}),[e]);try{const o={};let r="",a="";if(!Array.isArray(e))return console.error("Invalid blocks format:",e),C().createElement("div",{className:"mcp-message assistant",ref:t},C().createElement("div",{className:"mcp-error"},"Error: Invalid stream event format"));e.forEach((e=>{try{if(!e||"object"!=typeof e)return void console.warn("Skipping invalid block:",e);if("text"===e.type&&e.text)r+=e.text,o.text=r;else if("thinking_delta"===e.type)e.thinking&&(a+=e.thinking),o.thinking={content:a,complete:!!e.thinking_complete};else if("tool_use"===e.type){const n=e.name||"Unknown Tool";o[`tool_use_${n}`]={name:n,input:e.input||{}}}else if("input_json_delta"===e.type&&e.partial_json){const n=Object.keys(o).find((e=>e.startsWith("tool_use_")&&!o[e].inputComplete));if(n){o[n].streamingInput||(o[n].streamingInput=""),o[n].streamingInput+=e.partial_json;try{const e=JSON.parse(o[n].streamingInput);o[n].parsedInput=e}catch(e){}}else{const n="tool_use_placeholder";o[n]?o[n].streamingInput+=e.partial_json:o[n]={name:e.name||"Tool",streamingInput:e.partial_json,isStreaming:!0}}}else if("tool_result"===e.type){const n=e.name||"Unknown Tool";o[`tool_result_${n}`]={name:n,content:e.content||"",isError:!!e.is_error};const t=Object.keys(o).find((e=>e.startsWith("tool_use_")&&e.includes(n)&&!o[e].inputComplete));t&&(o[t].inputComplete=!0)}}catch(n){console.error("Error processing block:",n,e)}}));const s=[];o.thinking&&s.push(C().createElement(H,{key:"thinking",content:o.thinking.content||"",complete:!!o.thinking.complete}));const i=[];if(o.tool_use_placeholder){const e=o.tool_use_placeholder;i.push(C().createElement(L,{key:"tool_use_placeholder",name:e.name||"Tool",streamingInput:e.streamingInput,isStreaming:!0}))}return Object.entries(o).forEach((([e,n])=>{try{if(e.startsWith("tool_use_")&&"tool_use_placeholder"!==e){const t=n.parsedInput||n.input||{},o=!(!n.streamingInput||n.inputComplete);i.push(C().createElement(L,{key:e,name:n.name||"Unknown Tool",input:t,streamingInput:n.streamingInput,isStreaming:o}))}else e.startsWith("tool_result_")&&i.push(C().createElement(D,{key:e,content:n.content||"",isError:!!n.isError}))}catch(t){console.error("Error rendering tool element:",t,e,n)}})),s.push(...i),o.text&&s.push(C().createElement(B,{key:"text",content:o.text,rendermime:n})),C().createElement("div",{className:"mcp-message assistant",ref:t},s)}catch(e){return console.error("Error processing streaming response:",e),C().createElement("div",{className:"mcp-message assistant",ref:t},C().createElement("div",{className:"mcp-error"},"Error processing response: ",String(e)))}},K=({role:e,content:n,rendermime:t})=>{const o=Array.isArray(n)?n:[{type:"text",text:"string"==typeof n?n:JSON.stringify(n)}];return C().createElement("div",{className:`mcp-message ${e}`},Array.isArray(o)?o.map(((e,n)=>{if(!e)return null;try{if("text"===e.type&&e.text)return C().createElement(B,{key:n,content:e.text,rendermime:t});if("thinking"===e.type)return C().createElement(H,{key:n,content:e.thinking||e.content||"",complete:!0});if("tool_use"===e.type)return C().createElement(L,{key:n,name:e.name||"Unknown Tool",input:e.input,streamingInput:e.streamingInput,isStreaming:!!e.isStreaming});if("tool_result"===e.type)return C().createElement(D,{key:n,content:e.content||"",isError:!!e.is_error})}catch(t){return console.error("Error rendering message block:",t,e),C().createElement("div",{key:n,className:"mcp-error"},"Error rendering content")}return null})):C().createElement("div",{className:"mcp-error"},"Error: Invalid content format"))},F=({assistant:e,onSelectChat:n})=>{if(!e)return C().createElement("div",{className:"mcp-no-chats"},"No chats available");const t=e.getChats();return 0===t.length?C().createElement("div",{className:"mcp-no-chats"},"No chat history"):C().createElement("div",{className:"mcp-chat-list"},t.map((t=>C().createElement("div",{key:t.id,className:"mcp-chat-item",onClick:()=>{e.loadChat(t.id)&&n(t.id)}},C().createElement("div",{className:"mcp-chat-title"},t.title),C().createElement("div",{className:"mcp-chat-date"},new Date(parseInt(t.createdAt)).toLocaleString())))))},W=({assistant:e,availableModels:n,selectedModel:t,onSelectModel:o,onSendMessage:r,notebookContext:a})=>{const[s,i]=(0,E.useState)(""),c=(0,E.useRef)(null),l=(0,E.useRef)(null);C().useEffect((()=>{l.current&&((e,n,t)=>{e.innerHTML="",n.forEach((n=>{const o=document.createElement("option");o.value=n.name,o.textContent=n.name,"gpt-4"===n.name&&(o.textContent="GPT-4"),o.selected=n===t,e.appendChild(o)}))})(l.current,n,t)}),[n,t]);const p=()=>{s.trim()&&(r(s.trim(),a),i(""),c.current&&(c.current.style.height="auto"))};return C().createElement("div",{className:"mcp-input-area"},C().createElement("div",{className:"mcp-input-wrapper"},C().createElement("div",{className:"mcp-input-container"},C().createElement("textarea",{ref:c,className:"mcp-input",placeholder:"Message MCP v3!...",value:s,onChange:e=>{i(e.target.value),(()=>{if(c.current){c.current.style.height="auto";const e=Math.min(c.current.scrollHeight,.3*window.innerHeight);c.current.style.height=e+"px"}})()},onKeyDown:e=>{"Enter"!==e.key||e.shiftKey||(e.preventDefault(),p())}}),C().createElement("button",{className:"mcp-send-button",onClick:p}))),C().createElement("div",{className:"mcp-model-select"},C().createElement("select",{ref:l,onChange:e=>{const t=e.target.value,r=n.find((e=>e.name===t))||null;o(r)}})))},G=({rendermime:e,notebookTracker:n,stateDB:t,settingsData:o,availableModels:r,selectedModel:a,onSelectModel:s})=>{const[i,c]=(0,E.useState)(null),[l,p]=(0,E.useState)(new O),[d,u]=(0,E.useState)(!1),[m,h]=(0,E.useState)(!1),[g,f]=(0,E.useState)([]),y=(0,E.useRef)(null);(0,E.useEffect)((()=>{k()}),[a,o]),(0,E.useEffect)((()=>{y.current&&g.length>0&&(y.current.scrollTop=y.current.scrollHeight)}),[g]);const k=async()=>{if(!d&&a){u(!0);try{const e=new O;await e.initializeConnections(o),p(e);const n=new A(e,a.name,a.apiKey,t);c(n)}catch(e){console.error("Failed to initialize connections:",e),c(null)}finally{u(!1)}}};return C().createElement("div",{className:"mcp-chat"},C().createElement(R,{assistant:i,mcpService:l,onNewChat:()=>{i&&(i.createNewChat(),h(!1),f([]))},onShowHistory:()=>{h(!0),f([])}}),m?C().createElement(F,{assistant:i,onSelectChat:()=>h(!1)}):C().createElement("div",{className:"mcp-chat-area",ref:y},((n=!1)=>{if(!i)return C().createElement("div",{className:"mcp-no-messages"},"No messages yet");const t=i.getCurrentChat(),o=[];let r=0,a=-1;if(n)for(let e=t.length-1;e>=0;e--)if("assistant"===t[e].role){a=e;break}for(;r<t.length;){const s=t[r];if(n&&r===a)r++;else if("user"!==s.role||"string"!=typeof s.content&&(!Array.isArray(s.content)||s.content.some((e=>"tool_result"===e.type))))if("assistant"===s.role){let n=r,a=[];for(;n<t.length;){const e=t[n];if("user"===e.role&&("string"==typeof e.content||Array.isArray(e.content)&&!e.content.some((e=>"tool_result"===e.type))))break;Array.isArray(e.content)?a=[...a,...e.content]:"string"==typeof e.content&&a.push({type:"text",text:e.content}),n++}o.push(C().createElement(K,{key:`assistant-${r}`,role:"assistant",content:a,rendermime:e})),r=n}else r++;else"string"==typeof s.content?o.push(C().createElement(K,{key:`user-${r}`,role:"user",content:[{type:"text",text:s.content}],rendermime:e})):Array.isArray(s.content)&&o.push(C().createElement(K,{key:`user-${r}`,role:"user",content:s.content,rendermime:e})),r++}return o})(g.length>0),g.length>0&&C().createElement(J,{blocks:g,rendermime:e})),C().createElement(W,{assistant:i,availableModels:r,selectedModel:a,onSelectModel:s,onSendMessage:async(e,t)=>{if(!i||!e.trim())return;h(!1),f([]);const o=[];try{for await(const n of i.sendMessage(e,t))o.push(n),f([...o]);f([]),n.currentWidget&&await n.currentWidget.context.revert()}catch(e){console.error("Error handling message:",e),o.push({type:"text",text:"An error occurred while processing your message: "+(e instanceof Error?e.message:String(e))}),f([...o])}},notebookContext:{notebookPath:null===(v=n.currentWidget)||void 0===v?void 0:v.context.path,activeCellID:null===(x=null===(b=n.currentWidget)||void 0===b?void 0:b.content.activeCell)||void 0===x?void 0:x.model.id}}));var v,b,x},Y={id:"mcp-client-jupyter-chat:plugin",description:"A JupyterLab extension for Chat with AI supporting MCP",autoStart:!0,requires:[y.ICommandPalette,_.IStateDB,x.INotebookTracker,b.IRenderMimeRegistry],optional:[w.ISettingRegistry],activate:async(e,n,t,o,r,a)=>{try{if(console.log("JupyterLab extension mcp-client-jupyter-chat is activated!"),window.location.href.includes("?reset")){console.log("Running in browser check mode - using minimal initialization");const t="mcp:open-chat";return e.commands.addCommand(t,{label:"Open Chat",caption:"Open Chat Interface",isEnabled:()=>!0,execute:()=>{console.log("MCP Chat command executed")}}),void n.addItem({command:t,category:"MCP"})}const s=new v.LabIcon({name:"mcp:logo",svgstr:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5"><rect x="4" y="4" width="16" height="16" rx="2"/><path d="M8 8h8M8 12h8M8 16h8"/><circle cx="4" cy="8" r="1"/><circle cx="20" cy="8" r="1"/><circle cx="4" cy="16" r="1"/><circle cx="20" cy="16" r="1"/></svg>'}),i=new k.Panel;i.id="mcp-chat",i.title.label="",i.title.icon=s,i.title.closable=!0,i.title.caption="MCP Chat Interface";const c=document.createElement("div");c.className="mcp-root",i.addWidget({node:c});const l=()=>{const{settings:e,availableModels:n,selectedModel:s,setSelectedModel:i,isLoading:c}=((e,n)=>{const[t,o]=(0,E.useState)(null),[r,a]=(0,E.useState)([]),[s,i]=(0,E.useState)(null),[c,l]=(0,E.useState)(!0),[p,d]=(0,E.useState)(null);(0,E.useEffect)((()=>{(async()=>{if(e)try{const t=await e.load(n);return u(t),t.changed.connect(u),()=>{t.changed.disconnect(u)}}catch(e){console.error("Failed to load settings:",e),d("Failed to load settings"),l(!1)}else l(!1)})()}),[e,n]);const u=e=>{try{const n=e.composite;o(n);const t=(null==n?void 0:n.models)||[],r=Array.isArray(t)?t:[];a(r);const s=r.find((e=>e.isDefault))||r[0]||null;i(s),d(null)}catch(e){console.error("Error processing settings:",e),d("Error processing settings")}finally{l(!1)}};return{settings:t,availableModels:r,selectedModel:s,setSelectedModel:i,isLoading:c,error:p}})(a,Y.id);return c?E.createElement("div",{className:"mcp-loading"},"Loading settings..."):E.createElement(G,{rendermime:r,notebookTracker:o,stateDB:t,settingsData:e,availableModels:n,selectedModel:s,onSelectModel:i})};(0,j.H)(c).render(E.createElement(l));const p="mcp:open-chat";e.commands.addCommand(p,{label:"Open Chat",caption:"Open Chat Interface",isEnabled:()=>!0,execute:()=>{i.isAttached||e.shell.add(i,"left",{rank:100}),e.shell.activateById(i.id)}}),n.addItem({command:p,category:"MCP"}),e.commands.execute(p)}catch(e){console.error("Error activating mcp-client-jupyter-chat extension:",e)}}},q=Y},475:(e,n,t)=>{t.d(n,{A:()=>i});var o=t(601),r=t.n(o),a=t(314),s=t.n(a)()(r());s.push([e.id,"/*\n  See the JupyterLab Developer Guide for useful CSS Patterns:\n  https://jupyterlab.readthedocs.io/en/stable/developer/css.html\n*/\n\n.mcp-chat {\n  background: var(--jp-layout-color1);\n  color: var(--jp-ui-font-color1);\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.mcp-logo {\n  width: 24px;\n  height: 24px;\n  display: inline-block;\n  vertical-align: middle;\n  margin-right: 4px;\n}\n\n.mcp-toolbar {\n  display: flex;\n  padding: 8px;\n  background: var(--jp-layout-color2);\n  position: relative;\n}\n\n.mcp-tools-button {\n  width: 20px;\n  height: 20px;\n  cursor: pointer;\n  opacity: 0.7;\n  transition: opacity 0.2s;\n  margin-left: auto;\n}\n\n.mcp-tools-button:hover {\n  opacity: 1;\n}\n\n.mcp-tools-button svg {\n  stroke-linecap: round;\n  stroke-linejoin: round;\n}\n\n.mcp-plug-icon {\n  width: 20px;\n  height: 20px;\n  cursor: pointer;\n  margin-left: 8px;\n  opacity: 0.7;\n  transition: opacity 0.2s;\n  transform: rotate(45deg);\n}\n\n.mcp-plug-icon:hover {\n  opacity: 1;\n}\n\n.mcp-plug-icon svg {\n  stroke-linecap: round;\n  stroke-linejoin: round;\n}\n\n.mcp-servers-popup,\n.mcp-tools-popup {\n  position: absolute;\n  top: calc(100% + 8px);\n  right: 8px;\n  background: var(--jp-layout-color0);\n  border: 1px solid var(--jp-border-color1);\n  border-radius: 6px;\n  box-shadow: 0 4px 12px rgb(0 0 0 / 15%);\n  min-width: 280px;\n  z-index: 1000;\n  display: none;\n  animation: popup-fade 0.2s ease-out;\n  transform-origin: top right;\n}\n\n.mcp-servers-popup.show,\n.mcp-tools-popup.show {\n  display: block;\n}\n\n.mcp-servers-popup h3,\n.mcp-tools-popup h3 {\n  margin: 0;\n  padding: 12px 16px;\n  font-size: var(--jp-ui-font-size1);\n  font-weight: 600;\n  color: var(--jp-ui-font-color0);\n  border-bottom: 1px solid var(--jp-border-color1);\n  background: var(--jp-layout-color1);\n  border-top-left-radius: 6px;\n  border-top-right-radius: 6px;\n}\n\n.mcp-servers-header,\n.mcp-tools-header {\n  margin: 0;\n  padding: 12px 16px;\n  font-size: var(--jp-ui-font-size1);\n  font-weight: 600;\n  color: var(--jp-ui-font-color0);\n  background: var(--jp-layout-color2);\n  border-bottom: 1px solid var(--jp-border-color1);\n}\n\n.mcp-servers-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.mcp-servers-header small {\n  font-size: var(--jp-ui-font-size0);\n  font-weight: normal;\n  color: var(--jp-ui-font-color2);\n}\n\n@keyframes popup-fade {\n  from {\n    opacity: 0;\n    transform: scale(0.95);\n  }\n\n  to {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n\n.mcp-servers-list,\n.mcp-tools-list {\n  list-style: none;\n  margin: 0;\n  padding: 4px;\n}\n\n.mcp-tools-item {\n  padding: 8px 12px;\n  color: var(--jp-ui-font-color1);\n  font-size: var(--jp-ui-font-size1);\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-radius: 4px;\n  margin: 2px 0;\n  transition:\n    background 0.2s,\n    color 0.2s;\n}\n\n.mcp-tools-item:hover {\n  background: var(--jp-layout-color3);\n}\n\n.mcp-tools-server {\n  color: var(--jp-ui-font-color2);\n  font-size: var(--jp-ui-font-size0);\n  background: var(--jp-layout-color2);\n  padding: 2px 6px;\n  border-radius: 3px;\n  margin-left: 8px;\n}\n\n.mcp-server-item {\n  padding: 8px 12px;\n  color: var(--jp-ui-font-color1);\n  font-size: var(--jp-ui-font-size1);\n  border-radius: 4px;\n  margin: 2px 0;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  transition: background 0.2s;\n}\n\n.mcp-server-item:hover {\n  background: var(--jp-layout-color3);\n}\n\n.mcp-no-servers {\n  padding: 12px;\n  color: var(--jp-ui-font-color2);\n  font-style: italic;\n  text-align: center;\n  background: var(--jp-layout-color2);\n  border-radius: 4px;\n  margin: 4px;\n}\n\n.mcp-toolbar-button {\n  background: none;\n  border: none;\n  padding: 4px 8px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  color: var(--jp-ui-font-color1);\n  margin-right: 8px;\n  border-radius: 4px;\n}\n\n.mcp-toolbar-button:hover {\n  background: var(--jp-layout-color3);\n}\n\n.mcp-toolbar-button svg {\n  width: 16px;\n  height: 16px;\n  margin-right: 4px;\n}\n\n.mcp-chat-area {\n  flex: 1;\n  overflow-y: auto;\n  padding: 16px;\n}\n\n.mcp-chat-list {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.mcp-chat-item {\n  padding: 12px;\n  border-radius: 8px;\n  background: var(--jp-layout-color2);\n  cursor: pointer;\n  transition: background 0.2s;\n}\n\n.mcp-chat-item:hover {\n  background: var(--jp-layout-color3);\n}\n\n.mcp-chat-title {\n  font-size: var(--jp-ui-font-size1);\n  color: var(--jp-ui-font-color0);\n  margin-bottom: 4px;\n}\n\n.mcp-chat-date {\n  font-size: var(--jp-ui-font-size0);\n  color: var(--jp-ui-font-color2);\n}\n\n.mcp-message {\n  font-size: var(--jp-ui-font-size1);\n  margin-bottom: 16px;\n  padding: 8px 12px;\n  border-radius: 8px;\n  max-width: 85%;\n}\n\n.mcp-message.user {\n  background: var(--jp-layout-color2);\n  margin-left: auto;\n}\n\n.mcp-message.assistant {\n  background: var(--jp-layout-color3);\n  margin-right: auto;\n}\n\n.mcp-input-area {\n  padding: 16px;\n  border-top: 1px solid var(--jp-border-color1);\n  background: var(--jp-layout-color1);\n}\n\n.mcp-input-container {\n  display: flex;\n  background: var(--jp-layout-color0);\n}\n\n.mcp-input {\n  flex: 1;\n  min-height: 40px;\n  padding: 8px 12px;\n  font-size: var(--jp-ui-font-size1);\n  font-family: var(--jp-ui-font-family);\n  border: none;\n  background: none;\n  resize: none;\n  color: var(--jp-ui-font-color0);\n}\n\n.mcp-input:focus {\n  outline: none;\n}\n\n.mcp-send-button {\n  background: none;\n  border: none;\n  padding: 8px 16px;\n  cursor: pointer;\n  color: var(--jp-brand-color1);\n}\n\n.mcp-send-button:hover {\n  background: var(--jp-layout-color2);\n}\n\n.tool-use {\n  font-size: var(--jp-ui-font-size0);\n  margin: 4px 0;\n  background: var(--jp-layout-color2);\n  border-radius: 4px;\n  border: 1px solid var(--jp-border-color1);\n}\n\n.tool-use-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 4px 8px;\n  color: var(--jp-brand-color1);\n  background: var(--jp-layout-color2);\n  border-bottom: 1px solid var(--jp-border-color1);\n}\n\n.tool-use-input {\n  padding: 8px;\n  margin: 0;\n  background: var(--jp-layout-color0);\n  white-space: pre-wrap;\n  word-break: break-word;\n  font-size: 12px;\n  line-height: 1.5;\n  color: var(--jp-ui-font-color2);\n  font-family: SFMono-Regular, Consolas, 'Liberation Mono', Menlo, Courier,\n    monospace;\n}\n\n.streaming-input {\n  border-left: 3px solid var(--jp-brand-color1);\n  animation: streaming-pulse 1.5s infinite alternate;\n}\n\n@keyframes streaming-pulse {\n  from {\n    border-left-color: var(--jp-brand-color1);\n  }\n\n  to {\n    border-left-color: var(--jp-brand-color2);\n  }\n}\n\n.tool-result {\n  font-size: var(--jp-ui-font-size0);\n  margin: 4px 0;\n  border: 1px solid var(--jp-border-color1);\n  border-radius: 4px;\n}\n\n.tool-result.error {\n  border-color: var(--jp-error-color1);\n}\n\n.tool-result-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 4px 8px;\n  background: var(--jp-layout-color2);\n  border-bottom: 1px solid var(--jp-border-color1);\n}\n\n.tool-result-toggle {\n  background: none;\n  border: none;\n  padding: 2px 6px;\n  font-size: var(--jp-ui-font-size0);\n  cursor: pointer;\n  color: var(--jp-brand-color1);\n}\n\n.tool-result-toggle:hover {\n  background: var(--jp-layout-color3);\n  border-radius: 4px;\n}\n\n.tool-result-content {\n  display: none;\n  padding: 8px;\n  background: var(--jp-layout-color0);\n  white-space: pre-wrap;\n  margin: 0;\n}\n\n.tool-result.expanded .tool-result-content {\n  display: block;\n}\n\n.tool-use-toggle {\n  background: none;\n  border: none;\n  padding: 2px 6px;\n  font-size: var(--jp-ui-font-size0);\n  cursor: pointer;\n  color: var(--jp-brand-color1);\n}\n\n.tool-use-toggle:hover {\n  background: var(--jp-layout-color3);\n  border-radius: 4px;\n}\n\n/* Thinking Block Styles */\n.mcp-thinking-block {\n  position: relative;\n  max-height: 36px;\n  overflow-y: hidden;\n  background: #f8f8f8;\n  border-radius: 6px;\n  margin: 8px 0;\n  font-family: SFMono-Regular, Consolas, 'Liberation Mono', Menlo, Courier,\n    monospace;\n  font-size: 13px;\n  transition: max-height 0.3s ease;\n  border: 1px solid var(--jp-border-color1);\n}\n\n.mcp-thinking-block.expanded {\n  max-height: 600px;\n  overflow-y: auto;\n  transition: max-height 0.3s ease-in-out;\n}\n\n.mcp-thinking-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px;\n  background: var(--jp-layout-color2);\n  border-bottom: 1px solid var(--jp-border-color1);\n  color: var(--jp-ui-font-color1);\n  font-size: 0.9em;\n}\n\n.mcp-thinking-toggle {\n  background: none;\n  border: none;\n  padding: 2px 6px;\n  font-size: 0.9em;\n  cursor: pointer;\n  color: var(--jp-brand-color1);\n  border-radius: 4px;\n}\n\n.mcp-thinking-toggle:hover {\n  background: var(--jp-layout-color3);\n}\n\n.mcp-thinking-content {\n  padding: 8px;\n  margin: 0;\n  background: var(--jp-layout-color0);\n  white-space: pre-wrap;\n  word-break: break-word;\n  display: none;\n  font-size: 12px;\n  line-height: 1.5;\n  color: var(--jp-ui-font-color2);\n}\n\n.mcp-thinking-block.expanded .mcp-thinking-content {\n  display: block;\n}\n",""]);const i=s},646:(e,n,t)=>{t.d(n,{A:()=>l});var o=t(601),r=t.n(o),a=t(314),s=t.n(a),i=t(475),c=s()(r());c.i(i.A),c.push([e.id,".mcp-chat {\n  position: fixed;\n  inset: 0;\n  display: flex;\n  flex-direction: column;\n  background: #faf9f7;\n}\n\n.mcp-chat-area {\n  flex: 1;\n  overflow-y: auto;\n  padding: 16px;\n  padding-bottom: 100px;\n  background: #faf9f7;\n  scrollbar-width: thin;\n  scrollbar-color: #e6e2dd transparent;\n}\n\n.mcp-chat-area::-webkit-scrollbar {\n  width: 8px;\n}\n\n.mcp-chat-area::-webkit-scrollbar-track {\n  background: transparent;\n}\n\n.mcp-chat-area::-webkit-scrollbar-thumb {\n  background-color: #e6e2dd;\n  border-radius: 4px;\n}\n\n.mcp-message {\n  margin: 8px 0;\n  padding: 8px 12px;\n  border-radius: 12px;\n  max-width: 80%;\n  font-size: 14px;\n  line-height: 1.5;\n  word-break: break-word;\n  overflow-wrap: break-word;\n}\n\n.mcp-message-markdown {\n  margin: 0;\n  padding: 0;\n}\n\n.mcp-message.user {\n  background: #f0ece6;\n  margin-left: auto;\n  color: #444;\n}\n\n.mcp-message.assistant {\n  background: #fff;\n  margin-right: auto;\n  color: #444;\n  border: 1px solid #e6e2dd;\n}\n\n.mcp-input-area {\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding: 2px;\n  background: #fff;\n  border-top: 1px solid #e6e2dd;\n  box-sizing: border-box;\n  box-shadow: 0 -2px 10px rgb(0 0 0 / 5%);\n  max-height: 100px;\n  z-index: 1000;\n}\n\n.mcp-input-wrapper {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  width: 100%;\n}\n\n.mcp-input-container {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  padding: 8px 12px;\n  background: #fff;\n}\n\n.mcp-input {\n  flex: 1;\n  padding: 0;\n  border: none;\n  background: transparent;\n  color: #444;\n  resize: none;\n  min-height: 24px;\n  max-height: 48px;\n  overflow-y: auto;\n  line-height: 1.4;\n  box-sizing: border-box;\n}\n\n.mcp-input:focus {\n  outline: none;\n}\n\n.mcp-send-button {\n  width: 32px;\n  height: 32px;\n  background: #f0ece6;\n  color: #444;\n  border: none;\n  border-radius: 50%;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  margin-right: -4px;\n}\n\n.mcp-send-button::before {\n  content: '↑';\n  font-size: 18px;\n}\n\n.mcp-send-button:hover {\n  background: #e6e2dd;\n}\n\n.mcp-send-button:active {\n  background: #dcd8d3;\n}\n\n.tool-result {\n  position: relative;\n  max-height: 150px;\n  overflow-y: auto;\n  padding: 8px;\n  background: #f8f8f8;\n  border-radius: 6px;\n  margin: 8px 0;\n  font-family: SFMono-Regular, Consolas, 'Liberation Mono', Menlo, Courier,\n    monospace;\n  font-size: 13px;\n  transition: max-height 0.3s ease;\n}\n\n.tool-result pre {\n  margin: 8px 0 0;\n  white-space: pre-wrap;\n  word-break: break-word;\n}\n\n.tool-result.expanded {\n  max-height: none;\n}\n\n.tool-result-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 4px;\n  color: #666;\n  font-size: 0.9em;\n}\n\n.tool-result-toggle {\n  background: none;\n  border: none;\n  color: #666;\n  cursor: pointer;\n  padding: 2px 6px;\n  font-size: 0.9em;\n  border-radius: 4px;\n}\n\n.tool-result-toggle:hover {\n  background: #eee;\n}\n\n.tool-result.error {\n  background: #fff0f0;\n  border: 1px solid #ffcdd2;\n}\n\n.mcp-model-select {\n  position: relative;\n  display: inline-block;\n  background: #f7f7f7;\n  border-radius: 8px;\n  padding: 2px 4px;\n  margin-bottom: 8px;\n  width: fit-content;\n  z-index: 1001;\n}\n\n.mcp-model-select select {\n  appearance: none;\n  -webkit-appearance: none;\n  width: auto;\n  padding: 6px 28px 6px 8px;\n  border: none;\n  background: transparent;\n  color: #333;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  outline: none;\n}\n\n.mcp-model-select::after {\n  content: '▼';\n  font-size: 8px;\n  color: #666;\n  position: absolute;\n  right: 10px;\n  top: 50%;\n  transform: translateY(-50%);\n  pointer-events: none;\n}\n\n.mcp-model-select select:focus {\n  outline: none;\n}\n\n.mcp-model-select select option {\n  padding: 10px;\n  font-size: 14px;\n  background: #fff;\n  color: #333;\n  font-weight: 500;\n}\n\n.mcp-model-select select option:hover,\n.mcp-model-select select option:focus {\n  background: #f7f7f7;\n}\n\n.mcp-token-usage-popup {\n  position: absolute;\n  top: calc(100% + 8px);\n  left: 8px;\n  background: var(--jp-layout-color0, #fff);\n  border: 1px solid var(--jp-border-color1, #e6e2dd);\n  border-radius: 6px;\n  box-shadow: 0 4px 12px rgb(0 0 0 / 15%);\n  min-width: 280px;\n  z-index: 1000;\n  display: none;\n  animation: popup-fade 0.2s ease-out;\n  transform-origin: top left;\n  padding: 0;\n}\n\n.mcp-token-usage-popup.show {\n  display: block;\n}\n\n.mcp-token-usage-header {\n  margin: 0;\n  padding: 12px 16px;\n  font-size: var(--jp-ui-font-size1, 14px);\n  font-weight: 600;\n  color: var(--jp-ui-font-color0, #333);\n  background: var(--jp-layout-color2, #f5f5f5);\n  border-bottom: 1px solid var(--jp-border-color1, #e6e2dd);\n}\n\n.mcp-token-usage-content {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n  padding: 12px;\n}\n\n.mcp-token-usage-item {\n  padding: 6px 10px;\n  background: var(--jp-layout-color2, #f5f5f5);\n  border-radius: 4px;\n  font-family: var(--jp-code-font-family, monospace);\n  font-size: var(--jp-ui-font-size0, 12px);\n  color: var(--jp-ui-font-color1, #444);\n}\n\n.mcp-token-usage-button {\n  position: relative;\n}\n\n/* Thinking Block Styles for index.css */\n.mcp-thinking-block {\n  background: #f9f9f9;\n  border: 1px solid #e6e2dd;\n  margin: 8px 0;\n}\n\n.mcp-thinking-header {\n  background: #f7f7f7;\n  color: #555;\n  border-bottom: 1px solid #e6e2dd;\n}\n\n.mcp-thinking-toggle {\n  color: #666;\n}\n\n.mcp-thinking-toggle:hover {\n  background: #eee;\n}\n\n.mcp-thinking-content {\n  background: #fff;\n  color: #444;\n}\n\n.mcp-thinking-title {\n  font-weight: 500;\n  padding-right: 8px;\n}\n",""]);const l=c}}]);