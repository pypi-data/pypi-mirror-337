# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
import datetime as dt
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class Developer(UniversalBaseModel):
    id: typing.Optional[str] = pydantic.Field(default=None)
    """
    Unique identifier for the developer
    """

    name: str = pydantic.Field()
    """
    Name of the developer
    """

    developer_id: str = pydantic.Field()
    """
    External identifier for the developer
    """

    date_created: typing.Optional[dt.datetime] = pydantic.Field(default=None)
    """
    Date when the developer was created
    """

    industry: typing.Optional[str] = pydantic.Field(default=None)
    """
    Industry the developer operates in
    """

    preferences_id: typing.Optional[int] = pydantic.Field(default=None)
    """
    ID of the developer's preferences
    """

    api_key: typing.Optional[str] = pydantic.Field(default=None)
    """
    API key for the developer
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
