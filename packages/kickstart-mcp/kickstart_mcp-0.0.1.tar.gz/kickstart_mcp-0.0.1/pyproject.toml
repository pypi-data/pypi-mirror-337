[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "kickstart-mcp"
dynamic = ["version"]
description = ''
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = []
authors = [
  { name = "nolleh", email = "nolleh7707@gmail.com" },
]

classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]

dependencies = [
  "mkdocs",
  "colorama",
  "click",
  "dotenv",
  "tomli",
  "tomli-w",
  "pygments",
  "pyperclip"
]

[project.scripts]
kickstart-mcp = "kickstart_mcp:main"

[project.urls]
Documentation = "https://github.com/nolleh/kickstart-mcp#readme"
Issues = "https://github.com/nolleh/kickstart-mcp/issues"
Source = "https://github.com/nolleh/kickstart-mcp"

[tool.hatch.version]
path = "src/kickstart_mcp/__about__.py"

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]

[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/kickstart_mcp tests}"

[tool.hatch.envs.docs.scripts]
build = "mkdocs build --clean --strict"
serve = "mkdocs serve --dev-addr localhost:9090"

[tool.hatch.envs.test]
dependencies = [
  "pytest"
]

[[tool.hatch.envs.test.matrix]]
python = [ "3.10", "3.11"]
version = [ "42", "3.14"]

[[tool.hatch.envs.test.matrix]]
python = ["3.11", "3.12"]
version = ["9000"]
feature = [ "foo", "bar"]

[tool.coverage.run]
source_pkgs = ["kickstart_mcp", "tests"]
branch = true
parallel = true
omit = [
  "src/kickstart_mcp/__about__.py",
]

[tool.coverage.paths]
kickstart_mcp = ["src/kickstart_mcp", "*/kickstart-mcp/src/kickstart_mcp"]
tests = ["tests", "*/kickstart-mcp/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
