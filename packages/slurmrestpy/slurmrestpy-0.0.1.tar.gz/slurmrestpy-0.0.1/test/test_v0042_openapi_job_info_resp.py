# coding: utf-8

"""
Slurm REST API

API to access and control Slurm

The version of the OpenAPI document: Slurm-24.11.1&openapi/slurmdbd&openapi/slurmctld
Contact: sales@schedmd.com
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from slurmrestpy.models.v0042_openapi_job_info_resp import V0042OpenapiJobInfoResp


class TestV0042OpenapiJobInfoResp(unittest.TestCase):
    """V0042OpenapiJobInfoResp unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V0042OpenapiJobInfoResp:
        """Test V0042OpenapiJobInfoResp
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `V0042OpenapiJobInfoResp`
        """
        model = V0042OpenapiJobInfoResp()
        if include_optional:
            return V0042OpenapiJobInfoResp(
                jobs = [
                    slurmrestpy.models.v0/0/42_job_info.v0.0.42_job_info(
                        account = '',
                        accrue_time = slurmrestpy.models.v0/0/42_uint64_no_val_struct.v0.0.42_uint64_no_val_struct(
                            set = True,
                            infinite = True,
                            number = 56, ),
                        admin_comment = '',
                        allocating_node = '',
                        array_job_id = slurmrestpy.models.v0/0/42_uint32_no_val_struct.v0.0.42_uint32_no_val_struct(
                            set = True,
                            infinite = True,
                            number = 56, ),
                        array_task_id = slurmrestpy.models.v0/0/42_uint32_no_val_struct.v0.0.42_uint32_no_val_struct(
                            set = True,
                            infinite = True,
                            number = 56, ),
                        array_max_tasks = ,
                        array_task_string = '',
                        association_id = 56,
                        batch_features = '',
                        batch_flag = True,
                        batch_host = '',
                        flags = [
                            'KILL_INVALID_DEPENDENCY'
                            ],
                        burst_buffer = '',
                        burst_buffer_state = '',
                        cluster = '',
                        cluster_features = '',
                        command = '',
                        comment = '',
                        container = '',
                        container_id = '',
                        contiguous = True,
                        core_spec = 56,
                        thread_spec = 56,
                        cores_per_socket = slurmrestpy.models.v0/0/42_uint16_no_val_struct.v0.0.42_uint16_no_val_struct(
                            set = True,
                            infinite = True,
                            number = 56, ),
                        billable_tres = slurmrestpy.models.v0/0/42_float64_no_val_struct.v0.0.42_float64_no_val_struct(
                            set = True,
                            infinite = True,
                            number = 1.337, ),
                        cpus_per_task = slurmrestpy.models.v0/0/42_uint16_no_val_struct.v0.0.42_uint16_no_val_struct(
                            set = True,
                            infinite = True,
                            number = 56, ),
                        cpu_frequency_minimum = ,
                        cpu_frequency_maximum = ,
                        cpu_frequency_governor = ,
                        cpus_per_tres = '',
                        cron = '',
                        deadline = slurmrestpy.models.v0/0/42_uint64_no_val_struct.v0.0.42_uint64_no_val_struct(
                            set = True,
                            infinite = True,
                            number = 56, ),
                        delay_boot = ,
                        dependency = '',
                        derived_exit_code = slurmrestpy.models.v0/0/42_process_exit_code_verbose.v0.0.42_process_exit_code_verbose(
                            status = [
                                'INVALID'
                                ],
                            return_code = ,
                            signal = slurmrestpy.models.v0_0_42_process_exit_code_verbose_signal.v0_0_42_process_exit_code_verbose_signal(
                                id = ,
                                name = '', ), ),
                        eligible_time = ,
                        end_time = ,
                        excluded_nodes = '',
                        exit_code = slurmrestpy.models.v0/0/42_process_exit_code_verbose.v0.0.42_process_exit_code_verbose(
                            status = [
                                'INVALID'
                                ], ),
                        extra = '',
                        failed_node = '',
                        features = '',
                        federation_origin = '',
                        federation_siblings_active = '',
                        federation_siblings_viable = '',
                        gres_detail = [
                            ''
                            ],
                        group_id = 56,
                        group_name = '',
                        het_job_id = ,
                        het_job_id_set = '',
                        het_job_offset = ,
                        job_id = 56,
                        job_resources = slurmrestpy.models.v0/0/42_job_res.v0.0.42_job_res(
                            select_type = [
                                'CPU'
                                ],
                            nodes = slurmrestpy.models.v0_0_42_job_res_nodes.v0_0_42_job_res_nodes(
                                count = 56,
                                list = '',
                                whole = True,
                                allocation = [
                                    slurmrestpy.models.v0/0/42_job_res_node.v0.0.42_job_res_node(
                                        index = 56,
                                        name = '',
                                        cpus = slurmrestpy.models.v0_0_42_job_res_node_cpus.v0_0_42_job_res_node_cpus(
                                            count = 56,
                                            used = 56, ),
                                        memory = slurmrestpy.models.v0_0_42_job_res_node_memory.v0_0_42_job_res_node_memory(
                                            used = 56,
                                            allocated = 56, ),
                                        sockets = [
                                            slurmrestpy.models.v0/0/42_job_res_socket.v0.0.42_job_res_socket(
                                                index = 56,
                                                cores = [
                                                    slurmrestpy.models.v0/0/42_job_res_core.v0.0.42_job_res_core(
                                                        index = 56,
                                                        status = [
                                                            'INVALID'
                                                            ], )
                                                    ], )
                                            ], )
                                    ], ),
                            cpus = 56,
                            threads_per_core = , ),
                        job_size_str = [
                            ''
                            ],
                        job_state = [
                            'PENDING'
                            ],
                        last_sched_evaluation = ,
                        licenses = '',
                        mail_type = [
                            'BEGIN'
                            ],
                        mail_user = '',
                        max_cpus = ,
                        max_nodes = ,
                        mcs_label = '',
                        memory_per_tres = '',
                        name = '',
                        network = '',
                        nodes = '',
                        nice = 56,
                        tasks_per_core = ,
                        tasks_per_tres = ,
                        tasks_per_node = ,
                        tasks_per_socket = ,
                        tasks_per_board = ,
                        cpus = ,
                        node_count = ,
                        tasks = ,
                        partition = '',
                        prefer = '',
                        memory_per_cpu = ,
                        memory_per_node = ,
                        minimum_cpus_per_node = ,
                        minimum_tmp_disk_per_node = ,
                        power = slurmrestpy.models.v0_0_42_job_info_power.v0_0_42_job_info_power(),
                        preempt_time = ,
                        preemptable_time = ,
                        pre_sus_time = ,
                        hold = True,
                        priority = ,
                        priority_by_partition = [
                            slurmrestpy.models.v0/0/42_part_prio.v0.0.42_part_prio(
                                partition = '', )
                            ],
                        profile = [
                            'NOT_SET'
                            ],
                        qos = '',
                        reboot = True,
                        required_nodes = '',
                        required_switches = 56,
                        requeue = True,
                        resize_time = ,
                        restart_cnt = 56,
                        resv_name = '',
                        scheduled_nodes = '',
                        selinux_context = '',
                        shared = [
                            'none'
                            ],
                        sockets_per_board = 56,
                        sockets_per_node = ,
                        start_time = ,
                        state_description = '',
                        state_reason = '',
                        standard_error = '',
                        standard_input = '',
                        standard_output = '',
                        submit_time = ,
                        suspend_time = ,
                        system_comment = '',
                        time_limit = ,
                        time_minimum = ,
                        threads_per_core = ,
                        tres_bind = '',
                        tres_freq = '',
                        tres_per_job = '',
                        tres_per_node = '',
                        tres_per_socket = '',
                        tres_per_task = '',
                        tres_req_str = '',
                        tres_alloc_str = '',
                        user_id = 56,
                        user_name = '',
                        maximum_switch_wait_time = 56,
                        wckey = '',
                        current_working_directory = '', )
                    ],
                last_backfill = slurmrestpy.models.v0/0/42_uint64_no_val_struct.v0.0.42_uint64_no_val_struct(
                    set = True,
                    infinite = True,
                    number = 56, ),
                last_update = slurmrestpy.models.v0/0/42_uint64_no_val_struct.v0.0.42_uint64_no_val_struct(
                    set = True,
                    infinite = True,
                    number = 56, ),
                meta = slurmrestpy.models.v0/0/42_openapi_meta.v0.0.42_openapi_meta(
                    plugin = slurmrestpy.models.v0_0_42_openapi_meta_plugin.v0_0_42_openapi_meta_plugin(
                        type = '',
                        name = '',
                        data_parser = '',
                        accounting_storage = '', ),
                    client = slurmrestpy.models.v0_0_42_openapi_meta_client.v0_0_42_openapi_meta_client(
                        source = '',
                        user = '',
                        group = '', ),
                    command = [
                        ''
                        ],
                    slurm = slurmrestpy.models.v0_0_42_openapi_meta_slurm.v0_0_42_openapi_meta_slurm(
                        version = slurmrestpy.models.v0_0_42_openapi_meta_slurm_version.v0_0_42_openapi_meta_slurm_version(
                            major = '',
                            micro = '',
                            minor = '', ),
                        release = '',
                        cluster = '', ), ),
                errors = [
                    slurmrestpy.models.v0/0/42_openapi_error.v0.0.42_openapi_error(
                        description = '',
                        error_number = 56,
                        error = '',
                        source = '', )
                    ],
                warnings = [
                    slurmrestpy.models.v0/0/42_openapi_warning.v0.0.42_openapi_warning(
                        description = '',
                        source = '', )
                    ]
            )
        else:
            return V0042OpenapiJobInfoResp(
                jobs = [
                    slurmrestpy.models.v0/0/42_job_info.v0.0.42_job_info(
                        account = '',
                        accrue_time = slurmrestpy.models.v0/0/42_uint64_no_val_struct.v0.0.42_uint64_no_val_struct(
                            set = True,
                            infinite = True,
                            number = 56, ),
                        admin_comment = '',
                        allocating_node = '',
                        array_job_id = slurmrestpy.models.v0/0/42_uint32_no_val_struct.v0.0.42_uint32_no_val_struct(
                            set = True,
                            infinite = True,
                            number = 56, ),
                        array_task_id = slurmrestpy.models.v0/0/42_uint32_no_val_struct.v0.0.42_uint32_no_val_struct(
                            set = True,
                            infinite = True,
                            number = 56, ),
                        array_max_tasks = ,
                        array_task_string = '',
                        association_id = 56,
                        batch_features = '',
                        batch_flag = True,
                        batch_host = '',
                        flags = [
                            'KILL_INVALID_DEPENDENCY'
                            ],
                        burst_buffer = '',
                        burst_buffer_state = '',
                        cluster = '',
                        cluster_features = '',
                        command = '',
                        comment = '',
                        container = '',
                        container_id = '',
                        contiguous = True,
                        core_spec = 56,
                        thread_spec = 56,
                        cores_per_socket = slurmrestpy.models.v0/0/42_uint16_no_val_struct.v0.0.42_uint16_no_val_struct(
                            set = True,
                            infinite = True,
                            number = 56, ),
                        billable_tres = slurmrestpy.models.v0/0/42_float64_no_val_struct.v0.0.42_float64_no_val_struct(
                            set = True,
                            infinite = True,
                            number = 1.337, ),
                        cpus_per_task = slurmrestpy.models.v0/0/42_uint16_no_val_struct.v0.0.42_uint16_no_val_struct(
                            set = True,
                            infinite = True,
                            number = 56, ),
                        cpu_frequency_minimum = ,
                        cpu_frequency_maximum = ,
                        cpu_frequency_governor = ,
                        cpus_per_tres = '',
                        cron = '',
                        deadline = slurmrestpy.models.v0/0/42_uint64_no_val_struct.v0.0.42_uint64_no_val_struct(
                            set = True,
                            infinite = True,
                            number = 56, ),
                        delay_boot = ,
                        dependency = '',
                        derived_exit_code = slurmrestpy.models.v0/0/42_process_exit_code_verbose.v0.0.42_process_exit_code_verbose(
                            status = [
                                'INVALID'
                                ],
                            return_code = ,
                            signal = slurmrestpy.models.v0_0_42_process_exit_code_verbose_signal.v0_0_42_process_exit_code_verbose_signal(
                                id = ,
                                name = '', ), ),
                        eligible_time = ,
                        end_time = ,
                        excluded_nodes = '',
                        exit_code = slurmrestpy.models.v0/0/42_process_exit_code_verbose.v0.0.42_process_exit_code_verbose(
                            status = [
                                'INVALID'
                                ], ),
                        extra = '',
                        failed_node = '',
                        features = '',
                        federation_origin = '',
                        federation_siblings_active = '',
                        federation_siblings_viable = '',
                        gres_detail = [
                            ''
                            ],
                        group_id = 56,
                        group_name = '',
                        het_job_id = ,
                        het_job_id_set = '',
                        het_job_offset = ,
                        job_id = 56,
                        job_resources = slurmrestpy.models.v0/0/42_job_res.v0.0.42_job_res(
                            select_type = [
                                'CPU'
                                ],
                            nodes = slurmrestpy.models.v0_0_42_job_res_nodes.v0_0_42_job_res_nodes(
                                count = 56,
                                list = '',
                                whole = True,
                                allocation = [
                                    slurmrestpy.models.v0/0/42_job_res_node.v0.0.42_job_res_node(
                                        index = 56,
                                        name = '',
                                        cpus = slurmrestpy.models.v0_0_42_job_res_node_cpus.v0_0_42_job_res_node_cpus(
                                            count = 56,
                                            used = 56, ),
                                        memory = slurmrestpy.models.v0_0_42_job_res_node_memory.v0_0_42_job_res_node_memory(
                                            used = 56,
                                            allocated = 56, ),
                                        sockets = [
                                            slurmrestpy.models.v0/0/42_job_res_socket.v0.0.42_job_res_socket(
                                                index = 56,
                                                cores = [
                                                    slurmrestpy.models.v0/0/42_job_res_core.v0.0.42_job_res_core(
                                                        index = 56,
                                                        status = [
                                                            'INVALID'
                                                            ], )
                                                    ], )
                                            ], )
                                    ], ),
                            cpus = 56,
                            threads_per_core = , ),
                        job_size_str = [
                            ''
                            ],
                        job_state = [
                            'PENDING'
                            ],
                        last_sched_evaluation = ,
                        licenses = '',
                        mail_type = [
                            'BEGIN'
                            ],
                        mail_user = '',
                        max_cpus = ,
                        max_nodes = ,
                        mcs_label = '',
                        memory_per_tres = '',
                        name = '',
                        network = '',
                        nodes = '',
                        nice = 56,
                        tasks_per_core = ,
                        tasks_per_tres = ,
                        tasks_per_node = ,
                        tasks_per_socket = ,
                        tasks_per_board = ,
                        cpus = ,
                        node_count = ,
                        tasks = ,
                        partition = '',
                        prefer = '',
                        memory_per_cpu = ,
                        memory_per_node = ,
                        minimum_cpus_per_node = ,
                        minimum_tmp_disk_per_node = ,
                        power = slurmrestpy.models.v0_0_42_job_info_power.v0_0_42_job_info_power(),
                        preempt_time = ,
                        preemptable_time = ,
                        pre_sus_time = ,
                        hold = True,
                        priority = ,
                        priority_by_partition = [
                            slurmrestpy.models.v0/0/42_part_prio.v0.0.42_part_prio(
                                partition = '', )
                            ],
                        profile = [
                            'NOT_SET'
                            ],
                        qos = '',
                        reboot = True,
                        required_nodes = '',
                        required_switches = 56,
                        requeue = True,
                        resize_time = ,
                        restart_cnt = 56,
                        resv_name = '',
                        scheduled_nodes = '',
                        selinux_context = '',
                        shared = [
                            'none'
                            ],
                        sockets_per_board = 56,
                        sockets_per_node = ,
                        start_time = ,
                        state_description = '',
                        state_reason = '',
                        standard_error = '',
                        standard_input = '',
                        standard_output = '',
                        submit_time = ,
                        suspend_time = ,
                        system_comment = '',
                        time_limit = ,
                        time_minimum = ,
                        threads_per_core = ,
                        tres_bind = '',
                        tres_freq = '',
                        tres_per_job = '',
                        tres_per_node = '',
                        tres_per_socket = '',
                        tres_per_task = '',
                        tres_req_str = '',
                        tres_alloc_str = '',
                        user_id = 56,
                        user_name = '',
                        maximum_switch_wait_time = 56,
                        wckey = '',
                        current_working_directory = '', )
                    ],
                last_backfill = slurmrestpy.models.v0/0/42_uint64_no_val_struct.v0.0.42_uint64_no_val_struct(
                    set = True,
                    infinite = True,
                    number = 56, ),
                last_update = slurmrestpy.models.v0/0/42_uint64_no_val_struct.v0.0.42_uint64_no_val_struct(
                    set = True,
                    infinite = True,
                    number = 56, ),
        )
        """

    def testV0042OpenapiJobInfoResp(self):
        """Test V0042OpenapiJobInfoResp"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
