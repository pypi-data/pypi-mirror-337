# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/development/cicd/templates/
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Python.gitlab-ci.yml

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:latest

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# https://pip.pypa.io/en/stable/topics/caching/
cache:
  paths:
    - .cache/pip

before_script:
  - python --version ; pip --version # For debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate

build_job:
  stage: build
  script:
    - pip install -U build
    - python -m build
  artifacts:
    paths:
      - "dist/"

test:
  stage: test
  script:
    - pip install --editable ".[test]"
    - python -m unittest discover -s src/noopy -v
    # - tox -e py,ruff

publish_job:
  stage: deploy
  id_tokens:
    PYPI_ID_TOKEN:
      # Use "testpypi" if uploading to TestPyPI
      aud: pypi
  script:
    # Install dependencies
    - pip install -U twine
    # Upload to PyPI, add "--repository testpypi" if uploading to TestPyPI
    # With no token specified, twine will use Trusted Publishing
    - twine upload dist/*
  rules:
    - if: $CI_COMMIT_TAG
# run:
#   script:
#     - pip install .
#     # run the command here
#   artifacts:
#     paths:
#       - build/*

# pages:
#   script:
#     - pip install sphinx sphinx-rtd-theme
#     - cd doc
#     - make html
#     - mv build/html/ ../public/
#   artifacts:
#     paths:
#       - public
#   rules:
#     - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

# deploy:
#   stage: deploy
#   script: echo "Define your deployment script!"
#   environment: production
