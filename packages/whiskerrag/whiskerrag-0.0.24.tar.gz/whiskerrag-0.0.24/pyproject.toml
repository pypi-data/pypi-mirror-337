[tool.poetry]
name = "whiskerrag"
version = "0.0.17"
description = "A utility package for RAG operations"
authors = ["petercat.ai <antd.antgroup@gmail.com>"]
readme = "README.md"
packages = [{include = "whiskerrag_utils", from = "src"},
            {include = "whiskerrag_types", from = "src"},
            {include = "whiskerrag_client", from = "src"}]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

[tool.poetry.dependencies]
python = ">=3.8.1,<4.0"
langchain = ">=0.2.12"
langchain-community = ">=0.2.11"
langchain-core = ">=0.2.28"
langchain-openai = ">=0.1.20"
pydantic = ">=2.0.0,<3.0.0"
PyGithub = "2.3.0"
python-dateutil = ">=2.8.2"
requests = ">=2.32.3"
typing-extensions = ">=4.12.2"
urllib3 = ">=1.25.3,<3.0.0"

[tool.poetry.group.dev.dependencies]
pytest = ">=8.3.4"
pytest-cov = ">=4.1.0"
black = ">=23.7.0"
isort = ">=5.12.0"
mypy = ">=1.4.1"
pre-commit = ">=3.3.3"
flake8 = ">=6.1.0"
wheel = ">=0.37.0"
setuptools = ">=42.0.0"
twine = ">=3.4.1"
build = ">=0.7.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.9"
mypy_path = "src"
files = "src"
namespace_packages = true
explicit_package_bases = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
ignore_missing_imports = false
follow_imports = "silent"
show_error_codes = true
exclude = [
    "tests/",
    "docs/",
    "examples/"
]

[tool.pytest]
pythonpath = ["src"]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "-ra -q -v -s"

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError"
]
ignore_errors = true
source = ["src"]
omit = [
    "tests/*",
    "setup.py",
    "scripts/*",
    "workflows/*"
]

[tool.coverage.run]
branch = true
source = ["src"]
