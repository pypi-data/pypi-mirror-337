# coding: utf-8

"""
    WeGlide

    Quantifying airsports

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from weglide_client.models.flight_rank_list import FlightRankList

class TestFlightRankList(unittest.TestCase):
    """FlightRankList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FlightRankList:
        """Test FlightRankList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FlightRankList`
        """
        model = FlightRankList()
        if include_optional:
            return FlightRankList(
                id = 56,
                user = weglide_client.models.user_with_image.UserWithImage(
                    id = 56, 
                    name = '', 
                    image = '', 
                    badge = True, ),
                co_user = weglide_client.models.user_with_image.UserWithImage(
                    id = 56, 
                    name = '', 
                    image = '', 
                    badge = True, ),
                co_user_name = '',
                custom_takeoff_airport = weglide_client.models.custom_takeoff_airport.Custom Takeoff Airport(),
                aircraft = weglide_client.models.aircraft_base.AircraftBase(
                    id = 56, 
                    name = '', ),
                club = weglide_client.models.club_flight.ClubFlight(
                    id = 56, 
                    name = '', ),
                media_info = '',
                takeoff_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                landing_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                scoring_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                bbox = [
                    1.337
                    ],
                junior = True,
                dmst_index = 56,
                story_var_size = [
                    ''
                    ],
                rank = True,
                contest = weglide_client.models.flight_contest.FlightContest(
                    points = 1.337, 
                    distance = 1.337, 
                    speed = 1.337, )
            )
        else:
            return FlightRankList(
                id = 56,
                user = weglide_client.models.user_with_image.UserWithImage(
                    id = 56, 
                    name = '', 
                    image = '', 
                    badge = True, ),
                custom_takeoff_airport = weglide_client.models.custom_takeoff_airport.Custom Takeoff Airport(),
                takeoff_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                landing_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                scoring_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                bbox = [
                    1.337
                    ],
                junior = True,
                story_var_size = [
                    ''
                    ],
                rank = True,
        )
        """

    def testFlightRankList(self):
        """Test FlightRankList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
