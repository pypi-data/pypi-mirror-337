[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "reten-service-core"
version = "0.1.0"
description = "Core library providing common components and utilities for Reten microservices"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
authors = [{ name = "Reten", email = "dev@reten.ai" }]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "fastapi>=0.100.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "python-jose[cryptography]>=3.3.0", # Para JWT
    "google-cloud-bigquery>=3.11.0",
    "redis>=5.0.0",
    "structlog>=23.1.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "httpx>=0.24.0",            # Para testing de FastAPI
    "pydantic-settings>=2.0.0", # Para configuraciÃ³n en tests

    # Linting y Type Checking
    "ruff>=0.1.5",

    # Development Tools
    "pre-commit>=3.3.0",
    "uvicorn>=0.23.0",
]

[tool.hatch.build.targets.wheel]
packages = ["src/reten_service_core"]

[tool.ruff]
line-length = 100
target-version = "py310"
extend-include = ["*.ipynb"]
fix = true
unsafe-fixes = false

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint]
select = ["F", "E", "W", "I", "N", "B", "A", "C4", "ISC", "PT", "UP", "SIM"]
ignore = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["F401", "F403", "F405", "RUF100"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=reten_service_core --cov-report=term-missing"
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["reten_service_core"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]
show_missing = true
fail_under = 90
