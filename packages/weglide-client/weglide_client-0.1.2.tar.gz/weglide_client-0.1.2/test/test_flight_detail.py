# coding: utf-8

"""
    WeGlide

    Quantifying airsports

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from weglide_client.models.flight_detail import FlightDetail

class TestFlightDetail(unittest.TestCase):
    """FlightDetail unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FlightDetail:
        """Test FlightDetail
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FlightDetail`
        """
        model = FlightDetail()
        if include_optional:
            return FlightDetail(
                id = 56,
                user = weglide_client.models.user_flight_detail.UserFlightDetail(
                    id = 56, 
                    name = '', 
                    image = '', 
                    badge = True, 
                    open_in_seeyou = True, 
                    comments_allowed = True, ),
                co_user = weglide_client.models.user_with_image.UserWithImage(
                    id = 56, 
                    name = '', 
                    image = '', 
                    badge = True, ),
                co_user_name = '',
                custom_takeoff_airport = weglide_client.models.custom_takeoff_airport.Custom Takeoff Airport(),
                aircraft = weglide_client.models.aircraft_flight.AircraftFlight(
                    id = 56, 
                    name = '', 
                    wingarea = 1.337, 
                    double_seater = True, 
                    kind = '', 
                    sc_class = '', 
                    encoded_coeffs = [
                        1.337
                        ], 
                    min_speed_m_s = 1.337, 
                    reference_mass = 56, 
                    empty_mass = 56, 
                    mtow = 56, ),
                club = weglide_client.models.club_flight.ClubFlight(
                    id = 56, 
                    name = '', ),
                media_info = '',
                takeoff_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                landing_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                scoring_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                bbox = [
                    1.337
                    ],
                junior = True,
                dmst_index = 56,
                igc_file = weglide_client.models.igc_file_flight.IGCFileFlight(
                    id = 56, 
                    file = '', 
                    valid = 56, 
                    errors = [
                        null
                        ], ),
                landing_airport = weglide_client.models.airport_flight.AirportFlight(
                    id = 56, 
                    name = '', ),
                airspace_violation = [
                    weglide_client.models.airspace_violation.AirspaceViolation(
                        id = 56, 
                        violation = True, 
                        airspace_openaip_id = '', 
                        airspace_style = '', 
                        airspace_name = '', 
                        airspace_max_alt = 56, 
                        airspace_min_alt = 56, 
                        intervals = [
                            datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
                            ], 
                        display_intervals = [
                            datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
                            ], 
                        total_seconds = 1.337, )
                    ],
                sorted_contest = [
                    None
                    ],
                segment_score = [
                    weglide_client.models.segment_score_flight.SegmentScoreFlight(
                        id = 56, 
                        segment = weglide_client.models.segment_flight.SegmentFlight(
                            id = 56, 
                            name = '', 
                            distance = 1.337, 
                            start_point = [
                                null
                                ], 
                            end_point = [
                                null
                                ], ), 
                        points = 1.337, 
                        raw_speed = 1.337, 
                        corrected_speed = 1.337, 
                        start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        start_alt = 56, 
                        end_alt = 56, 
                        upside_down = True, 
                        direction = 56, 
                        rank = 56, 
                        personal_rank = 56, 
                        min_alt = 56, 
                        max_alt = 56, 
                        wind_speed = 1.337, 
                        wind_direction = 56, )
                    ],
                task_score = [
                    weglide_client.models.task_score_flight.TaskScoreFlight(
                        id = 56, 
                        flight_id = 56, 
                        distance = 1.337, 
                        points = 1.337, 
                        c_points = 1.337, 
                        gp_points = 56, 
                        speed = 1.337, 
                        start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        start_alt = 56, 
                        end_alt = 56, 
                        declared = True, 
                        rank = 56, 
                        personal_rank = 56, 
                        wind_speed = 1.337, 
                        wind_direction = 56, 
                        path = [
                            datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
                            ], 
                        task = weglide_client.models.task_flight.TaskFlight(
                            id = 56, 
                            name = '', 
                            description = '', 
                            distance = 1.337, 
                            point_features = [
                                null
                                ], 
                            ruleset = 'D', 
                            scoring_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ), )
                    ],
                meeting = [
                    None
                    ],
                achievement = [
                    weglide_client.models.achievement_with_badge_no_user.AchievementWithBadgeNoUser(
                        id = 56, 
                        badge_id = '', 
                        points = 56, 
                        flight_id = 56, 
                        value = 1.337, 
                        user_id = 56, 
                        badge = weglide_client.models.badge.Badge(
                            id = '', 
                            name = '', 
                            logo = '', 
                            description = weglide_client.models.description.Description(), 
                            points = [
                                56
                                ], 
                            values = [
                                1.337
                                ], ), )
                    ],
                task = weglide_client.models.task_flight.TaskFlight(
                    id = 56, 
                    name = '', 
                    kind = '', 
                    penalized_distance = 1.337, 
                    min_distance = 1.337, 
                    max_distance = 1.337, 
                    start_on_leg = True, 
                    closed = True, 
                    bbox = [
                        1.337
                        ], 
                    stars = 56, 
                    from_igcfile = True, 
                    user = weglide_client.models.task_user.TaskUser(
                        id = 56, 
                        name = '', ), 
                    ruleset = 'D', 
                    private = True, 
                    point_features = [
                        null
                        ], ),
                task_ruleset = 'D',
                edit_allowed_until = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                valid = True,
                sc_class = '',
                comment = '',
                audio_url = '',
                score_club_class = True,
                analysed = True,
                active_errors = [
                    null
                    ],
                notes = '',
                registration = '',
                competition_id = '',
                total_seconds = 56,
                scoring_times = [
                    datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
                    ],
                engine_scoring_times = [
                    datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
                    ],
                fes_scoring_times = [
                    datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
                    ],
                fes_energy_total = 1.337,
                fes_battery_takeoff = 1.337,
                fes_battery_landing = 1.337,
                fes_max_power = 1.337,
                mass = 56,
                launch_kind = '',
                launch_gain = 56,
                launch_time = 56,
                launch_vario = 1.337,
                takeoff_distance = 56,
                ground_roll_distance = 56,
                task_achieved = True,
                takeoff_point = weglide_client.models.takeoff_point.Takeoff Point(),
                task_result = 56
            )
        else:
            return FlightDetail(
                id = 56,
                user = weglide_client.models.user_flight_detail.UserFlightDetail(
                    id = 56, 
                    name = '', 
                    image = '', 
                    badge = True, 
                    open_in_seeyou = True, 
                    comments_allowed = True, ),
                custom_takeoff_airport = weglide_client.models.custom_takeoff_airport.Custom Takeoff Airport(),
                takeoff_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                landing_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                scoring_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                bbox = [
                    1.337
                    ],
                junior = True,
                igc_file = weglide_client.models.igc_file_flight.IGCFileFlight(
                    id = 56, 
                    file = '', 
                    valid = 56, 
                    errors = [
                        null
                        ], ),
                airspace_violation = [
                    weglide_client.models.airspace_violation.AirspaceViolation(
                        id = 56, 
                        violation = True, 
                        airspace_openaip_id = '', 
                        airspace_style = '', 
                        airspace_name = '', 
                        airspace_max_alt = 56, 
                        airspace_min_alt = 56, 
                        intervals = [
                            datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
                            ], 
                        display_intervals = [
                            datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
                            ], 
                        total_seconds = 1.337, )
                    ],
                sorted_contest = [
                    None
                    ],
                segment_score = [
                    weglide_client.models.segment_score_flight.SegmentScoreFlight(
                        id = 56, 
                        segment = weglide_client.models.segment_flight.SegmentFlight(
                            id = 56, 
                            name = '', 
                            distance = 1.337, 
                            start_point = [
                                null
                                ], 
                            end_point = [
                                null
                                ], ), 
                        points = 1.337, 
                        raw_speed = 1.337, 
                        corrected_speed = 1.337, 
                        start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        start_alt = 56, 
                        end_alt = 56, 
                        upside_down = True, 
                        direction = 56, 
                        rank = 56, 
                        personal_rank = 56, 
                        min_alt = 56, 
                        max_alt = 56, 
                        wind_speed = 1.337, 
                        wind_direction = 56, )
                    ],
                task_score = [
                    weglide_client.models.task_score_flight.TaskScoreFlight(
                        id = 56, 
                        flight_id = 56, 
                        distance = 1.337, 
                        points = 1.337, 
                        c_points = 1.337, 
                        gp_points = 56, 
                        speed = 1.337, 
                        start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        start_alt = 56, 
                        end_alt = 56, 
                        declared = True, 
                        rank = 56, 
                        personal_rank = 56, 
                        wind_speed = 1.337, 
                        wind_direction = 56, 
                        path = [
                            datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
                            ], 
                        task = weglide_client.models.task_flight.TaskFlight(
                            id = 56, 
                            name = '', 
                            description = '', 
                            distance = 1.337, 
                            point_features = [
                                null
                                ], 
                            ruleset = 'D', 
                            scoring_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ), )
                    ],
                meeting = [
                    None
                    ],
                achievement = [
                    weglide_client.models.achievement_with_badge_no_user.AchievementWithBadgeNoUser(
                        id = 56, 
                        badge_id = '', 
                        points = 56, 
                        flight_id = 56, 
                        value = 1.337, 
                        user_id = 56, 
                        badge = weglide_client.models.badge.Badge(
                            id = '', 
                            name = '', 
                            logo = '', 
                            description = weglide_client.models.description.Description(), 
                            points = [
                                56
                                ], 
                            values = [
                                1.337
                                ], ), )
                    ],
                edit_allowed_until = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                valid = True,
                sc_class = '',
                score_club_class = True,
                analysed = True,
                total_seconds = 56,
                task_achieved = True,
                takeoff_point = weglide_client.models.takeoff_point.Takeoff Point(),
        )
        """

    def testFlightDetail(self):
        """Test FlightDetail"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
