# coding: utf-8

"""
    WeGlide

    Quantifying airsports

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self


class RuleSet(str, Enum):
    """
    DMST:     Start and finish cylinder (1km radius)     Symmetrical quadrants with infinite length  GRAND_PRIX:     Startline (2.5km radius) and finish line (0.25km radius)     Turnpoint cylinder of 0.5 radius  AAT:     Startline (5km radius) and finish cylinder (3km radius)      turnpoint cylinder of potentially bigger size  UK:     Start- and finish line (5km radius)     Keyhole sectors (500m inner radius, 20km outer radius)     1km penalty if turning in cylinder  FAI:     Startline (5km radius) and finish cylinder (3km radius)     Keyhole sectors (500m inner radius, 20km outer radius)  Not shown in frontend planner:  FRANCE:     Start- and finish line (0.5km radius)     Keyhole sectors (500m inner radius, 20km outer radius)     1km penalty if turning in cylinder  POLAND:     Start line (5km radius), finish cylinder (2km radius)     Keyhole sectors (500m inner radius, 20km outer radius)     1km penalty if turning in cylinder  For the future:  US:     Startcylinder (5miles), finish cylinder (5 miles),     Keyhole sectors (1 mile inner radius, 20km outer radius)     1 mile penalty if turning in cylinder
    """

    """
    allowed enum values
    """
    D = 'D'
    F = 'F'
    AA = 'AA'
    US = 'US'
    GP = 'GP'
    P = 'P'
    FR = 'FR'
    UK = 'UK'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of RuleSet from a JSON string"""
        return cls(json.loads(json_str))


