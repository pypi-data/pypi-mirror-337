# coding: utf-8

"""
Slurm REST API

API to access and control Slurm

The version of the OpenAPI document: Slurm-24.11.1&openapi/slurmdbd&openapi/slurmctld
Contact: sales@schedmd.com
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from slurmrestpy.models.v0041_openapi_slurmdbd_config_resp_associations_inner_max import (
    V0041OpenapiSlurmdbdConfigRespAssociationsInnerMax,
)


class TestV0041OpenapiSlurmdbdConfigRespAssociationsInnerMax(unittest.TestCase):
    """V0041OpenapiSlurmdbdConfigRespAssociationsInnerMax unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(
        self, include_optional
    ) -> V0041OpenapiSlurmdbdConfigRespAssociationsInnerMax:
        """Test V0041OpenapiSlurmdbdConfigRespAssociationsInnerMax
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `V0041OpenapiSlurmdbdConfigRespAssociationsInnerMax`
        """
        model = V0041OpenapiSlurmdbdConfigRespAssociationsInnerMax()
        if include_optional:
            return V0041OpenapiSlurmdbdConfigRespAssociationsInnerMax(
                jobs = slurmrestpy.models.v0_0_41_openapi_slurmdbd_config_resp_associations_inner_max_jobs.v0_0_41_openapi_slurmdbd_config_resp_associations_inner_max_jobs(
                    per = slurmrestpy.models.v0_0_41_openapi_slurmdbd_config_resp_associations_inner_max_jobs_per.v0_0_41_openapi_slurmdbd_config_resp_associations_inner_max_jobs_per(
                        count = slurmrestpy.models.v0_0_41_openapi_slurmdbd_config_resp_qos_inner_limits_max_active_jobs_count.v0_0_41_openapi_slurmdbd_config_resp_qos_inner_limits_max_active_jobs_count(
                            set = True,
                            infinite = True,
                            number = 56, ),
                        accruing = slurmrestpy.models.v0_0_41_openapi_slurmdbd_config_resp_qos_inner_limits_max_active_jobs_accruing.v0_0_41_openapi_slurmdbd_config_resp_qos_inner_limits_max_active_jobs_accruing(
                            set = True,
                            infinite = True,
                            number = 56, ),
                        submitted = slurmrestpy.models.v0_0_41_openapi_slurmdbd_config_resp_associations_inner_max_jobs_per_submitted.v0_0_41_openapi_slurmdbd_config_resp_associations_inner_max_jobs_per_submitted(
                            set = True,
                            infinite = True,
                            number = 56, ),
                        wall_clock = slurmrestpy.models.v0_0_41_openapi_slurmdbd_config_resp_qos_inner_limits_max_wall_clock_per_job.v0_0_41_openapi_slurmdbd_config_resp_qos_inner_limits_max_wall_clock_per_job(
                            set = True,
                            infinite = True,
                            number = 56, ), ),
                    active = slurmrestpy.models.v0_0_41_openapi_slurmdbd_config_resp_associations_inner_max_jobs_active.v0_0_41_openapi_slurmdbd_config_resp_associations_inner_max_jobs_active(
                        set = True,
                        infinite = True,
                        number = 56, ),
                    accruing = slurmrestpy.models.v0_0_41_openapi_slurmdbd_config_resp_associations_inner_max_jobs_accruing.v0_0_41_openapi_slurmdbd_config_resp_associations_inner_max_jobs_accruing(
                        set = True,
                        infinite = True,
                        number = 56, ),
                    total = slurmrestpy.models.v0_0_41_openapi_slurmdbd_config_resp_associations_inner_max_jobs_total.v0_0_41_openapi_slurmdbd_config_resp_associations_inner_max_jobs_total(
                        set = True,
                        infinite = True,
                        number = 56, ), ),
                tres = slurmrestpy.models.v0_0_41_openapi_slurmdbd_config_resp_associations_inner_max_tres.v0_0_41_openapi_slurmdbd_config_resp_associations_inner_max_tres(
                    total = [
                        slurmrestpy.models.v0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_tres_requested_max_inner.v0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_tres_requested_max_inner(
                            type = '',
                            name = '',
                            id = 56,
                            count = 56, )
                        ],
                    group = slurmrestpy.models.v0_0_41_openapi_slurmdbd_config_resp_associations_inner_max_tres_group.v0_0_41_openapi_slurmdbd_config_resp_associations_inner_max_tres_group(
                        minutes = [
                            slurmrestpy.models.v0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_tres_requested_max_inner.v0_0_41_openapi_slurmdbd_jobs_resp_jobs_inner_steps_inner_tres_requested_max_inner(
                                type = '',
                                name = '',
                                id = 56,
                                count = 56, )
                            ],
                        active = [

                            ], ),
                    minutes = slurmrestpy.models.v0_0_41_openapi_slurmdbd_config_resp_associations_inner_max_tres_minutes.v0_0_41_openapi_slurmdbd_config_resp_associations_inner_max_tres_minutes(
                        per = slurmrestpy.models.v0_0_41_openapi_slurmdbd_config_resp_associations_inner_max_tres_minutes_per.v0_0_41_openapi_slurmdbd_config_resp_associations_inner_max_tres_minutes_per(
                            job = [

                                ], ), ),
                    per = slurmrestpy.models.v0_0_41_openapi_slurmdbd_config_resp_associations_inner_max_tres_per.v0_0_41_openapi_slurmdbd_config_resp_associations_inner_max_tres_per(
                        node = [

                            ], ), ),
                per = slurmrestpy.models.v0_0_41_openapi_slurmdbd_config_resp_associations_inner_max_per.v0_0_41_openapi_slurmdbd_config_resp_associations_inner_max_per(
                    account = slurmrestpy.models.v0_0_41_openapi_slurmdbd_config_resp_associations_inner_max_per_account.v0_0_41_openapi_slurmdbd_config_resp_associations_inner_max_per_account(
                        wall_clock = slurmrestpy.models.v0_0_41_openapi_slurmdbd_config_resp_qos_inner_limits_max_wall_clock_per_qos.v0_0_41_openapi_slurmdbd_config_resp_qos_inner_limits_max_wall_clock_per_qos(
                            set = True,
                            infinite = True,
                            number = 56, ), ), )
            )
        else:
            return V0041OpenapiSlurmdbdConfigRespAssociationsInnerMax(
        )
        """

    def testV0041OpenapiSlurmdbdConfigRespAssociationsInnerMax(self):
        """Test V0041OpenapiSlurmdbdConfigRespAssociationsInnerMax"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
