Metadata-Version: 2.4
Name: weglide-client
Version: 0.1.5
Summary: Python client for the WeGlide API. WeGlide is an online platform where glider pilots can share and analyze their flights, participate in competitions, and connect with the global gliding community.
Home-page: 
Author: OpenAPI Generator community
Author-email: OpenAPI Generator Community <team@openapitools.org>
License-Expression: MIT
Project-URL: Homepage, https://github.com/develmusa/weglide-python-client
Project-URL: Issues, https://github.com/develmusa/weglide-python-client/issues
Project-URL: WeGlide, https://weglide.org
Project-URL: Documentation, https://docs.weglide.org/creators/developers.html
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: OS Independent
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: urllib3<3.0.0,>=1.25.3
Requires-Dist: python-dateutil>=2.8.2
Requires-Dist: typing-extensions>=4.7.1
Requires-Dist: pydantic>=2.10.6
Dynamic: author
Dynamic: license-file

# WeGlide Python Client

A Python client library for the [WeGlide](https://weglide.org) API. WeGlide is an online platform where glider pilots can share and analyze their flights, participate in competitions, and connect with the global gliding community.

[![PyPI version](https://img.shields.io/pypi/v/weglide-client.svg)](https://pypi.org/project/weglide-client/)
[![Python Versions](https://img.shields.io/pypi/pyversions/weglide-client.svg)](https://pypi.org/project/weglide-client/)
[![License](https://img.shields.io/github/license/develmusa/weglide-python-client.svg)](https://github.com/develmusa/weglide-python-client/blob/main/LICENSE)

This package is automatically generated by the [OpenAPI Generator](https://openapi-generator.tech) project:

- API version: 0.1.0
- Package version: 0.1.5
- Generator version: 7.12.0

## Requirements

- Python 3.9+
- Dependencies:
  - urllib3 >= 1.25.3, < 3.0.0
  - python-dateutil >= 2.8.2
  - typing-extensions >= 4.7.1
  - pydantic >= 2.10.6

## Installation

### From PyPI

```bash
pip install weglide-client
```

### For Development

Clone the repository and install in development mode:

```bash
git clone https://github.com/develmusa/weglide-python-client.git
cd weglide-python-client
pip install -e .
pip install --group dev .
```

Or using `uv`:

```bash
git clone https://github.com/develmusa/weglide-python-client.git
cd weglide-python-client
uv venv
uv pip install -e .
uv pip install --group dev .
```

## Getting Started

### Basic Usage

```python
import weglide_client
from weglide_client.rest import ApiException
from pprint import pprint

# Configure the API client
# The host defaults to https://api.weglide.org if not specified
configuration = weglide_client.Configuration(
    host="https://api.weglide.org"
)

# Create an API client instance
with weglide_client.ApiClient(configuration) as api_client:
    # Create an instance of an API class
    airport_api = weglide_client.AirportApi(api_client)
    
    try:
        # Get information about a specific airport
        airport_id = 161522  # Example airport ID
        api_response = airport_api.get_airport_v1_airport_id_get(id=airport_id)
        print("Airport information:")
        pprint(api_response)
    except ApiException as e:
        print(f"Exception when calling AirportApi: {e}")
```

### Authentication

For endpoints that require authentication, you'll need to provide an API token:

```python
import weglide_client
from weglide_client.rest import ApiException

# Configure API key authorization
configuration = weglide_client.Configuration(
    host="https://api.weglide.org",
    api_key={"Authorization": "YOUR_API_KEY"},
    api_key_prefix={"Authorization": "Bearer"}
)

# Use the authenticated client
with weglide_client.ApiClient(configuration) as api_client:
    # Access protected endpoints
    flight_api = weglide_client.FlightApi(api_client)
    # ...
```

### Environment Variables

You can also configure the client using environment variables:

```python
import os
import weglide_client

# Set environment variables
os.environ["WEGLIDE_API_URL"] = "https://api.weglide.org"
os.environ["WEGLIDE_API_KEY"] = "YOUR_API_KEY"

# Configure using environment variables
configuration = weglide_client.Configuration()
configuration.host = os.environ.get("WEGLIDE_API_URL", "https://api.weglide.org")
if "WEGLIDE_API_KEY" in os.environ:
    configuration.api_key = {"Authorization": os.environ["WEGLIDE_API_KEY"]}
    configuration.api_key_prefix = {"Authorization": "Bearer"}
```

## Available API Endpoints

The client provides access to the following WeGlide API endpoints:

- **Achievement API**: Access user achievements
- **Aircraft API**: Manage aircraft information
- **Airport API**: Access airport data
- **Auth API**: Handle authentication
- **Badge API**: Access badge information
- **Club API**: Manage club data
- **Comment API**: Handle flight comments
- **Competition API**: Access competition data
- **Flight API**: Manage flight data and uploads
- **User API**: Manage user profiles
- **Waypoint API**: Access waypoint information

For detailed API documentation, visit the [WeGlide API Documentation](https://docs.weglide.org/creators/developers.html).

## Examples

### Fetching Flights

```python
import weglide_client
from weglide_client.rest import ApiException

configuration = weglide_client.Configuration()
with weglide_client.ApiClient(configuration) as api_client:
    flight_api = weglide_client.FlightApi(api_client)
    
    try:
        # Get recent flights
        flights = flight_api.get_flights_v1_flight_get(limit=10)
        for flight in flights:
            print(f"Flight ID: {flight.id}, Pilot: {flight.user.name}, Date: {flight.date}")
    except ApiException as e:
        print(f"Exception when calling FlightApi: {e}")
```

### Working with Airports

```python
import weglide_client
from weglide_client.rest import ApiException

configuration = weglide_client.Configuration()
with weglide_client.ApiClient(configuration) as api_client:
    airport_api = weglide_client.AirportApi(api_client)
    
    try:
        # Search for airports
        airports = airport_api.search_airports_v1_airport_search_get(
            query="Munich",
            limit=5
        )
        for airport in airports:
            print(f"Airport: {airport.name}, ICAO: {airport.icao}, Elevation: {airport.elevation}m")
    except ApiException as e:
        print(f"Exception when calling AirportApi: {e}")
```

## Testing

Run the tests using unittest:

```bash
python -m unittest discover -s test
```

Or using tox to test across multiple Python versions:

```bash
tox
```

## License

This project is licensed under the [MIT License](./LICENSE).

## Links

- [PyPI Package](https://pypi.org/project/weglide-client/)
- [GitHub Repository](https://github.com/develmusa/weglide-python-client)
- [WeGlide Website](https://weglide.org)
- [WeGlide API Documentation](https://docs.weglide.org/creators/developers.html)
