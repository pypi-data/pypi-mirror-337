[project]
name = "solana-fork"
version = "0.36.8"
description = "Solana Python API"
authors = [
    { name = "Michael Huang", email = "michaelhly@gmail.com" },
    { name = "Kevin Heavey", email = "heaveykevin2@gmail.com" },
]
requires-python = "~=3.9"
readme = "README.md"
license = "MIT"
keywords = [
    "solana",
    "blockchain",
    "web3",
]
classifiers = [
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "construct-typing>=0.5.6,<0.6",
    "httpx>=0.23.0",
    "typing-extensions>=4.2.0",
    "websockets>=14,<16",
    "solders>=0.23,<0.27",
]
packages = [{ include = "solana", from = "src" }, { include = "spl", from = "src" }]

[project.urls]
Homepage = "https://github.com/Yolley/solana-py"
Documentation = "https://yolley.github.io/solana-py/"

[dependency-groups]
dev = [
    "pytest>=8,<9",
    "mypy>=1,<2",
    "pyyaml>=6,<7",
    "pytest-docker~=3.2",
    "bump2version>=1.0.1,<2",
    "pytest-asyncio>=0.26.0,<0.27",
    "pytest-cov>=6.0.0,<7",
    "pytest-html>=4.1.1,<5",
    "pytest-xdist>=3.6.1,<4",
    "asyncstdlib>=3.10.2,<4",
    "mkdocstrings>=0.18.0,<0.19",
    "mkdocs-material>=8.2.1,<9",
    "ruff>=0,<1",
]

[tool.hatch.build.targets.sdist]
include = [
    "src/solana",
    "src/spl",
]

[tool.hatch.build.targets.wheel]
include = [
    "src/solana",
    "src/spl",
]

[tool.hatch.build.targets.wheel.sources]
"src/solana" = "solana"
"src/spl" = "spl"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
addopts = [
    "--doctest-modules",
    "-p no:anyio",
    "--cov",
    "--color=yes",
    "--cov-report=xml",
    "--cov-report=html",
    "--container-scope=module", # restart container for each module
    "--dist=loadscope",         # distribute tests by module
    "-vv",
    "-s",
]
asyncio_mode = "auto"
markers = ["integration: mark a test as a integration test."]
testpaths = ["src", "tests"]
#asyncio_default_fixture_loop_scope = "module"
#asyncio_default_test_loop_scope = "module"

[tool.ruff]
line-length = 120
# Assume Python 3.9 (lower bound of supported python versions)
target-version = "py39"

[tool.ruff.lint]
# Enable Pyflakes `E` and `F` codes by default.
select = [
    "A",
    "B",
    "D",
    "E",
    "F",
    "I",
    "ARG",
    "BLE",
    "C4",
    "SIM",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "RUF",
]
ignore = ["D203", "I001"]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"src/**/*.py" = ["PLR0913", "RUF012"]
"src/solana/blockhash.py" = ["A003"]
"src/solana/rpc/api.py" = ["PLR0912"]
"tests/**/*.py" = ["D100", "D103", "ARG001", "PLR2004"]

[tool.pyright]
reportMissingModuleSource = false

[tool.mypy]
check_untyped_defs = true
