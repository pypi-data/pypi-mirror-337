{"src/lib/components/SimpleHierarchy.react.js":{"description":"SimpleHierarchy - A Dash component for displaying hierarchical data with expandable sections\n\nThis component displays hierarchical data with collapsible sections, percentage indicators, \nand progress bars. It is designed to be used as a Dash component.\n\n@param {Object} props - Component props\n@param {string} props.id - The ID used to identify this component in Dash callbacks\n@param {Array} props.data - Array of data items with name, percentage, and optional children\n@param {Object} props.colors - Colors for the progress bars\n@param {string} props.colors.primary - Color for the filled portion of progress bars\n@param {string} props.colors.background - Color for the unfilled portion of progress bars\n@param {Object} props.styles - Custom styles to apply to the container\n@param {string} props.className - CSS class names to apply to the container\n@param {Object} props.selectedItem - Currently selected item (for controlled component)\n@param {Function} props.setProps - Dash callback to update props\n@returns {React.ReactNode} - Rendered hierarchical data component","displayName":"SimpleHierarchy","methods":[],"props":{"id":{"type":{"name":"string"},"required":false,"description":"The ID used to identify this component in Dash callbacks."},"data":{"type":{"name":"arrayOf","value":{"name":"shape","value":{"name":{"name":"string","required":true},"percentage":{"name":"number","required":true},"children":{"name":"array","required":false}}}},"required":false,"description":"The hierarchical data to display.\nEach item should have a name, percentage, and optional children array.","defaultValue":{"value":"[]","computed":false}},"colors":{"type":{"name":"shape","value":{"primary":{"name":"string","required":false},"background":{"name":"string","required":false}}},"required":false,"description":"Colors for the component.","defaultValue":{"value":"{ primary: \"#7c3aed\", background: \"#e5e7eb\" }","computed":false}},"styles":{"type":{"name":"object"},"required":false,"description":"Inline styles to apply to the outer div.","defaultValue":{"value":"{}","computed":false}},"className":{"type":{"name":"string"},"required":false,"description":"CSS class names to apply to the outer div."},"setProps":{"type":{"name":"func"},"required":false,"description":"Dash-assigned callback that should be called to report property changes\nto Dash, to make them available for callbacks."},"selectedItem":{"type":{"name":"object"},"required":false,"description":"Object representing the currently selected item (controlled component pattern).\nThis will be updated when a row is clicked.\nContains all properties of the selected item except the 'children' array.","defaultValue":{"value":"null","computed":false}}}},"src/lib/components/TableHierarchy.react.js":{"description":"TableHierarchy - A Dash component for displaying hierarchical data in a table format\nwith multiple columns, sticky headers, and expandable rows.\n\nThis component displays hierarchical data in a table format with support for:\n- Multiple columns\n- Sticky index column (leftmost)\n- Sticky headers\n- Expandable/collapsible rows\n- Column selection callbacks\n- Resizable index column\n\n@param {Object} props - Component props\n@param {string} props.id - The ID used to identify this component in Dash callbacks\n@param {Array} props.data - Array of data items with arbitrary columns and optional children arrays\n@param {Array} props.columns - Array of column definitions with name and width properties\n@param {string} props.indexColumnName - Name of the column to use as the index (leftmost column)\n@param {Object} props.style - Custom styles to apply to the container\n@param {string} props.className - CSS class names to apply to the container\n@param {Object} props.selectedItem - Currently selected item (for controlled component)\n@param {Object} props.selectedColumn - Currently selected column (for controlled component)\n@param {string} props.indexColumnWidth - The width of the index column \n@param {Function} props.setProps - Dash callback to update props\n@returns {React.ReactNode} - Rendered hierarchical table component","displayName":"TableHierarchy","methods":[],"props":{"id":{"type":{"name":"string"},"required":false,"description":"The ID used to identify this component in Dash callbacks."},"data":{"type":{"name":"array"},"required":false,"description":"The hierarchical data to display.\nEach item should have arbitrary columns and an optional children array.","defaultValue":{"value":"[]","computed":false}},"columns":{"type":{"name":"arrayOf","value":{"name":"shape","value":{"name":{"name":"string","required":true},"width":{"name":"string","required":false}}}},"required":false,"description":"Array of column definitions.\nEach column should have a name and optional width property.\nExample: [{ name: 'Forecast Decomposition', width: '250px' }, { name: 'January 2024' }]","defaultValue":{"value":"[]","computed":false}},"indexColumnName":{"type":{"name":"string"},"required":true,"description":"Name of the column to use as the index (leftmost column).\nThis column will be sticky when horizontally scrolling."},"style":{"type":{"name":"object"},"required":false,"description":"Inline styles to apply to the outer div.","defaultValue":{"value":"{}","computed":false}},"className":{"type":{"name":"string"},"required":false,"description":"CSS class names to apply to the outer div."},"selectedItem":{"type":{"name":"object"},"required":false,"description":"Object representing the currently selected item (controlled component pattern).\nThis will be updated when a row is clicked.\nContains all properties of the selected item except the 'children' array.","defaultValue":{"value":"null","computed":false}},"selectedColumn":{"type":{"name":"shape","value":{"name":{"name":"string","required":false},"data":{"name":"arrayOf","value":{"name":"object"},"required":false}}},"required":false,"description":"Object representing the currently selected column (controlled component pattern).\nThis will be updated when a column header is clicked.\nContains the column name and data which is an array of objects with the index column value and the value for this column.","defaultValue":{"value":"null","computed":false}},"indexColumnWidth":{"type":{"name":"string"},"required":false,"description":"Width of the index column (leftmost column).\nCan be updated by the user via drag-to-resize.","defaultValue":{"value":"'200px'","computed":false}},"setProps":{"type":{"name":"func"},"required":false,"description":"Dash-assigned callback that should be called to report property changes\nto Dash, to make them available for callbacks."}}}}