# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
from .general_agent_config import GeneralAgentConfig
import typing
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class GeneralAgentRequest(UniversalBaseModel):
    """
    A chat request for the Athena SDK.
    """

    config: GeneralAgentConfig
    messages: typing.List[typing.Optional[typing.Any]] = pydantic.Field()
    """
    The messages to send to the agent. Each message should be a string (for text inputs) or a list of multimodal content parts.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
