import numpy as np
from spatial_inventory_rollback.operating_format.output_events import (
    OutputEvents,
)
from spatial_inventory_rollback.operating_format.rollback_inventory import (
    RollbackInventory,
)

from spatial_inventory_rollback.application import log_helper
from spatial_inventory_rollback.operating_format.condensed_n_layer_stack import (  # noqa 501
    CondensedNLayerStack,
)
from spatial_inventory_rollback.operating_format.landscape import Landscape


logger = log_helper.get_logger()


class RollbackOutput:
    def __init__(self, landscape: Landscape, rollback_year: int):
        """Collects and writes out data for new inventory and disturbance
        layers generated by rollback procedures.

        Args:
            landscape (Landscape): the simulation landscape.
            output_path (str): the path to write output files to - defaults to
                the current working directory.
        """
        self._landscape = landscape
        self._rollback_year = rollback_year
        bounds = landscape.stack_bounds
        self._disturbance_data = CondensedNLayerStack(bounds)
        self._last_pass_disturbance_data = CondensedNLayerStack(bounds)
        self._inventory = RollbackInventory(landscape, rollback_year)

        self.classifier_names = self._landscape.get_layer(
            "gcbm_inventory"
        ).classifier_names

    def set_inventory(self, indices: np.ndarray, data: dict):
        """Sets the rolled back age for the pixels in a work unit - either a
        single value or a set of values for each pixel in the work unit.

        Args:
            indices: the work unit indices to record age data for.
            data (dict): name value pairs to set for the specified indices
        """
        self._inventory.set_value(indices, data)

    def create_output_events(self) -> OutputEvents:
        return OutputEvents(self.classifier_names, self._rollback_year)

    def set_disturbances(self, indices: np.ndarray, data: OutputEvents):
        """Adds disturbances to the pixels in a work unit.

        Args:
            indices: the work unit indices to set disturbance events for.
            data (OutputEvents): the disturbance event data to add.
            rollback_year (int): the year to rollback to.
        """

        self._disturbance_data.set_data(indices, data.contemporary_data)
        self._last_pass_disturbance_data.set_data(indices, data.last_pass_data)

    @property
    def landscape(self) -> Landscape:
        return self._landscape

    @property
    def inventory(self) -> RollbackInventory:
        return self._inventory

    @property
    def disturbance_data(self) -> CondensedNLayerStack:
        return self._disturbance_data

    @property
    def last_pass_disturbance_data(self) -> CondensedNLayerStack:
        return self._last_pass_disturbance_data
