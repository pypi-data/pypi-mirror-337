[project]
name = "python-fake"
dynamic = ["version"]
description = "A general purpose mock library for Python"
license = { text = "Apache-2.0" }
authors = [{ name = "Sassan Haradji", email = "me@sassanh.com" }]
maintainers = [{ name = "Sassan Haradji", email = "me@sassanh.com" }]
readme = "README.md"
requires-python = ">=3.11"
keywords = [
  'fake',
  'mock',
  'stub',
  'spy',
  'double',
  'dummy',
  'testing',
  'unittest',
  'pytest',
  'python',
]

[tool.uv]
dev-dependencies = [
  "poethepoet >= 0.24.4",
  "pyright >= 1.1.397",
  "ruff >= 0.11.0",
  "pytest >= 8.1.1",
  "pytest-cov >= 4.1.0",
]

[project.urls]
homepage = 'https://github.com/sassanh/python-fake/'
repository = 'https://github.com/sassanh/python-fake/'
documentation = 'https://github.com/sassanh/python-fake/'
changelog = 'https://github.com/sassanh/python-fake/blob/main/CHANGELOG.md'

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "fake/_version.py"

[tool.hatch.version.raw-options]
local_scheme = "setup_scm_schemes:local_scheme"

[tool.hatch.build]
packages = ["fake"]

[tool.hatch.build.targets.sdist]
packages = ["fake"]

[tool.poe.tasks]
lint = "ruff check . --unsafe-fixes"
typecheck = "pyright -p pyproject.toml ."
test = "pytest --cov --cov-report=term-missing --cov-report=html --cov-report=xml"
sanity = ["typecheck", "lint", "test"]

[tool.ruff]
target-version = 'py311'

[tool.ruff.lint]
select = ['ALL']
ignore = ['INP001', 'PLR0911', 'D203', 'D213', 'UP026']
fixable = ['ALL']
unfixable = []

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"
multiline-quotes = "double"

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "PLR0915", "PLR2004"]

[tool.ruff.format]
quote-style = 'single'

[tool.isort]
profile = "black"

[tool.pyright]
exclude = ['typings', '.venv']
filterwarnings = 'error'

[tool.pytest.ini_options]
log_cli = true
log_cli_level = 'ERROR'
timeout = 1

[tool.coverage.report]
exclude_also = ["if TYPE_CHECKING:"]

[tool.coverage.run]
source = ['fake']
omit = ['fake/_version.py', "setup_scm_schemes.py"]
