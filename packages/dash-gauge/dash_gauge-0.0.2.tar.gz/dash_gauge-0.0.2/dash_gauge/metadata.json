{"src/lib/components/Dash7SegmentDisplay.react.js":{"description":"Dash7SegmentDisplay is a Dash component that wraps the react-7-segment-display library.\nIt renders numeric or hexadecimal values in a 7-segment display style.\nREVERTED: Padding/truncating logic removed. Back to basic string conversion.","displayName":"Dash7SegmentDisplay","methods":[],"props":{"id":{"type":{"name":"string"},"required":false,"description":"The ID used to identify this component in Dash callbacks."},"className":{"type":{"name":"string"},"required":false,"description":"The CSS class name for the container component.","defaultValue":{"value":"''","computed":false}},"style":{"type":{"name":"object"},"required":false,"description":"Inline styles for the container component.","defaultValue":{"value":"{}","computed":false}},"value":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"The value to display. Can be a number (decimal) or a string (decimal or hexadecimal like \"FF\"). Null or undefined will result in a blank display.","defaultValue":{"value":"''","computed":false}},"color":{"type":{"name":"string"},"required":false,"description":"Color of the display segments when turned on.","defaultValue":{"value":"'red'","computed":false}},"height":{"type":{"name":"number"},"required":false,"description":"Total height of the display digits in pixels.","defaultValue":{"value":"50","computed":false}},"count":{"type":{"name":"number"},"required":false,"description":"Number of digits to display.","defaultValue":{"value":"2","computed":false}},"backgroundColor":{"type":{"name":"string"},"required":false,"description":"Color of the display background.","defaultValue":{"value":"undefined","computed":true}},"skew":{"type":{"name":"bool"},"required":false,"description":"Whether the digits should be skewed (slanted).","defaultValue":{"value":"false","computed":false}},"setProps":{"type":{"name":"func"},"required":false,"description":"Dash-assigned callback that should be called to report property changes\nto Dash, to make them available for callbacks. (Not typically used by this component)."}}},"src/lib/components/DashGauge.react.js":{"description":"DashGauge is a Dash component that wraps the react-gauge-component library.\nIt creates customizable gauge charts for data visualization.","displayName":"DashGauge","methods":[],"props":{"id":{"type":{"name":"string"},"required":false,"description":"The ID used to identify this component in Dash callbacks."},"setProps":{"type":{"name":"func"},"required":false,"description":"Dash-assigned callback that should be called to report property changes\nto Dash, to make them available for callbacks."},"componentPath":{"type":{"name":"string"},"required":false,"description":"Component path for internal Dash handling"},"className":{"type":{"name":"string"},"required":false,"description":"CSS class name for the component","defaultValue":{"value":"\"dash-gauge-component\"","computed":false}},"style":{"type":{"name":"object"},"required":false,"description":"Inline style for the component","defaultValue":{"value":"{}","computed":false}},"type":{"type":{"name":"enum","value":[{"value":"\"grafana\"","computed":false},{"value":"\"semicircle\"","computed":false},{"value":"\"radial\"","computed":false}]},"required":false,"description":"The type of the gauge. Can be \"grafana\", \"semicircle\" or \"radial\"","defaultValue":{"value":"\"grafana\"","computed":false}},"marginInPercent":{"type":{"name":"union","value":[{"name":"number"},{"name":"shape","value":{"top":{"name":"number","required":false},"bottom":{"name":"number","required":false},"left":{"name":"number","required":false},"right":{"name":"number","required":false}}}]},"required":false,"description":"Sets the margin for the chart inside the containing SVG element"},"value":{"type":{"name":"number"},"required":false,"description":"The value of the gauge","defaultValue":{"value":"33","computed":false}},"minValue":{"type":{"name":"number"},"required":false,"description":"The minimum value of the gauge","defaultValue":{"value":"0","computed":false}},"maxValue":{"type":{"name":"number"},"required":false,"description":"The maximum value of the gauge","defaultValue":{"value":"100","computed":false}},"arc":{"type":{"name":"shape","value":{"cornerRadius":{"name":"number","required":false},"padding":{"name":"number","required":false},"width":{"name":"number","required":false},"nbSubArcs":{"name":"number","required":false},"gradient":{"name":"bool","required":false},"colorArray":{"name":"arrayOf","value":{"name":"string"},"required":false},"emptyColor":{"name":"string","required":false},"subArcs":{"name":"arrayOf","value":{"name":"shape","value":{"limit":{"name":"number","required":false},"color":{"name":"string","required":false},"length":{"name":"number","required":false},"showTick":{"name":"bool","required":false},"tooltip":{"name":"shape","value":{"text":{"name":"string","required":false},"style":{"name":"object","required":false}},"required":false}}},"required":false}}},"required":false,"description":"Configuration for the arc of the gauge","defaultValue":{"value":"{}","computed":false}},"pointer":{"type":{"name":"shape","value":{"type":{"name":"enum","value":[{"value":"\"needle\"","computed":false},{"value":"\"blob\"","computed":false},{"value":"\"arrow\"","computed":false}],"required":false},"color":{"name":"string","required":false},"hide":{"name":"bool","required":false},"baseColor":{"name":"string","required":false},"length":{"name":"number","required":false},"width":{"name":"number","required":false},"animate":{"name":"bool","required":false},"elastic":{"name":"bool","required":false},"animationDuration":{"name":"number","required":false},"animationDelay":{"name":"number","required":false},"strokeWidth":{"name":"number","required":false}}},"required":false,"description":"Configuration for the pointer of the gauge","defaultValue":{"value":"{}","computed":false}},"labels":{"type":{"name":"shape","value":{"valueLabel":{"name":"shape","value":{"formatTextValue":{"name":"func","required":false},"matchColorWithArc":{"name":"bool","required":false},"maxDecimalDigits":{"name":"number","required":false},"style":{"name":"object","required":false},"hide":{"name":"bool","required":false}},"required":false},"tickLabels":{"name":"shape","value":{"hideMinMax":{"name":"bool","required":false},"type":{"name":"enum","value":[{"value":"\"inner\"","computed":false},{"value":"\"outer\"","computed":false}],"required":false},"ticks":{"name":"arrayOf","value":{"name":"shape","value":{"value":{"name":"number","required":false},"valueConfig":{"name":"object","required":false},"lineConfig":{"name":"object","required":false}}},"required":false},"defaultTickValueConfig":{"name":"object","required":false},"defaultTickLineConfig":{"name":"object","required":false}},"required":false}}},"required":false,"description":"Configuration for the labels of the gauge","defaultValue":{"value":"{}","computed":false}}}},"src/lib/components/DashRCJoystick.react.js":{"description":"DashRCJoystick is a Dash component that wraps the rc-joystick library.\nIt provides an interactive joystick control.","displayName":"DashRCJoystick","methods":[],"props":{"id":{"type":{"name":"string"},"required":false,"description":"The ID used to identify this component in Dash callbacks."},"className":{"type":{"name":"string"},"required":false,"description":"The CSS class name for the container component."},"style":{"type":{"name":"object"},"required":false,"description":"Inline styles for the container component."},"baseRadius":{"type":{"name":"number"},"required":false,"description":"Joystick's base radius.","defaultValue":{"value":"75","computed":false}},"controllerRadius":{"type":{"name":"number"},"required":false,"description":"Joystick controller's radius.","defaultValue":{"value":"35","computed":false}},"controllerClassName":{"type":{"name":"string"},"required":false,"description":"Joystick controller's extra className."},"insideMode":{"type":{"name":"bool"},"required":false,"description":"Controller will always be inside joystick's base if true.","defaultValue":{"value":"false","computed":false}},"throttle":{"type":{"name":"number"},"required":false,"description":"Throttle time for all change events (in milliseconds).","defaultValue":{"value":"0","computed":false}},"directionCountMode":{"type":{"name":"enum","value":[{"value":"'Five'","computed":false},{"value":"'Nine'","computed":false}]},"required":false,"description":"Direction count mode: 'Five' or 'Nine'.\n'Five': Center, Right, Top, Left, Bottom\n'Nine': Center, Right, RightTop, Top, TopLeft, Left, LeftBottom, Bottom, BottomRight","defaultValue":{"value":"'Five'","computed":false}},"angle":{"type":{"name":"number"},"required":false,"description":"[Readonly] The current angle of the joystick controller (in degrees).\nUndefined when the direction is 'Center'.","defaultValue":{"value":"undefined","computed":true}},"direction":{"type":{"name":"string"},"required":false,"description":"[Readonly] The current direction of the joystick controller.\nPossible values depend on directionCountMode.","defaultValue":{"value":"'Center'","computed":false}},"distance":{"type":{"name":"number"},"required":false,"description":"[Readonly] The current distance of the controller from the center.","defaultValue":{"value":"0","computed":false}},"setProps":{"type":{"name":"func"},"required":false,"description":"Dash-assigned callback that should be called to report property changes\nto Dash, to make them available for callbacks."}}},"src/lib/components/DashRotaryKnob.react.js":{"description":"","displayName":"DashRotaryKnob","methods":[],"props":{"id":{"type":{"name":"string"},"required":false,"description":""},"className":{"type":{"name":"string"},"required":false,"description":""},"style":{"type":{"name":"object"},"required":false,"description":""},"value":{"type":{"name":"number"},"required":false,"description":""},"min":{"type":{"name":"number"},"required":false,"description":""},"max":{"type":{"name":"number"},"required":false,"description":""},"step":{"type":{"name":"number"},"required":false,"description":""},"skinName":{"type":{"name":"string"},"required":false,"description":""},"format":{"type":{"name":"string"},"required":false,"description":""},"preciseMode":{"type":{"name":"bool"},"required":false,"description":""},"unlockDistance":{"type":{"name":"number"},"required":false,"description":""},"setProps":{"type":{"name":"func"},"required":false,"description":""}}},"src/lib/components/DashThermostat.react.js":{"description":"DashThermostat is a Dash component that wraps the react-thermostat library.\nIt provides an interactive thermostat control for temperature or other values.","displayName":"DashThermostat","methods":[],"props":{"id":{"type":{"name":"string"},"required":false,"description":"The ID used to identify this component in Dash callbacks."},"className":{"type":{"name":"string"},"required":false,"description":"The CSS class name for the component."},"style":{"type":{"name":"object"},"required":false,"description":"Inline styles for the component."},"value":{"type":{"name":"number"},"required":true,"description":"The current temperature value."},"min":{"type":{"name":"number"},"required":false,"description":"The minimum value of the thermostat.","defaultValue":{"value":"0","computed":false}},"max":{"type":{"name":"number"},"required":false,"description":"The maximum value of the thermostat.","defaultValue":{"value":"100","computed":false}},"valueSuffix":{"type":{"name":"string"},"required":false,"description":"The suffix to display after the value (like \u00b0C, \u00b0F, etc).","defaultValue":{"value":"'\u00b0'","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"Whether the thermostat is disabled.","defaultValue":{"value":"false","computed":false}},"handle":{"type":{"name":"shape","value":{"size":{"name":"number","required":false},"colors":{"name":"shape","value":{"handle":{"name":"string","required":false},"icon":{"name":"string","required":false},"pulse":{"name":"string","required":false}},"required":false}}},"required":false,"description":"Configuration for the handle."},"track":{"type":{"name":"shape","value":{"colors":{"name":"arrayOf","value":{"name":"string"},"required":false},"thickness":{"name":"number","required":false},"markers":{"name":"shape","value":{"enabled":{"name":"bool","required":false},"every":{"name":"number","required":false},"count":{"name":"number","required":false},"main":{"name":"shape","value":{"color":{"name":"string","required":false},"length":{"name":"number","required":false},"thickness":{"name":"number","required":false}},"required":false},"sub":{"name":"shape","value":{"color":{"name":"string","required":false},"length":{"name":"number","required":false},"thickness":{"name":"number","required":false}},"required":false}},"required":false}}},"required":false,"description":"Configuration for the track."},"setProps":{"type":{"name":"func"},"required":false,"description":"Dash-assigned callback that should be called to report property changes\nto Dash, to make them available for callbacks."}}}}