[build-system]
requires = ["hatchling", "black", "lxml", "requests", "pytest", "ruff"]
build-backend = "hatchling.build"

[project]
name = "python-wayland-extra"
dynamic = ["version"]
description = 'An implementation of the Wayland & Hyprland protocols with no external dependencies. A Python replacement for libwayland, not a wrapper for it.'
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE"}
keywords = []
authors = [
  { name = "Graham King", email = "grking.email@gmail.com" },
  { name = "Dennis Rijsdijk", email = "hello@dennis.gg" }
]
classifiers = [
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Development Status :: 3 - Alpha",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython"
]
dependencies = []

[project.optional-dependencies]
build = ["lxml", "requests"]

[project.urls]
Homepage = "https://github.com/dennisrijsdijk/python-wayland-extra"
Documentation = "https://github.com/dennisrijsdijk/python-wayland-extra#readme"
Issues = "https://github.com/dennisrijsdijk/python-wayland-extra/issues"
Source = "https://github.com/dennisrijsdijk/python-wayland-extra"
Changelog = "https://github.com/dennisrijsdijk/python-wayland-extra/blob/main/CHANGELOG.md"

[tool.hatch.version]
path = "wayland/__about__.py"

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:wayland tests}"

[tool.hatch.build.targets.sdist]
exclude = [
  "/.vscode",
  "example.py"
]

[tool.hatch.build.targets.wheel]
packages = ["wayland"]
exclude = [
  "wayland/hyprland-protocols"
]

[tool.hatch.build.targets.wheel.force-include]
  "wayland/hyprland-protocols/protocols" = "wayland/hyprland-protocols/protocols"

[tool.coverage.run]
source_pkgs = ["wayland", "tests"]
branch = true
parallel = true
omit = [
  "wayland/__about__.py",
]

[tool.coverage.paths]
wayland = ["wayland"]
tests = ["tests", "*/wayland/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false

[tool.ruff.lint]
preview = false
extend-select = ["C901"]

[tool.ruff.lint.extend-per-file-ignores]
"__init__.py" = ["F403"]  # import *
"parser.py" = ["S320", "SLF001"]  # lxml
"proxy.py" = ["SLF001"]  # private members
"log.py" = ["FBT001"]  # bool param
"typehint.py" = ["FBT001"]  # bool param
"unixsocket.py" = ["BLE001"]  # blind exception
"__main__.py" = ["T201"]  # print
"*" = ["ARG001", "TRY003", "A002"]  # unused argument, builtin

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
    "--capture=no",
    "-q"
]

[tool.ruff]
line-length = 88
exclude = [
  "wayland/__init__.pyi",
]

[tool.pylint]
ignore-patterns = "*.pyi"
