# Generated by Django 5.1.7 on 2025-03-28 14:45

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ETFDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(blank=True, choices=[('Allianz', 'Allianz'), ('American Century', 'American Century'), ('ARK', 'ARK'), ('Capital Group', 'Capital Group'), ('Digital Currency Group', 'Digital Currency Group'), ('Dimensional', 'Dimensional'), ('Direxion', 'Direxion'), ('Exchange Traded Concepts', 'Exchange Traded Concepts'), ('Fidelity', 'Fidelity'), ('Franklin Templeton', 'Franklin Templeton'), ('GraniteShares', 'GraniteShares'), ('Innovator', 'Innovator'), ('Invesco', 'Invesco'), ('iShares', 'iShares'), ('Janus Henderson', 'Janus Henderson'), ('JPMorgan', 'JPMorgan'), ('Mirae Asset', 'Mirae Asset'), ('Morgan Stanley', 'Morgan Stanley'), ('New York Life', 'New York Life'), ('ProShares', 'ProShares'), ('Rafferty', 'Rafferty'), ('Schwab', 'Schwab'), ('SPDR', 'SPDR'), ('SS&C', 'SS&C'), ('Toroso', 'Toroso'), ('VanEck', 'VanEck'), ('Vanguard', 'Vanguard'), ('WisdomTree', 'WisdomTree'), ('Xtrackers', 'Xtrackers'), ('YieldMax', 'YieldMax')], max_length=50, null=True)),
                ('symbol', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('asset_class', models.CharField(blank=True, max_length=12, null=True)),
                ('total_assets', models.CharField(blank=True, max_length=100, null=True)),
                ('inception', models.CharField(blank=True, max_length=10, null=True)),
                ('ter', models.CharField(blank=True, max_length=50, null=True)),
                ('pe_ratio', models.FloatField(blank=True, null=True)),
                ('beta', models.FloatField(blank=True, null=True)),
                ('last_updated', models.DateField(auto_now=True)),
            ],
            options={
                'verbose_name': 'ETF Detail',
                'verbose_name_plural': 'ETF Details',
                'indexes': [models.Index(fields=['symbol'], name='data_etfdet_symbol_963090_idx'), models.Index(fields=['provider'], name='data_etfdet_provide_be95e1_idx')],
            },
        ),
        migrations.CreateModel(
            name='ETFTechnicalIndicator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True)),
                ('sma_5', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('sma_10', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('sma_20', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('sma_50', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('sma_200', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('ema_12', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('ema_26', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('macd', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('macd_signal', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('macd_histogram', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('bb_upper', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('bb_middle', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('bb_lower', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('rsi_14', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('stoch_k', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('stoch_d', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('atr_14', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('obv', models.BigIntegerField(blank=True, null=True)),
                ('etf', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='technical_indicators', to='data.etfdetails')),
            ],
            options={
                'verbose_name': 'ETF Technical Indicator',
                'verbose_name_plural': 'ETF Technical Indicators',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='ETFSignal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True)),
                ('signal_type', models.CharField(choices=[('BUY', 'Buy'), ('SELL', 'Sell'), ('HOLD', 'Hold'), ('STRONG_BUY', 'Strong Buy'), ('STRONG_SELL', 'Strong Sell')], max_length=20)),
                ('signal_source', models.CharField(choices=[('SMA_CROSS', 'SMA Crossover'), ('MACD', 'MACD'), ('RSI', 'RSI'), ('BB', 'Bollinger Bands'), ('STOCH', 'Stochastic'), ('MULTI', 'Multiple Indicators')], max_length=20)),
                ('confidence', models.DecimalField(decimal_places=2, help_text='Confidence level from 0-100%', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100'))])),
                ('description', models.TextField(help_text='Description of the signal and reasoning')),
                ('etf', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='signals', to='data.etfdetails')),
                ('indicator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='generated_signals', to='data.etftechnicalindicator')),
            ],
            options={
                'verbose_name': 'ETF Signal',
                'verbose_name_plural': 'ETF Signals',
                'ordering': ['-date', '-confidence'],
            },
        ),
        migrations.CreateModel(
            name='ETFTopHolding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=255)),
                ('holding_percent', models.DecimalField(decimal_places=4, max_digits=6, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100'))])),
                ('etf', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='top_holdings', to='data.etfdetails')),
            ],
            options={
                'verbose_name': 'ETF Top Holding',
                'verbose_name_plural': 'ETF Top Holdings',
                'ordering': ['-holding_percent'],
            },
        ),
        migrations.CreateModel(
            name='ETFAssetAllocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allocation', models.CharField(max_length=100)),
                ('allocation_percent', models.DecimalField(decimal_places=4, max_digits=6, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100'))])),
                ('etf', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asset_allocations', to='data.etfdetails')),
            ],
            options={
                'verbose_name': 'ETF Asset Allocation',
                'verbose_name_plural': 'ETF Asset Allocations',
                'ordering': ['-allocation_percent'],
                'unique_together': {('etf', 'allocation')},
            },
        ),
        migrations.CreateModel(
            name='ETFPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True)),
                ('open', models.DecimalField(decimal_places=2, max_digits=10)),
                ('high', models.DecimalField(decimal_places=2, max_digits=10)),
                ('low', models.DecimalField(decimal_places=2, max_digits=10)),
                ('close', models.DecimalField(decimal_places=2, max_digits=10)),
                ('volume', models.BigIntegerField()),
                ('etf', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prices', to='data.etfdetails')),
            ],
            options={
                'verbose_name': 'ETF Price',
                'verbose_name_plural': 'ETF Prices',
                'ordering': ['-date'],
                'unique_together': {('etf', 'date')},
            },
        ),
        migrations.CreateModel(
            name='ETFSectorWeighting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sector', models.CharField(max_length=100)),
                ('weighting_percent', models.DecimalField(decimal_places=4, max_digits=6, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100'))])),
                ('etf', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sector_weightings', to='data.etfdetails')),
            ],
            options={
                'verbose_name': 'ETF Sector Weighting',
                'verbose_name_plural': 'ETF Sector Weightings',
                'ordering': ['-weighting_percent'],
                'unique_together': {('etf', 'sector')},
            },
        ),
        migrations.AddIndex(
            model_name='etftechnicalindicator',
            index=models.Index(fields=['etf', 'date'], name='data_etftec_etf_id_3c2748_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='etftechnicalindicator',
            unique_together={('etf', 'date')},
        ),
        migrations.AddIndex(
            model_name='etfsignal',
            index=models.Index(fields=['etf', 'date'], name='data_etfsig_etf_id_f5b3de_idx'),
        ),
        migrations.AddIndex(
            model_name='etfsignal',
            index=models.Index(fields=['signal_type'], name='data_etfsig_signal__f60802_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='etftopholding',
            unique_together={('etf', 'symbol')},
        ),
    ]
