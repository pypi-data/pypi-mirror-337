# coding: utf-8

"""
    WeGlide

    Quantifying airsports

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from weglide_client.models.airport import Airport

class TestAirport(unittest.TestCase):
    """Airport unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Airport:
        """Test Airport
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Airport`
        """
        model = Airport()
        if include_optional:
            return Airport(
                id = 56,
                name = '',
                region = '',
                openaip_id = '',
                icao = '',
                kind = '',
                openaip_name = '',
                launches = 56,
                launches_2019 = 56,
                geom = {
                    'key' : null
                    },
                elevation = 1.337,
                timezone = '',
                reign = 56,
                radio_category = '',
                radio_frequency = '',
                radio_type = '',
                radio_description = '',
                rwy_name = '',
                rwy_sfc = '',
                rwy_direction = 56,
                rwy_length = 1.337,
                rwy_width = 1.337,
                rwy_strength = ''
            )
        else:
            return Airport(
                id = 56,
                name = '',
                region = '',
                kind = '',
                openaip_name = '',
                geom = {
                    'key' : null
                    },
        )
        """

    def testAirport(self):
        """Test Airport"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
