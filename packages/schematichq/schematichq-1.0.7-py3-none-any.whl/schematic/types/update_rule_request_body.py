# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .create_or_update_condition_group_request_body import (
    CreateOrUpdateConditionGroupRequestBody,
)
from .create_or_update_condition_request_body import CreateOrUpdateConditionRequestBody
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class UpdateRuleRequestBody(UniversalBaseModel):
    condition_groups: typing.List[CreateOrUpdateConditionGroupRequestBody]
    conditions: typing.List[CreateOrUpdateConditionRequestBody]
    name: str
    priority: int
    value: bool

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
